//
// Generated file, do not edit! Created by nedtool 5.7 from baseMessage.msg.
//

#ifndef __BASEMESSAGE_M_H
#define __BASEMESSAGE_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0507
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
    #include "messages.h"
// }}

/**
 * Class generated from <tt>baseMessage.msg:4</tt> by nedtool.
 * <pre>
 * packet BaseMessage
 * {
 *     int destination;
 *     int messageType;
 *     //int hops[20];
 *     int hopCount;
 * }
 * </pre>
 */
class BaseMessage : public ::omnetpp::cPacket
{
  protected:
    int destination;
    int messageType;
    int hopCount;

  private:
    void copy(const BaseMessage& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const BaseMessage&);

  public:
    BaseMessage(const char *name=nullptr, short kind=0);
    BaseMessage(const BaseMessage& other);
    virtual ~BaseMessage();
    BaseMessage& operator=(const BaseMessage& other);
    virtual BaseMessage *dup() const override {return new BaseMessage(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual int getDestination() const;
    virtual void setDestination(int destination);
    virtual int getMessageType() const;
    virtual void setMessageType(int messageType);
    virtual int getHopCount() const;
    virtual void setHopCount(int hopCount);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const BaseMessage& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, BaseMessage& obj) {obj.parsimUnpack(b);}


#endif // ifndef __BASEMESSAGE_M_H

