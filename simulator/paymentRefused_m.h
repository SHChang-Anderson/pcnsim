//
// Generated file, do not edit! Created by opp_msgtool 6.0 from paymentRefused.msg.
//

#ifndef __PAYMENTREFUSED_M_H
#define __PAYMENTREFUSED_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// opp_msgtool version check
#define MSGC_VERSION 0x0600
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgtool: 'make clean' should help.
#endif

class PaymentRefused;
// cplusplus {{
    #include <string>
    #include "messages.h"
// }}

/**
 * Class generated from <tt>paymentRefused.msg:6</tt> by opp_msgtool.
 * <pre>
 * packet PaymentRefused
 * {
 *     string paymentHash;
 *     string errorReason;
 *     double value;
 * }
 * </pre>
 */
class PaymentRefused : public ::omnetpp::cPacket
{
  protected:
    omnetpp::opp_string paymentHash;
    omnetpp::opp_string errorReason;
    double value = 0;

  private:
    void copy(const PaymentRefused& other);

  protected:
    bool operator==(const PaymentRefused&) = delete;

  public:
    PaymentRefused(const char *name=nullptr, short kind=0);
    PaymentRefused(const PaymentRefused& other);
    virtual ~PaymentRefused();
    PaymentRefused& operator=(const PaymentRefused& other);
    virtual PaymentRefused *dup() const override {return new PaymentRefused(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    virtual const char * getPaymentHash() const;
    virtual void setPaymentHash(const char * paymentHash);

    virtual const char * getErrorReason() const;
    virtual void setErrorReason(const char * errorReason);

    virtual double getValue() const;
    virtual void setValue(double value);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const PaymentRefused& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, PaymentRefused& obj) {obj.parsimUnpack(b);}


namespace omnetpp {

template<> inline PaymentRefused *fromAnyPtr(any_ptr ptr) { return check_and_cast<PaymentRefused*>(ptr.get<cObject>()); }

}  // namespace omnetpp

#endif // ifndef __PAYMENTREFUSED_M_H

