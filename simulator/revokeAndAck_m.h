//
// Generated file, do not edit! Created by opp_msgtool 6.0 from revokeAndAck.msg.
//

#ifndef __REVOKEANDACK_M_H
#define __REVOKEANDACK_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// opp_msgtool version check
#define MSGC_VERSION 0x0600
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgtool: 'make clean' should help.
#endif

class revokeAndAck;
#include "commitmentSigned_m.h" // import commitmentSigned

/**
 * Class generated from <tt>revokeAndAck.msg:20</tt> by opp_msgtool.
 * <pre>
 * packet revokeAndAck
 * {
 *     HTLCVector HTLCs;
 *     int ackId;
 * }
 * </pre>
 */
class revokeAndAck : public ::omnetpp::cPacket
{
  protected:
    HTLCVector HTLCs;
    int ackId = 0;

  private:
    void copy(const revokeAndAck& other);

  protected:
    bool operator==(const revokeAndAck&) = delete;

  public:
    revokeAndAck(const char *name=nullptr, short kind=0);
    revokeAndAck(const revokeAndAck& other);
    virtual ~revokeAndAck();
    revokeAndAck& operator=(const revokeAndAck& other);
    virtual revokeAndAck *dup() const override {return new revokeAndAck(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    virtual const HTLCVector& getHTLCs() const;
    virtual HTLCVector& getHTLCsForUpdate() { return const_cast<HTLCVector&>(const_cast<revokeAndAck*>(this)->getHTLCs());}
    virtual void setHTLCs(const HTLCVector& HTLCs);

    virtual int getAckId() const;
    virtual void setAckId(int ackId);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const revokeAndAck& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, revokeAndAck& obj) {obj.parsimUnpack(b);}


namespace omnetpp {

template<> inline revokeAndAck *fromAnyPtr(any_ptr ptr) { return check_and_cast<revokeAndAck*>(ptr.get<cObject>()); }

}  // namespace omnetpp

#endif // ifndef __REVOKEANDACK_M_H

