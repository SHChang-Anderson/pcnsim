00:02:12 **** Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
baseMessage_m.cpp
updateFulfillHTLC_m.cpp
Creating executable: out/gcc-release//simulator
00:05:37 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
baseMessage_m.cpp
updateFulfillHTLC_m.cpp
Creating executable: out/gcc-release//simulator
00:09:25 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
baseMessage_m.cpp
updateFulfillHTLC_m.cpp
Creating executable: out/gcc-release//simulator
00:09:30 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
make: Nothing to be done for 'all'.
00:09:31 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
make: Nothing to be done for 'all'.
00:14:51 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
FullNode.cpp: In member function ‘virtual void FullNode::refreshDisplay() const’:
FullNode.cpp:646:32: error: ‘it’ was not declared in this scope; did you mean ‘int’?
  646 |     std::string neighborName = it.first;
      |                                ^~
      |                                int
make: *** [Makefile:129: out/gcc-release//FullNode.o] Error 1
"make MODE=release all" terminated with exit code 2. Build might be incomplete.
00:15:24 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
FullNode.cpp: In member function ‘virtual void FullNode::refreshDisplay() const’:
FullNode.cpp:650:33: error: ‘const class PaymentChannel’ has no member named ‘getLocalGate’
  650 |         cGate *gate = it.second.getLocalGate();
      |                                 ^~~~~~~~~~~~
FullNode.cpp:652:17: error: ‘buf’ was not declared in this scope
  652 |         sprintf(buf, "%0.1f\n", capacity);
      |                 ^~~
make: *** [Makefile:129: out/gcc-release//FullNode.o] Error 1
"make MODE=release all" terminated with exit code 2. Build might be incomplete.
00:25:32 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
crypto.cpp
FullNode.cpp
netBuilder.cpp
PaymentChannel.cpp
payment_m.cpp
Creating executable: out/gcc-release//simulator
00:34:44 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
make: Nothing to be done for 'all'.
00:38:27 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
make: Nothing to be done for 'all'.
00:42:33 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
make: Nothing to be done for 'all'.
00:44:34 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
make: Nothing to be done for 'all'.
14:21:43 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
MSGC: commitmentSigned.msg
MSGC: updateFailHTLC.msg
FullNode.cpp
In file included from FullNode.cpp:9:
PaymentChannel.h:76:66: error: ‘BaseMessag’ was not declared in this scope; did you mean ‘BaseMessage’?
   76 |          virtual void setHTLCsWaitingForAck (int id, std::vector<BaseMessag *> vector) { this->_HTLCsWaitingForAck[id] = vector;};
      |                                                                  ^~~~~~~~~~
      |                                                                  BaseMessage
PaymentChannel.h:76:78: error: template argument 1 is invalid
   76 |          virtual void setHTLCsWaitingForAck (int id, std::vector<BaseMessag *> vector) { this->_HTLCsWaitingForAck[id] = vector;};
      |                                                                              ^
PaymentChannel.h:76:78: error: template argument 2 is invalid
PaymentChannel.h:76:66: error: ‘BaseMessag’ was not declared in this scope; did you mean ‘BaseMessage’?
   76 |          virtual void setHTLCsWaitingForAck (int id, std::vector<BaseMessag *> vector) { this->_HTLCsWaitingForAck[id] = vector;};
      |                                                                  ^~~~~~~~~~
      |                                                                  BaseMessage
PaymentChannel.h:76:78: error: template argument 1 is invalid
   76 |          virtual void setHTLCsWaitingForAck (int id, std::vector<BaseMessag *> vector) { this->_HTLCsWaitingForAck[id] = vector;};
      |                                                                              ^
PaymentChannel.h:76:78: error: template argument 2 is invalid
PaymentChannel.h:76:66: error: ‘BaseMessag’ was not declared in this scope; did you mean ‘BaseMessage’?
   76 |          virtual void setHTLCsWaitingForAck (int id, std::vector<BaseMessag *> vector) { this->_HTLCsWaitingForAck[id] = vector;};
      |                                                                  ^~~~~~~~~~
      |                                                                  BaseMessage
PaymentChannel.h:76:78: error: template argument 1 is invalid
   76 |          virtual void setHTLCsWaitingForAck (int id, std::vector<BaseMessag *> vector) { this->_HTLCsWaitingForAck[id] = vector;};
      |                                                                              ^
PaymentChannel.h:76:78: error: template argument 2 is invalid
PaymentChannel.h:76:59: error: ‘std::vector’ is not a type
   76 |          virtual void setHTLCsWaitingForAck (int id, std::vector<BaseMessag *> vector) { this->_HTLCsWaitingForAck[id] = vector;};
      |                                                           ^~~~~~
PaymentChannel.h:76:65: error: expected ‘,’ or ‘...’ before ‘<’ token
   76 |          virtual void setHTLCsWaitingForAck (int id, std::vector<BaseMessag *> vector) { this->_HTLCsWaitingForAck[id] = vector;};
      |                                                                 ^
PaymentChannel.h: In member function ‘virtual void PaymentChannel::setHTLCsWaitingForAck(int, int)’:
PaymentChannel.h:76:122: error: ‘vector’ was not declared in this scope; did you mean ‘std::vector’?
   76 |          virtual void setHTLCsWaitingForAck (int id, std::vector<BaseMessag *> vector) { this->_HTLCsWaitingForAck[id] = vector;};
      |                                                                                                                          ^~~~~~
      |                                                                                                                          std::vector
In file included from /usr/include/c++/10/vector:67,
                 from /home/gabriel/omnetpp-5.7/include/omnetpp/onstartup.h:19,
                 from /home/gabriel/omnetpp-5.7/include/omnetpp/globals.h:21,
                 from /home/gabriel/omnetpp-5.7/include/omnetpp/cobjectfactory.h:20,
                 from /home/gabriel/omnetpp-5.7/include/omnetpp.h:30,
                 from globals.h:3,
                 from FullNode.cpp:1:
/usr/include/c++/10/bits/stl_vector.h:389:11: note: ‘std::vector’ declared here
  389 |     class vector : protected _Vector_base<_Tp, _Alloc>
      |           ^~~~~~
FullNode.cpp: In member function ‘virtual void FullNode::handleMessage(omnetpp::cMessage*)’:
FullNode.cpp:249:81: error: cannot convert ‘UpdateAddHTLC*’ to ‘BaseMessage*’
  249 |             _paymentChannels[firstHop].setPendingHTLC(invMsg->getPaymentHash(), firstHTLC);
      |                                                                                 ^~~~~~~~~
      |                                                                                 |
      |                                                                                 UpdateAddHTLC*
In file included from FullNode.cpp:9:
PaymentChannel.h:65:77: note:   initializing argument 2 of ‘virtual void PaymentChannel::setPendingHTLC(std::string, BaseMessage*)’
   65 |          virtual void setPendingHTLC (std::string paymentHash, BaseMessage *htlc) { this->_pendingHTLCs[paymentHash] = htlc; };
      |                                                                ~~~~~~~~~~~~~^~~~
FullNode.cpp:282:84: error: ‘BaseMsg’ was not declared in this scope; did you mean ‘baseMsg’?
  282 |                 _paymentChannels[sender].setPendingHTLC(HTLCMsg->getPaymentHash(), BaseMsg);
      |                                                                                    ^~~~~~~
      |                                                                                    baseMsg
FullNode.cpp:479:127: error: conversion from ‘vector<BaseMessage*>’ to non-scalar type ‘vector<UpdateAddHTLC*>’ requested
  479 |             std::vector<UpdateAddHTLC *> HTLCs = _paymentChannels[baseMsg->getSenderModule()->getName()].getHTLCsWaitingForAck(ackId);
      |                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~
FullNode.cpp:555:67: error: invalid conversion from ‘omnetpp::cPacket*’ to ‘BaseMessage*’ [-fpermissive]
  555 |                 HTLCIterator = HTLCs[index]->getEncapsulatedPacket();
      |                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
      |                                                                   |
      |                                                                   omnetpp::cPacket*
FullNode.cpp:556:53: error: ‘class BaseMessage’ has no member named ‘getPaymentHash’
  556 |                 paymentHashIterator = HTLCIterator->getPaymentHash();
      |                                                     ^~~~~~~~~~~~~~
FullNode.cpp:566:72: error: ‘class BaseMessage’ has no member named ‘getValue’
  566 |                     EV << "Decreasing " + std::to_string(HTLCIterator->getValue()) + "at node " + getName() + "for payment hash " + HTLCIterator->getPaymentHash() + "\n";
      |                                                                        ^~~~~~~~
FullNode.cpp:566:147: error: ‘class BaseMessage’ has no member named ‘getPaymentHash’
  566 |                     EV << "Decreasing " + std::to_string(HTLCIterator->getValue()) + "at node " + getName() + "for payment hash " + HTLCIterator->getPaymentHash() + "\n";
      |                                                                                                                                                   ^~~~~~~~~~~~~~
FullNode.cpp:568:69: error: ‘class BaseMessage’ has no member named ‘getValue’
  568 |                     if (!updatePaymentChannel(sender, HTLCIterator->getValue(), false)) {
      |                                                                     ^~~~~~~~
FullNode.cpp:573:97: error: ‘class BaseMessage’ has no member named ‘getValue’
  573 |                         _paymentChannels[sender].setInFlight(paymentHashIterator, HTLCIterator->getValue());
      |                                                                                                 ^~~~~~~~
FullNode.cpp:578:74: error: ‘class BaseMessage’ has no member named ‘getPaymentHash’
  578 |                 _paymentChannels[sender].removePendingHTLC(HTLCIterator->getPaymentHash());
      |                                                                          ^~~~~~~~~~~~~~
FullNode.cpp:583:63: error: ‘class BaseMessage’ has no member named ‘getPaymentHash’
  583 |                     if (paymentHashIterator2 != HTLCIterator->getPaymentHash()){
      |                                                               ^~~~~~~~~~~~~~
FullNode.cpp: In member function ‘virtual bool FullNode::tryCommitTxOrFail(std::string, bool)’:
FullNode.cpp:749:76: error: cannot convert ‘std::vector<BaseMessage*>’ to ‘int’
  749 |         _paymentChannels[sender].setHTLCsWaitingForAck(localCommitCounter, HTLCVector);
      |                                                                            ^~~~~~~~~~
      |                                                                            |
      |                                                                            std::vector<BaseMessage*>
In file included from FullNode.cpp:9:
PaymentChannel.h:76:54: note:   initializing argument 2 of ‘virtual void PaymentChannel::setHTLCsWaitingForAck(int, int)’
   76 |          virtual void setHTLCsWaitingForAck (int id, std::vector<BaseMessag *> vector) { this->_HTLCsWaitingForAck[id] = vector;};
      |                                                      ^~~~~~~~~~~
make: *** [Makefile:131: out/gcc-release//FullNode.o] Error 1
"make MODE=release all" terminated with exit code 2. Build might be incomplete.
14:25:07 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
In file included from FullNode.cpp:9:
PaymentChannel.h:76:66: error: ‘BaseMessag’ was not declared in this scope; did you mean ‘BaseMessage’?
   76 |          virtual void setHTLCsWaitingForAck (int id, std::vector<BaseMessag *> vector) { this->_HTLCsWaitingForAck[id] = vector;};
      |                                                                  ^~~~~~~~~~
      |                                                                  BaseMessage
PaymentChannel.h:76:78: error: template argument 1 is invalid
   76 |          virtual void setHTLCsWaitingForAck (int id, std::vector<BaseMessag *> vector) { this->_HTLCsWaitingForAck[id] = vector;};
      |                                                                              ^
PaymentChannel.h:76:78: error: template argument 2 is invalid
PaymentChannel.h:76:66: error: ‘BaseMessag’ was not declared in this scope; did you mean ‘BaseMessage’?
   76 |          virtual void setHTLCsWaitingForAck (int id, std::vector<BaseMessag *> vector) { this->_HTLCsWaitingForAck[id] = vector;};
      |                                                                  ^~~~~~~~~~
      |                                                                  BaseMessage
PaymentChannel.h:76:78: error: template argument 1 is invalid
   76 |          virtual void setHTLCsWaitingForAck (int id, std::vector<BaseMessag *> vector) { this->_HTLCsWaitingForAck[id] = vector;};
      |                                                                              ^
PaymentChannel.h:76:78: error: template argument 2 is invalid
PaymentChannel.h:76:66: error: ‘BaseMessag’ was not declared in this scope; did you mean ‘BaseMessage’?
   76 |          virtual void setHTLCsWaitingForAck (int id, std::vector<BaseMessag *> vector) { this->_HTLCsWaitingForAck[id] = vector;};
      |                                                                  ^~~~~~~~~~
      |                                                                  BaseMessage
PaymentChannel.h:76:78: error: template argument 1 is invalid
   76 |          virtual void setHTLCsWaitingForAck (int id, std::vector<BaseMessag *> vector) { this->_HTLCsWaitingForAck[id] = vector;};
      |                                                                              ^
PaymentChannel.h:76:78: error: template argument 2 is invalid
PaymentChannel.h:76:59: error: ‘std::vector’ is not a type
   76 |          virtual void setHTLCsWaitingForAck (int id, std::vector<BaseMessag *> vector) { this->_HTLCsWaitingForAck[id] = vector;};
      |                                                           ^~~~~~
PaymentChannel.h:76:65: error: expected ‘,’ or ‘...’ before ‘<’ token
   76 |          virtual void setHTLCsWaitingForAck (int id, std::vector<BaseMessag *> vector) { this->_HTLCsWaitingForAck[id] = vector;};
      |                                                                 ^
PaymentChannel.h: In member function ‘virtual void PaymentChannel::setHTLCsWaitingForAck(int, int)’:
PaymentChannel.h:76:122: error: ‘vector’ was not declared in this scope; did you mean ‘std::vector’?
   76 |          virtual void setHTLCsWaitingForAck (int id, std::vector<BaseMessag *> vector) { this->_HTLCsWaitingForAck[id] = vector;};
      |                                                                                                                          ^~~~~~
      |                                                                                                                          std::vector
In file included from /usr/include/c++/10/vector:67,
                 from /home/gabriel/omnetpp-5.7/include/omnetpp/onstartup.h:19,
                 from /home/gabriel/omnetpp-5.7/include/omnetpp/globals.h:21,
                 from /home/gabriel/omnetpp-5.7/include/omnetpp/cobjectfactory.h:20,
                 from /home/gabriel/omnetpp-5.7/include/omnetpp.h:30,
                 from globals.h:3,
                 from FullNode.cpp:1:
/usr/include/c++/10/bits/stl_vector.h:389:11: note: ‘std::vector’ declared here
  389 |     class vector : protected _Vector_base<_Tp, _Alloc>
      |           ^~~~~~
FullNode.cpp: In member function ‘virtual void FullNode::handleMessage(omnetpp::cMessage*)’:
FullNode.cpp:249:81: error: cannot convert ‘UpdateAddHTLC*’ to ‘BaseMessage*’
  249 |             _paymentChannels[firstHop].setPendingHTLC(invMsg->getPaymentHash(), firstHTLC);
      |                                                                                 ^~~~~~~~~
      |                                                                                 |
      |                                                                                 UpdateAddHTLC*
In file included from FullNode.cpp:9:
PaymentChannel.h:65:77: note:   initializing argument 2 of ‘virtual void PaymentChannel::setPendingHTLC(std::string, BaseMessage*)’
   65 |          virtual void setPendingHTLC (std::string paymentHash, BaseMessage *htlc) { this->_pendingHTLCs[paymentHash] = htlc; };
      |                                                                ~~~~~~~~~~~~~^~~~
FullNode.cpp:479:127: error: conversion from ‘vector<BaseMessage*>’ to non-scalar type ‘vector<UpdateAddHTLC*>’ requested
  479 |             std::vector<UpdateAddHTLC *> HTLCs = _paymentChannels[baseMsg->getSenderModule()->getName()].getHTLCsWaitingForAck(ackId);
      |                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~
FullNode.cpp:556:53: error: ‘class BaseMessage’ has no member named ‘getPaymentHash’
  556 |                 paymentHashIterator = HTLCIterator->getPaymentHash();
      |                                                     ^~~~~~~~~~~~~~
FullNode.cpp:566:72: error: ‘class BaseMessage’ has no member named ‘getValue’
  566 |                     EV << "Decreasing " + std::to_string(HTLCIterator->getValue()) + "at node " + getName() + "for payment hash " + HTLCIterator->getPaymentHash() + "\n";
      |                                                                        ^~~~~~~~
FullNode.cpp:566:147: error: ‘class BaseMessage’ has no member named ‘getPaymentHash’
  566 |                     EV << "Decreasing " + std::to_string(HTLCIterator->getValue()) + "at node " + getName() + "for payment hash " + HTLCIterator->getPaymentHash() + "\n";
      |                                                                                                                                                   ^~~~~~~~~~~~~~
FullNode.cpp:568:69: error: ‘class BaseMessage’ has no member named ‘getValue’
  568 |                     if (!updatePaymentChannel(sender, HTLCIterator->getValue(), false)) {
      |                                                                     ^~~~~~~~
FullNode.cpp:573:97: error: ‘class BaseMessage’ has no member named ‘getValue’
  573 |                         _paymentChannels[sender].setInFlight(paymentHashIterator, HTLCIterator->getValue());
      |                                                                                                 ^~~~~~~~
FullNode.cpp:578:74: error: ‘class BaseMessage’ has no member named ‘getPaymentHash’
  578 |                 _paymentChannels[sender].removePendingHTLC(HTLCIterator->getPaymentHash());
      |                                                                          ^~~~~~~~~~~~~~
FullNode.cpp:583:63: error: ‘class BaseMessage’ has no member named ‘getPaymentHash’
  583 |                     if (paymentHashIterator2 != HTLCIterator->getPaymentHash()){
      |                                                               ^~~~~~~~~~~~~~
FullNode.cpp: In member function ‘virtual bool FullNode::tryCommitTxOrFail(std::string, bool)’:
FullNode.cpp:749:76: error: cannot convert ‘std::vector<BaseMessage*>’ to ‘int’
  749 |         _paymentChannels[sender].setHTLCsWaitingForAck(localCommitCounter, HTLCVector);
      |                                                                            ^~~~~~~~~~
      |                                                                            |
      |                                                                            std::vector<BaseMessage*>
In file included from FullNode.cpp:9:
PaymentChannel.h:76:54: note:   initializing argument 2 of ‘virtual void PaymentChannel::setHTLCsWaitingForAck(int, int)’
   76 |          virtual void setHTLCsWaitingForAck (int id, std::vector<BaseMessag *> vector) { this->_HTLCsWaitingForAck[id] = vector;};
      |                                                      ^~~~~~~~~~~
make: *** [Makefile:131: out/gcc-release//FullNode.o] Error 1
"make MODE=release all" terminated with exit code 2. Build might be incomplete.
14:30:30 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
In file included from FullNode.cpp:9:
PaymentChannel.h:76:66: error: ‘BaseMessag’ was not declared in this scope; did you mean ‘BaseMessage’?
   76 |          virtual void setHTLCsWaitingForAck (int id, std::vector<BaseMessag *> vector) { this->_HTLCsWaitingForAck[id] = vector;};
      |                                                                  ^~~~~~~~~~
      |                                                                  BaseMessage
PaymentChannel.h:76:78: error: template argument 1 is invalid
   76 |          virtual void setHTLCsWaitingForAck (int id, std::vector<BaseMessag *> vector) { this->_HTLCsWaitingForAck[id] = vector;};
      |                                                                              ^
PaymentChannel.h:76:78: error: template argument 2 is invalid
PaymentChannel.h:76:66: error: ‘BaseMessag’ was not declared in this scope; did you mean ‘BaseMessage’?
   76 |          virtual void setHTLCsWaitingForAck (int id, std::vector<BaseMessag *> vector) { this->_HTLCsWaitingForAck[id] = vector;};
      |                                                                  ^~~~~~~~~~
      |                                                                  BaseMessage
PaymentChannel.h:76:78: error: template argument 1 is invalid
   76 |          virtual void setHTLCsWaitingForAck (int id, std::vector<BaseMessag *> vector) { this->_HTLCsWaitingForAck[id] = vector;};
      |                                                                              ^
PaymentChannel.h:76:78: error: template argument 2 is invalid
PaymentChannel.h:76:66: error: ‘BaseMessag’ was not declared in this scope; did you mean ‘BaseMessage’?
   76 |          virtual void setHTLCsWaitingForAck (int id, std::vector<BaseMessag *> vector) { this->_HTLCsWaitingForAck[id] = vector;};
      |                                                                  ^~~~~~~~~~
      |                                                                  BaseMessage
PaymentChannel.h:76:78: error: template argument 1 is invalid
   76 |          virtual void setHTLCsWaitingForAck (int id, std::vector<BaseMessag *> vector) { this->_HTLCsWaitingForAck[id] = vector;};
      |                                                                              ^
PaymentChannel.h:76:78: error: template argument 2 is invalid
PaymentChannel.h:76:59: error: ‘std::vector’ is not a type
   76 |          virtual void setHTLCsWaitingForAck (int id, std::vector<BaseMessag *> vector) { this->_HTLCsWaitingForAck[id] = vector;};
      |                                                           ^~~~~~
PaymentChannel.h:76:65: error: expected ‘,’ or ‘...’ before ‘<’ token
   76 |          virtual void setHTLCsWaitingForAck (int id, std::vector<BaseMessag *> vector) { this->_HTLCsWaitingForAck[id] = vector;};
      |                                                                 ^
PaymentChannel.h: In member function ‘virtual void PaymentChannel::setHTLCsWaitingForAck(int, int)’:
PaymentChannel.h:76:122: error: ‘vector’ was not declared in this scope; did you mean ‘std::vector’?
   76 |          virtual void setHTLCsWaitingForAck (int id, std::vector<BaseMessag *> vector) { this->_HTLCsWaitingForAck[id] = vector;};
      |                                                                                                                          ^~~~~~
      |                                                                                                                          std::vector
In file included from /usr/include/c++/10/vector:67,
                 from /home/gabriel/omnetpp-5.7/include/omnetpp/onstartup.h:19,
                 from /home/gabriel/omnetpp-5.7/include/omnetpp/globals.h:21,
                 from /home/gabriel/omnetpp-5.7/include/omnetpp/cobjectfactory.h:20,
                 from /home/gabriel/omnetpp-5.7/include/omnetpp.h:30,
                 from globals.h:3,
                 from FullNode.cpp:1:
/usr/include/c++/10/bits/stl_vector.h:389:11: note: ‘std::vector’ declared here
  389 |     class vector : protected _Vector_base<_Tp, _Alloc>
      |           ^~~~~~
FullNode.cpp: In member function ‘virtual void FullNode::handleMessage(omnetpp::cMessage*)’:
FullNode.cpp:249:81: error: cannot convert ‘UpdateAddHTLC*’ to ‘BaseMessage*’
  249 |             _paymentChannels[firstHop].setPendingHTLC(invMsg->getPaymentHash(), firstHTLC);
      |                                                                                 ^~~~~~~~~
      |                                                                                 |
      |                                                                                 UpdateAddHTLC*
In file included from FullNode.cpp:9:
PaymentChannel.h:65:77: note:   initializing argument 2 of ‘virtual void PaymentChannel::setPendingHTLC(std::string, BaseMessage*)’
   65 |          virtual void setPendingHTLC (std::string paymentHash, BaseMessage *htlc) { this->_pendingHTLCs[paymentHash] = htlc; };
      |                                                                ~~~~~~~~~~~~~^~~~
FullNode.cpp:479:127: error: conversion from ‘vector<BaseMessage*>’ to non-scalar type ‘vector<UpdateAddHTLC*>’ requested
  479 |             std::vector<UpdateAddHTLC *> HTLCs = _paymentChannels[baseMsg->getSenderModule()->getName()].getHTLCsWaitingForAck(ackId);
      |                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~
FullNode.cpp:555:65: error: cannot convert ‘UpdateAddHTLC*’ to ‘BaseMessage*’ in assignment
  555 |                 HTLCIterator = check_and_cast <UpdateAddHTLC *> (HTLCs[index]->getEncapsulatedPacket());
      |                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                                                                 |
      |                                                                 UpdateAddHTLC*
FullNode.cpp:556:53: error: ‘class BaseMessage’ has no member named ‘getPaymentHash’
  556 |                 paymentHashIterator = HTLCIterator->getPaymentHash();
      |                                                     ^~~~~~~~~~~~~~
FullNode.cpp:566:72: error: ‘class BaseMessage’ has no member named ‘getValue’
  566 |                     EV << "Decreasing " + std::to_string(HTLCIterator->getValue()) + "at node " + getName() + "for payment hash " + HTLCIterator->getPaymentHash() + "\n";
      |                                                                        ^~~~~~~~
FullNode.cpp:566:147: error: ‘class BaseMessage’ has no member named ‘getPaymentHash’
  566 |                     EV << "Decreasing " + std::to_string(HTLCIterator->getValue()) + "at node " + getName() + "for payment hash " + HTLCIterator->getPaymentHash() + "\n";
      |                                                                                                                                                   ^~~~~~~~~~~~~~
FullNode.cpp:568:69: error: ‘class BaseMessage’ has no member named ‘getValue’
  568 |                     if (!updatePaymentChannel(sender, HTLCIterator->getValue(), false)) {
      |                                                                     ^~~~~~~~
FullNode.cpp:573:97: error: ‘class BaseMessage’ has no member named ‘getValue’
  573 |                         _paymentChannels[sender].setInFlight(paymentHashIterator, HTLCIterator->getValue());
      |                                                                                                 ^~~~~~~~
FullNode.cpp:578:74: error: ‘class BaseMessage’ has no member named ‘getPaymentHash’
  578 |                 _paymentChannels[sender].removePendingHTLC(HTLCIterator->getPaymentHash());
      |                                                                          ^~~~~~~~~~~~~~
FullNode.cpp:583:63: error: ‘class BaseMessage’ has no member named ‘getPaymentHash’
  583 |                     if (paymentHashIterator2 != HTLCIterator->getPaymentHash()){
      |                                                               ^~~~~~~~~~~~~~
FullNode.cpp: In member function ‘virtual bool FullNode::tryCommitTxOrFail(std::string, bool)’:
FullNode.cpp:749:76: error: cannot convert ‘std::vector<BaseMessage*>’ to ‘int’
  749 |         _paymentChannels[sender].setHTLCsWaitingForAck(localCommitCounter, HTLCVector);
      |                                                                            ^~~~~~~~~~
      |                                                                            |
      |                                                                            std::vector<BaseMessage*>
In file included from FullNode.cpp:9:
PaymentChannel.h:76:54: note:   initializing argument 2 of ‘virtual void PaymentChannel::setHTLCsWaitingForAck(int, int)’
   76 |          virtual void setHTLCsWaitingForAck (int id, std::vector<BaseMessag *> vector) { this->_HTLCsWaitingForAck[id] = vector;};
      |                                                      ^~~~~~~~~~~
make: *** [Makefile:131: out/gcc-release//FullNode.o] Error 1
"make MODE=release all" terminated with exit code 2. Build might be incomplete.
14:30:55 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
In file included from FullNode.cpp:9:
PaymentChannel.h:76:66: error: ‘BaseMessag’ was not declared in this scope; did you mean ‘BaseMessage’?
   76 |          virtual void setHTLCsWaitingForAck (int id, std::vector<BaseMessag *> vector) { this->_HTLCsWaitingForAck[id] = vector;};
      |                                                                  ^~~~~~~~~~
      |                                                                  BaseMessage
PaymentChannel.h:76:78: error: template argument 1 is invalid
   76 |          virtual void setHTLCsWaitingForAck (int id, std::vector<BaseMessag *> vector) { this->_HTLCsWaitingForAck[id] = vector;};
      |                                                                              ^
PaymentChannel.h:76:78: error: template argument 2 is invalid
PaymentChannel.h:76:66: error: ‘BaseMessag’ was not declared in this scope; did you mean ‘BaseMessage’?
   76 |          virtual void setHTLCsWaitingForAck (int id, std::vector<BaseMessag *> vector) { this->_HTLCsWaitingForAck[id] = vector;};
      |                                                                  ^~~~~~~~~~
      |                                                                  BaseMessage
PaymentChannel.h:76:78: error: template argument 1 is invalid
   76 |          virtual void setHTLCsWaitingForAck (int id, std::vector<BaseMessag *> vector) { this->_HTLCsWaitingForAck[id] = vector;};
      |                                                                              ^
PaymentChannel.h:76:78: error: template argument 2 is invalid
PaymentChannel.h:76:66: error: ‘BaseMessag’ was not declared in this scope; did you mean ‘BaseMessage’?
   76 |          virtual void setHTLCsWaitingForAck (int id, std::vector<BaseMessag *> vector) { this->_HTLCsWaitingForAck[id] = vector;};
      |                                                                  ^~~~~~~~~~
      |                                                                  BaseMessage
PaymentChannel.h:76:78: error: template argument 1 is invalid
   76 |          virtual void setHTLCsWaitingForAck (int id, std::vector<BaseMessag *> vector) { this->_HTLCsWaitingForAck[id] = vector;};
      |                                                                              ^
PaymentChannel.h:76:78: error: template argument 2 is invalid
PaymentChannel.h:76:59: error: ‘std::vector’ is not a type
   76 |          virtual void setHTLCsWaitingForAck (int id, std::vector<BaseMessag *> vector) { this->_HTLCsWaitingForAck[id] = vector;};
      |                                                           ^~~~~~
PaymentChannel.h:76:65: error: expected ‘,’ or ‘...’ before ‘<’ token
   76 |          virtual void setHTLCsWaitingForAck (int id, std::vector<BaseMessag *> vector) { this->_HTLCsWaitingForAck[id] = vector;};
      |                                                                 ^
PaymentChannel.h: In member function ‘virtual void PaymentChannel::setHTLCsWaitingForAck(int, int)’:
PaymentChannel.h:76:122: error: ‘vector’ was not declared in this scope; did you mean ‘std::vector’?
   76 |          virtual void setHTLCsWaitingForAck (int id, std::vector<BaseMessag *> vector) { this->_HTLCsWaitingForAck[id] = vector;};
      |                                                                                                                          ^~~~~~
      |                                                                                                                          std::vector
In file included from /usr/include/c++/10/vector:67,
                 from /home/gabriel/omnetpp-5.7/include/omnetpp/onstartup.h:19,
                 from /home/gabriel/omnetpp-5.7/include/omnetpp/globals.h:21,
                 from /home/gabriel/omnetpp-5.7/include/omnetpp/cobjectfactory.h:20,
                 from /home/gabriel/omnetpp-5.7/include/omnetpp.h:30,
                 from globals.h:3,
                 from FullNode.cpp:1:
/usr/include/c++/10/bits/stl_vector.h:389:11: note: ‘std::vector’ declared here
  389 |     class vector : protected _Vector_base<_Tp, _Alloc>
      |           ^~~~~~
FullNode.cpp: In member function ‘virtual void FullNode::handleMessage(omnetpp::cMessage*)’:
FullNode.cpp:249:81: error: cannot convert ‘UpdateAddHTLC*’ to ‘BaseMessage*’
  249 |             _paymentChannels[firstHop].setPendingHTLC(invMsg->getPaymentHash(), firstHTLC);
      |                                                                                 ^~~~~~~~~
      |                                                                                 |
      |                                                                                 UpdateAddHTLC*
In file included from FullNode.cpp:9:
PaymentChannel.h:65:77: note:   initializing argument 2 of ‘virtual void PaymentChannel::setPendingHTLC(std::string, BaseMessage*)’
   65 |          virtual void setPendingHTLC (std::string paymentHash, BaseMessage *htlc) { this->_pendingHTLCs[paymentHash] = htlc; };
      |                                                                ~~~~~~~~~~~~~^~~~
FullNode.cpp:479:127: error: conversion from ‘vector<BaseMessage*>’ to non-scalar type ‘vector<UpdateAddHTLC*>’ requested
  479 |             std::vector<UpdateAddHTLC *> HTLCs = _paymentChannels[baseMsg->getSenderModule()->getName()].getHTLCsWaitingForAck(ackId);
      |                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~
FullNode.cpp: In member function ‘virtual bool FullNode::tryCommitTxOrFail(std::string, bool)’:
FullNode.cpp:749:76: error: cannot convert ‘std::vector<BaseMessage*>’ to ‘int’
  749 |         _paymentChannels[sender].setHTLCsWaitingForAck(localCommitCounter, HTLCVector);
      |                                                                            ^~~~~~~~~~
      |                                                                            |
      |                                                                            std::vector<BaseMessage*>
In file included from FullNode.cpp:9:
PaymentChannel.h:76:54: note:   initializing argument 2 of ‘virtual void PaymentChannel::setHTLCsWaitingForAck(int, int)’
   76 |          virtual void setHTLCsWaitingForAck (int id, std::vector<BaseMessag *> vector) { this->_HTLCsWaitingForAck[id] = vector;};
      |                                                      ^~~~~~~~~~~
make: *** [Makefile:131: out/gcc-release//FullNode.o] Error 1
"make MODE=release all" terminated with exit code 2. Build might be incomplete.
14:33:18 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
FullNode.cpp: In member function ‘virtual void FullNode::handleMessage(omnetpp::cMessage*)’:
FullNode.cpp:481:127: error: conversion from ‘vector<BaseMessage*>’ to non-scalar type ‘vector<UpdateAddHTLC*>’ requested
  481 |             std::vector<UpdateAddHTLC *> HTLCs = _paymentChannels[baseMsg->getSenderModule()->getName()].getHTLCsWaitingForAck(ackId);
      |                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~
make: *** [Makefile:131: out/gcc-release//FullNode.o] Error 1
"make MODE=release all" terminated with exit code 2. Build might be incomplete.
14:35:07 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
PaymentChannel.cpp
commitmentSigned_m.cpp
updateFailHTLC_m.cpp
Creating executable: out/gcc-release//simulator
14:37:19 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
Creating executable: out/gcc-release//simulator
14:39:12 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
MSGC: commitmentSigned.msg
FullNode.cpp
PaymentChannel.cpp
commitmentSigned_m.cpp
Creating executable: out/gcc-release//simulator
14:40:42 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
make: Nothing to be done for 'all'.
14:47:37 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
Creating executable: out/gcc-release//simulator
14:50:56 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
Creating executable: out/gcc-release//simulator
14:52:22 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
Creating executable: out/gcc-release//simulator
14:58:56 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
FullNode.cpp: In member function ‘virtual void FullNode::handleMessage(omnetpp::cMessage*)’:
FullNode.cpp:259:85: error: ‘gateIndex’ was not declared in this scope; did you mean ‘getIndex’?
  259 |             EV << "Sending HTLC to " + firstHop + " through gate " + std::to_string(gateIndex) + " with payment hash " + firstHTLC->getPaymentHash() + "\n";
      |                                                                                     ^~~~~~~~~
      |                                                                                     getIndex
make: *** [Makefile:131: out/gcc-release//FullNode.o] Error 1
"make MODE=release all" terminated with exit code 2. Build might be incomplete.
14:59:15 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
Creating executable: out/gcc-release//simulator
17:03:38 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
make: Nothing to be done for 'all'.
17:40:23 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
make: Nothing to be done for 'all'.
16:48:25 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
In file included from FullNode.cpp:9:
PaymentChannel.h:30:37: error: ‘T’ was not declared in this scope
   30 |         std::map<std::string, HTLC <T> > _pendingHTLCs2; //paymentHash to HTLC
      |                                     ^
PaymentChannel.h:30:38: error: template argument 1 is invalid
   30 |         std::map<std::string, HTLC <T> > _pendingHTLCs2; //paymentHash to HTLC
      |                                      ^
PaymentChannel.h:30:40: error: template argument 2 is invalid
   30 |         std::map<std::string, HTLC <T> > _pendingHTLCs2; //paymentHash to HTLC
      |                                        ^
PaymentChannel.h:30:40: error: template argument 4 is invalid
make: *** [Makefile:131: out/gcc-release//FullNode.o] Error 1
"make MODE=release all" terminated with exit code 2. Build might be incomplete.
16:48:49 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
In file included from FullNode.cpp:9:
PaymentChannel.h:30:36: error: type/value mismatch at argument 2 in template parameter list for ‘template<class _Key, class _Tp, class _Compare, class _Alloc> class std::map’
   30 |         std::map<std::string, HTLC > _pendingHTLCs2; //paymentHash to HTLC
      |                                    ^
PaymentChannel.h:30:36: note:   expected a type, got ‘HTLC’
PaymentChannel.h:30:36: error: template argument 4 is invalid
make: *** [Makefile:131: out/gcc-release//FullNode.o] Error 1
"make MODE=release all" terminated with exit code 2. Build might be incomplete.
17:13:41 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
In file included from PaymentChannel.h:9,
                 from FullNode.cpp:9:
HTLC.h:16:1: error: ‘explicit’ outside class declaration
   16 | explicit HTLC::HTLC(UpdateAddHTLC *htlc) {
      | ^~~~~~~~
HTLC.h:16:10: error: no declaration matches ‘HTLC::HTLC(UpdateAddHTLC*)’
   16 | explicit HTLC::HTLC(UpdateAddHTLC *htlc) {
      |          ^~~~
HTLC.h:6:7: note: candidates are: ‘HTLC::HTLC(HTLC&&)’
    6 | class HTLC {
      |       ^~~~
HTLC.h:6:7: note:                 ‘HTLC::HTLC(const HTLC&)’
HTLC.h:6:7: note:                 ‘HTLC::HTLC()’
HTLC.h:6:7: note: ‘class HTLC’ defined here
HTLC.h:23:1: error: ‘explicit’ outside class declaration
   23 | explicit HTLC::HTLC(UpdateFulfillHTLC *htlc) {
      | ^~~~~~~~
HTLC.h:23:10: error: no declaration matches ‘HTLC::HTLC(UpdateFulfillHTLC*)’
   23 | explicit HTLC::HTLC(UpdateFulfillHTLC *htlc) {
      |          ^~~~
HTLC.h:6:7: note: candidates are: ‘HTLC::HTLC(HTLC&&)’
    6 | class HTLC {
      |       ^~~~
HTLC.h:6:7: note:                 ‘HTLC::HTLC(const HTLC&)’
HTLC.h:6:7: note:                 ‘HTLC::HTLC()’
HTLC.h:6:7: note: ‘class HTLC’ defined here
HTLC.h:29:1: error: ‘explicit’ outside class declaration
   29 | explicit HTLC::HTLC(UpdateFailHTLC *htlc) {
      | ^~~~~~~~
HTLC.h:29:10: error: no declaration matches ‘HTLC::HTLC(UpdateFailHTLC*)’
   29 | explicit HTLC::HTLC(UpdateFailHTLC *htlc) {
      |          ^~~~
HTLC.h:6:7: note: candidates are: ‘HTLC::HTLC(HTLC&&)’
    6 | class HTLC {
      |       ^~~~
HTLC.h:6:7: note:                 ‘HTLC::HTLC(const HTLC&)’
HTLC.h:6:7: note:                 ‘HTLC::HTLC()’
HTLC.h:6:7: note: ‘class HTLC’ defined here
make: *** [Makefile:131: out/gcc-release//FullNode.o] Error 1
"make MODE=release all" terminated with exit code 2. Build might be incomplete.
17:14:45 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
In file included from PaymentChannel.h:9,
                 from FullNode.cpp:9:
HTLC.h:21:1: error: ‘explicit’ outside class declaration
   21 | explicit HTLC::HTLC(UpdateAddHTLC *htlc) {
      | ^~~~~~~~
HTLC.h:28:1: error: ‘explicit’ outside class declaration
   28 | explicit HTLC::HTLC(UpdateFulfillHTLC *htlc) {
      | ^~~~~~~~
HTLC.h:34:1: error: ‘explicit’ outside class declaration
   34 | explicit HTLC::HTLC(UpdateFailHTLC *htlc) {
      | ^~~~~~~~
make: *** [Makefile:131: out/gcc-release//FullNode.o] Error 1
"make MODE=release all" terminated with exit code 2. Build might be incomplete.
17:15:09 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
PaymentChannel.cpp
Creating executable: out/gcc-release//simulator
/usr/bin/ld: out/gcc-release//PaymentChannel.o: in function `HTLC::HTLC(UpdateAddHTLC*)':
PaymentChannel.cpp:(.text+0xbb0): multiple definition of `HTLC::HTLC(UpdateAddHTLC*)'; out/gcc-release//FullNode.o:FullNode.cpp:(.text+0x2670): first defined here
/usr/bin/ld: out/gcc-release//PaymentChannel.o: in function `HTLC::HTLC(UpdateAddHTLC*)':
PaymentChannel.cpp:(.text+0xbb0): multiple definition of `HTLC::HTLC(UpdateAddHTLC*)'; out/gcc-release//FullNode.o:FullNode.cpp:(.text+0x2670): first defined here
/usr/bin/ld: out/gcc-release//PaymentChannel.o: in function `HTLC::HTLC(UpdateFulfillHTLC*)':
PaymentChannel.cpp:(.text+0xcd0): multiple definition of `HTLC::HTLC(UpdateFulfillHTLC*)'; out/gcc-release//FullNode.o:FullNode.cpp:(.text+0x2790): first defined here
/usr/bin/ld: out/gcc-release//PaymentChannel.o: in function `HTLC::HTLC(UpdateFulfillHTLC*)':
PaymentChannel.cpp:(.text+0xcd0): multiple definition of `HTLC::HTLC(UpdateFulfillHTLC*)'; out/gcc-release//FullNode.o:FullNode.cpp:(.text+0x2790): first defined here
/usr/bin/ld: out/gcc-release//PaymentChannel.o: in function `HTLC::HTLC(UpdateFailHTLC*)':
PaymentChannel.cpp:(.text+0xde0): multiple definition of `HTLC::HTLC(UpdateFailHTLC*)'; out/gcc-release//FullNode.o:FullNode.cpp:(.text+0x28a0): first defined here
/usr/bin/ld: out/gcc-release//PaymentChannel.o: in function `HTLC::HTLC(UpdateFailHTLC*)':
PaymentChannel.cpp:(.text+0xde0): multiple definition of `HTLC::HTLC(UpdateFailHTLC*)'; out/gcc-release//FullNode.o:FullNode.cpp:(.text+0x28a0): first defined here
collect2: error: ld returned 1 exit status
make: *** [Makefile:122: out/gcc-release//simulator] Error 1
"make MODE=release all" terminated with exit code 2. Build might be incomplete.
17:17:22 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
MSGC: updateFailHTLC.msg
FullNode.cpp
In file included from FullNode.cpp:12:
HTLC.h:6:7: error: redefinition of ‘class HTLC’
    6 | class HTLC {
      |       ^~~~
In file included from PaymentChannel.h:9,
                 from FullNode.cpp:8:
HTLC.h:6:7: note: previous definition of ‘class HTLC’
    6 | class HTLC {
      |       ^~~~
In file included from FullNode.cpp:12:
HTLC.h:22:1: error: redefinition of ‘HTLC::HTLC(UpdateAddHTLC*)’
   22 | HTLC::HTLC(UpdateAddHTLC *htlc) {
      | ^~~~
In file included from PaymentChannel.h:9,
                 from FullNode.cpp:8:
HTLC.h:22:1: note: ‘HTLC::HTLC(UpdateAddHTLC*)’ previously defined here
   22 | HTLC::HTLC(UpdateAddHTLC *htlc) {
      | ^~~~
In file included from FullNode.cpp:12:
HTLC.h:29:1: error: redefinition of ‘HTLC::HTLC(UpdateFulfillHTLC*)’
   29 | HTLC::HTLC(UpdateFulfillHTLC *htlc) {
      | ^~~~
In file included from PaymentChannel.h:9,
                 from FullNode.cpp:8:
HTLC.h:29:1: note: ‘HTLC::HTLC(UpdateFulfillHTLC*)’ previously defined here
   29 | HTLC::HTLC(UpdateFulfillHTLC *htlc) {
      | ^~~~
In file included from FullNode.cpp:12:
HTLC.h:35:1: error: redefinition of ‘HTLC::HTLC(UpdateFailHTLC*)’
   35 | HTLC::HTLC(UpdateFailHTLC *htlc) {
      | ^~~~
In file included from PaymentChannel.h:9,
                 from FullNode.cpp:8:
HTLC.h:35:1: note: ‘HTLC::HTLC(UpdateFailHTLC*)’ previously defined here
   35 | HTLC::HTLC(UpdateFailHTLC *htlc) {
      | ^~~~
make: *** [Makefile:129: out/gcc-release//FullNode.o] Error 1
"make MODE=release all" terminated with exit code 2. Build might be incomplete.
17:19:26 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
PaymentChannel.cpp
updateFailHTLC_m.cpp
Creating executable: out/gcc-release//simulator
/usr/bin/ld: out/gcc-release//PaymentChannel.o: in function `HTLC::HTLC(UpdateAddHTLC*)':
PaymentChannel.cpp:(.text+0xbb0): multiple definition of `HTLC::HTLC(UpdateAddHTLC*)'; out/gcc-release//FullNode.o:FullNode.cpp:(.text+0x2ad0): first defined here
/usr/bin/ld: out/gcc-release//PaymentChannel.o: in function `HTLC::HTLC(UpdateAddHTLC*)':
PaymentChannel.cpp:(.text+0xbb0): multiple definition of `HTLC::HTLC(UpdateAddHTLC*)'; out/gcc-release//FullNode.o:FullNode.cpp:(.text+0x2ad0): first defined here
/usr/bin/ld: out/gcc-release//PaymentChannel.o: in function `HTLC::HTLC(UpdateFulfillHTLC*)':
PaymentChannel.cpp:(.text+0xd00): multiple definition of `HTLC::HTLC(UpdateFulfillHTLC*)'; out/gcc-release//FullNode.o:FullNode.cpp:(.text+0x2c20): first defined here
/usr/bin/ld: out/gcc-release//PaymentChannel.o: in function `HTLC::HTLC(UpdateFulfillHTLC*)':
PaymentChannel.cpp:(.text+0xd00): multiple definition of `HTLC::HTLC(UpdateFulfillHTLC*)'; out/gcc-release//FullNode.o:FullNode.cpp:(.text+0x2c20): first defined here
/usr/bin/ld: out/gcc-release//PaymentChannel.o: in function `HTLC::HTLC(UpdateFailHTLC*)':
PaymentChannel.cpp:(.text+0xe30): multiple definition of `HTLC::HTLC(UpdateFailHTLC*)'; out/gcc-release//FullNode.o:FullNode.cpp:(.text+0x2d50): first defined here
/usr/bin/ld: out/gcc-release//PaymentChannel.o: in function `HTLC::HTLC(UpdateFailHTLC*)':
PaymentChannel.cpp:(.text+0xe30): multiple definition of `HTLC::HTLC(UpdateFailHTLC*)'; out/gcc-release//FullNode.o:FullNode.cpp:(.text+0x2d50): first defined here
collect2: error: ld returned 1 exit status
make: *** [Makefile:120: out/gcc-release//simulator] Error 1
"make MODE=release all" terminated with exit code 2. Build might be incomplete.
17:20:48 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
crypto.cpp
FullNode.cpp
netBuilder.cpp
PaymentChannel.cpp
payment_m.cpp
Creating executable: out/gcc-release//simulator
/usr/bin/ld: out/gcc-release//PaymentChannel.o: in function `HTLC::HTLC(UpdateAddHTLC*)':
PaymentChannel.cpp:(.text+0xbb0): multiple definition of `HTLC::HTLC(UpdateAddHTLC*)'; out/gcc-release//FullNode.o:FullNode.cpp:(.text+0x2ad0): first defined here
/usr/bin/ld: out/gcc-release//PaymentChannel.o: in function `HTLC::HTLC(UpdateAddHTLC*)':
PaymentChannel.cpp:(.text+0xbb0): multiple definition of `HTLC::HTLC(UpdateAddHTLC*)'; out/gcc-release//FullNode.o:FullNode.cpp:(.text+0x2ad0): first defined here
/usr/bin/ld: out/gcc-release//PaymentChannel.o: in function `HTLC::HTLC(UpdateFulfillHTLC*)':
PaymentChannel.cpp:(.text+0xd00): multiple definition of `HTLC::HTLC(UpdateFulfillHTLC*)'; out/gcc-release//FullNode.o:FullNode.cpp:(.text+0x2c20): first defined here
/usr/bin/ld: out/gcc-release//PaymentChannel.o: in function `HTLC::HTLC(UpdateFulfillHTLC*)':
PaymentChannel.cpp:(.text+0xd00): multiple definition of `HTLC::HTLC(UpdateFulfillHTLC*)'; out/gcc-release//FullNode.o:FullNode.cpp:(.text+0x2c20): first defined here
/usr/bin/ld: out/gcc-release//PaymentChannel.o: in function `HTLC::HTLC(UpdateFailHTLC*)':
PaymentChannel.cpp:(.text+0xe30): multiple definition of `HTLC::HTLC(UpdateFailHTLC*)'; out/gcc-release//FullNode.o:FullNode.cpp:(.text+0x2d50): first defined here
/usr/bin/ld: out/gcc-release//PaymentChannel.o: in function `HTLC::HTLC(UpdateFailHTLC*)':
PaymentChannel.cpp:(.text+0xe30): multiple definition of `HTLC::HTLC(UpdateFailHTLC*)'; out/gcc-release//FullNode.o:FullNode.cpp:(.text+0x2d50): first defined here
collect2: error: ld returned 1 exit status
make: *** [Makefile:120: out/gcc-release//simulator] Error 1
"make MODE=release all" terminated with exit code 2. Build might be incomplete.
17:21:54 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
PaymentChannel.cpp
In file included from PaymentChannel.cpp:1:
PaymentChannel.h:82:9: error: ‘Json’ does not name a type
   82 |         Json::Value toJson() const;
      |         ^~~~
PaymentChannel.cpp:51:1: error: ‘Json’ does not name a type
   51 | Json::Value PaymentChannel::toJson() const {
      | ^~~~
make: *** [Makefile:129: out/gcc-release//PaymentChannel.o] Error 1
"make MODE=release all" terminated with exit code 2. Build might be incomplete.
17:22:17 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
crypto.cpp
FullNode.cpp
netBuilder.cpp
PaymentChannel.cpp
payment_m.cpp
Creating executable: out/gcc-release//simulator
/usr/bin/ld: out/gcc-release//PaymentChannel.o: in function `HTLC::HTLC(UpdateAddHTLC*)':
PaymentChannel.cpp:(.text+0xbb0): multiple definition of `HTLC::HTLC(UpdateAddHTLC*)'; out/gcc-release//FullNode.o:FullNode.cpp:(.text+0x2ad0): first defined here
/usr/bin/ld: out/gcc-release//PaymentChannel.o: in function `HTLC::HTLC(UpdateAddHTLC*)':
PaymentChannel.cpp:(.text+0xbb0): multiple definition of `HTLC::HTLC(UpdateAddHTLC*)'; out/gcc-release//FullNode.o:FullNode.cpp:(.text+0x2ad0): first defined here
/usr/bin/ld: out/gcc-release//PaymentChannel.o: in function `HTLC::HTLC(UpdateFulfillHTLC*)':
PaymentChannel.cpp:(.text+0xd00): multiple definition of `HTLC::HTLC(UpdateFulfillHTLC*)'; out/gcc-release//FullNode.o:FullNode.cpp:(.text+0x2c20): first defined here
/usr/bin/ld: out/gcc-release//PaymentChannel.o: in function `HTLC::HTLC(UpdateFulfillHTLC*)':
PaymentChannel.cpp:(.text+0xd00): multiple definition of `HTLC::HTLC(UpdateFulfillHTLC*)'; out/gcc-release//FullNode.o:FullNode.cpp:(.text+0x2c20): first defined here
/usr/bin/ld: out/gcc-release//PaymentChannel.o: in function `HTLC::HTLC(UpdateFailHTLC*)':
PaymentChannel.cpp:(.text+0xe30): multiple definition of `HTLC::HTLC(UpdateFailHTLC*)'; out/gcc-release//FullNode.o:FullNode.cpp:(.text+0x2d50): first defined here
/usr/bin/ld: out/gcc-release//PaymentChannel.o: in function `HTLC::HTLC(UpdateFailHTLC*)':
PaymentChannel.cpp:(.text+0xe30): multiple definition of `HTLC::HTLC(UpdateFailHTLC*)'; out/gcc-release//FullNode.o:FullNode.cpp:(.text+0x2d50): first defined here
collect2: error: ld returned 1 exit status
make: *** [Makefile:120: out/gcc-release//simulator] Error 1
"make MODE=release all" terminated with exit code 2. Build might be incomplete.
17:23:57 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
PaymentChannel.cpp
Creating executable: out/gcc-release//simulator
/usr/bin/ld: out/gcc-release//PaymentChannel.o: in function `HTLC::HTLC(UpdateAddHTLC*)':
PaymentChannel.cpp:(.text+0xbb0): multiple definition of `HTLC::HTLC(UpdateAddHTLC*)'; out/gcc-release//FullNode.o:FullNode.cpp:(.text+0x2ad0): first defined here
/usr/bin/ld: out/gcc-release//PaymentChannel.o: in function `HTLC::HTLC(UpdateAddHTLC*)':
PaymentChannel.cpp:(.text+0xbb0): multiple definition of `HTLC::HTLC(UpdateAddHTLC*)'; out/gcc-release//FullNode.o:FullNode.cpp:(.text+0x2ad0): first defined here
/usr/bin/ld: out/gcc-release//PaymentChannel.o: in function `HTLC::HTLC(UpdateFulfillHTLC*)':
PaymentChannel.cpp:(.text+0xd00): multiple definition of `HTLC::HTLC(UpdateFulfillHTLC*)'; out/gcc-release//FullNode.o:FullNode.cpp:(.text+0x2c20): first defined here
/usr/bin/ld: out/gcc-release//PaymentChannel.o: in function `HTLC::HTLC(UpdateFulfillHTLC*)':
PaymentChannel.cpp:(.text+0xd00): multiple definition of `HTLC::HTLC(UpdateFulfillHTLC*)'; out/gcc-release//FullNode.o:FullNode.cpp:(.text+0x2c20): first defined here
/usr/bin/ld: out/gcc-release//PaymentChannel.o: in function `HTLC::HTLC(UpdateFailHTLC*)':
PaymentChannel.cpp:(.text+0xe30): multiple definition of `HTLC::HTLC(UpdateFailHTLC*)'; out/gcc-release//FullNode.o:FullNode.cpp:(.text+0x2d50): first defined here
/usr/bin/ld: out/gcc-release//PaymentChannel.o: in function `HTLC::HTLC(UpdateFailHTLC*)':
PaymentChannel.cpp:(.text+0xe30): multiple definition of `HTLC::HTLC(UpdateFailHTLC*)'; out/gcc-release//FullNode.o:FullNode.cpp:(.text+0x2d50): first defined here
collect2: error: ld returned 1 exit status
make: *** [Makefile:120: out/gcc-release//simulator] Error 1
"make MODE=release all" terminated with exit code 2. Build might be incomplete.
17:25:37 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
crypto.cpp
In file included from crypto.cpp:9:
globals.h:1:17: error: ‘omnetpp’ is not a namespace-name
    1 | using namespace omnetpp;
      |                 ^~~~~~~
globals.h:7:8: error: ‘cTopology’ does not name a type
    7 | extern cTopology *globalTopology;
      |        ^~~~~~~~~
globals.h:8:13: error: ‘map’ in namespace ‘std’ does not name a template type
    8 | extern std::map<std::string, std::vector<std::tuple<std::string, double, simtime_t> > > pendingPayments;
      |             ^~~
globals.h:1:1: note: ‘std::map’ is defined in header ‘<map>’; did you forget to ‘#include <map>’?
  +++ |+#include <map>
    1 | using namespace omnetpp;
globals.h:9:13: error: ‘map’ in namespace ‘std’ does not name a template type
    9 | extern std::map<std::string, std::map<std::string, std::tuple <double, double, double, int, double, double, cGate*, cGate*> > > nameToPCs;
      |             ^~~
globals.h:9:8: note: ‘std::map’ is defined in header ‘<map>’; did you forget to ‘#include <map>’?
    9 | extern std::map<std::string, std::map<std::string, std::tuple <double, double, double, int, double, double, cGate*, cGate*> > > nameToPCs;
      |        ^~~
In file included from crypto.cpp:9:
globals.h:10:13: error: ‘map’ in namespace ‘std’ does not name a template type
   10 | extern std::map<std::string, std::vector<std::pair<std::string, double> > > adjMatrix;
      |             ^~~
globals.h:10:8: note: ‘std::map’ is defined in header ‘<map>’; did you forget to ‘#include <map>’?
   10 | extern std::map<std::string, std::vector<std::pair<std::string, double> > > adjMatrix;
      |        ^~~
crypto.cpp: In function ‘std::string generatePreImage()’:
crypto.cpp:42:57: error: ‘strlen’ was not declared in this scope
   42 |     std::uniform_int_distribution<int> random_number(0, strlen(charset) - 1);
      |                                                         ^~~~~~
crypto.cpp:14:1: note: ‘strlen’ is defined in header ‘<cstring>’; did you forget to ‘#include <cstring>’?
   13 | #include <openssl/sha.h>
  +++ |+#include <cstring>
   14 | 
make: *** [Makefile:129: out/gcc-release//crypto.o] Error 1
"make MODE=release all" terminated with exit code 2. Build might be incomplete.
17:27:09 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
crypto.cpp
FullNode.cpp
netBuilder.cpp
payment_m.cpp
Creating executable: out/gcc-release//simulator
/usr/bin/ld: out/gcc-release//PaymentChannel.o: in function `HTLC::HTLC(UpdateAddHTLC*)':
PaymentChannel.cpp:(.text+0xbb0): multiple definition of `HTLC::HTLC(UpdateAddHTLC*)'; out/gcc-release//FullNode.o:FullNode.cpp:(.text+0x2ad0): first defined here
/usr/bin/ld: out/gcc-release//PaymentChannel.o: in function `HTLC::HTLC(UpdateAddHTLC*)':
PaymentChannel.cpp:(.text+0xbb0): multiple definition of `HTLC::HTLC(UpdateAddHTLC*)'; out/gcc-release//FullNode.o:FullNode.cpp:(.text+0x2ad0): first defined here
/usr/bin/ld: out/gcc-release//PaymentChannel.o: in function `HTLC::HTLC(UpdateFulfillHTLC*)':
PaymentChannel.cpp:(.text+0xd00): multiple definition of `HTLC::HTLC(UpdateFulfillHTLC*)'; out/gcc-release//FullNode.o:FullNode.cpp:(.text+0x2c20): first defined here
/usr/bin/ld: out/gcc-release//PaymentChannel.o: in function `HTLC::HTLC(UpdateFulfillHTLC*)':
PaymentChannel.cpp:(.text+0xd00): multiple definition of `HTLC::HTLC(UpdateFulfillHTLC*)'; out/gcc-release//FullNode.o:FullNode.cpp:(.text+0x2c20): first defined here
/usr/bin/ld: out/gcc-release//PaymentChannel.o: in function `HTLC::HTLC(UpdateFailHTLC*)':
PaymentChannel.cpp:(.text+0xe30): multiple definition of `HTLC::HTLC(UpdateFailHTLC*)'; out/gcc-release//FullNode.o:FullNode.cpp:(.text+0x2d50): first defined here
/usr/bin/ld: out/gcc-release//PaymentChannel.o: in function `HTLC::HTLC(UpdateFailHTLC*)':
PaymentChannel.cpp:(.text+0xe30): multiple definition of `HTLC::HTLC(UpdateFailHTLC*)'; out/gcc-release//FullNode.o:FullNode.cpp:(.text+0x2d50): first defined here
collect2: error: ld returned 1 exit status
make: *** [Makefile:120: out/gcc-release//simulator] Error 1
"make MODE=release all" terminated with exit code 2. Build might be incomplete.
17:27:51 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
Creating executable: out/gcc-release//simulator
/usr/bin/ld: out/gcc-release//PaymentChannel.o: in function `HTLC::HTLC(UpdateAddHTLC*)':
PaymentChannel.cpp:(.text+0xbb0): multiple definition of `HTLC::HTLC(UpdateAddHTLC*)'; out/gcc-release//FullNode.o:FullNode.cpp:(.text+0x2ad0): first defined here
/usr/bin/ld: out/gcc-release//PaymentChannel.o: in function `HTLC::HTLC(UpdateAddHTLC*)':
PaymentChannel.cpp:(.text+0xbb0): multiple definition of `HTLC::HTLC(UpdateAddHTLC*)'; out/gcc-release//FullNode.o:FullNode.cpp:(.text+0x2ad0): first defined here
/usr/bin/ld: out/gcc-release//PaymentChannel.o: in function `HTLC::HTLC(UpdateFulfillHTLC*)':
PaymentChannel.cpp:(.text+0xd00): multiple definition of `HTLC::HTLC(UpdateFulfillHTLC*)'; out/gcc-release//FullNode.o:FullNode.cpp:(.text+0x2c20): first defined here
/usr/bin/ld: out/gcc-release//PaymentChannel.o: in function `HTLC::HTLC(UpdateFulfillHTLC*)':
PaymentChannel.cpp:(.text+0xd00): multiple definition of `HTLC::HTLC(UpdateFulfillHTLC*)'; out/gcc-release//FullNode.o:FullNode.cpp:(.text+0x2c20): first defined here
/usr/bin/ld: out/gcc-release//PaymentChannel.o: in function `HTLC::HTLC(UpdateFailHTLC*)':
PaymentChannel.cpp:(.text+0xe30): multiple definition of `HTLC::HTLC(UpdateFailHTLC*)'; out/gcc-release//FullNode.o:FullNode.cpp:(.text+0x2d50): first defined here
/usr/bin/ld: out/gcc-release//PaymentChannel.o: in function `HTLC::HTLC(UpdateFailHTLC*)':
PaymentChannel.cpp:(.text+0xe30): multiple definition of `HTLC::HTLC(UpdateFailHTLC*)'; out/gcc-release//FullNode.o:FullNode.cpp:(.text+0x2d50): first defined here
collect2: error: ld returned 1 exit status
make: *** [Makefile:120: out/gcc-release//simulator] Error 1
"make MODE=release all" terminated with exit code 2. Build might be incomplete.
17:28:49 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
PaymentChannel.cpp
Creating executable: out/gcc-release//simulator
/usr/bin/ld: out/gcc-release//PaymentChannel.o: in function `HTLC::HTLC(UpdateAddHTLC*)':
PaymentChannel.cpp:(.text+0xbb0): multiple definition of `HTLC::HTLC(UpdateAddHTLC*)'; out/gcc-release//FullNode.o:FullNode.cpp:(.text+0x2ad0): first defined here
/usr/bin/ld: out/gcc-release//PaymentChannel.o: in function `HTLC::HTLC(UpdateAddHTLC*)':
PaymentChannel.cpp:(.text+0xbb0): multiple definition of `HTLC::HTLC(UpdateAddHTLC*)'; out/gcc-release//FullNode.o:FullNode.cpp:(.text+0x2ad0): first defined here
/usr/bin/ld: out/gcc-release//PaymentChannel.o: in function `HTLC::HTLC(UpdateFulfillHTLC*)':
PaymentChannel.cpp:(.text+0xd00): multiple definition of `HTLC::HTLC(UpdateFulfillHTLC*)'; out/gcc-release//FullNode.o:FullNode.cpp:(.text+0x2c20): first defined here
/usr/bin/ld: out/gcc-release//PaymentChannel.o: in function `HTLC::HTLC(UpdateFulfillHTLC*)':
PaymentChannel.cpp:(.text+0xd00): multiple definition of `HTLC::HTLC(UpdateFulfillHTLC*)'; out/gcc-release//FullNode.o:FullNode.cpp:(.text+0x2c20): first defined here
/usr/bin/ld: out/gcc-release//PaymentChannel.o: in function `HTLC::HTLC(UpdateFailHTLC*)':
PaymentChannel.cpp:(.text+0xe30): multiple definition of `HTLC::HTLC(UpdateFailHTLC*)'; out/gcc-release//FullNode.o:FullNode.cpp:(.text+0x2d50): first defined here
/usr/bin/ld: out/gcc-release//PaymentChannel.o: in function `HTLC::HTLC(UpdateFailHTLC*)':
PaymentChannel.cpp:(.text+0xe30): multiple definition of `HTLC::HTLC(UpdateFailHTLC*)'; out/gcc-release//FullNode.o:FullNode.cpp:(.text+0x2d50): first defined here
collect2: error: ld returned 1 exit status
make: *** [Makefile:120: out/gcc-release//simulator] Error 1
"make MODE=release all" terminated with exit code 2. Build might be incomplete.
17:32:11 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
FullNode.cpp: In member function ‘void FullNode::printPaymentChannels()’:
FullNode.cpp:68:55: error: ‘class PaymentChannel’ has no member named ‘toJson’
   68 |         EV << "{ '" << it.first << "': " << it.second.toJson().toStyledString();
      |                                                       ^~~~~~
FullNode.cpp: In member function ‘Json::Value FullNode::paymentChannelstoJson()’:
FullNode.cpp:79:38: error: ‘const class PaymentChannel’ has no member named ‘toJson’
   79 |         json[it->first] = it->second.toJson();
      |                                      ^~~~~~
make: *** [Makefile:128: out/gcc-release//FullNode.o] Error 1
"make MODE=release all" terminated with exit code 2. Build might be incomplete.
17:32:54 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
Creating executable: out/gcc-release//simulator
20:55:46 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
MSGC: commitmentSigned.msg
FullNode.cpp
In file included from commitmentSigned_m.h:23,
                 from FullNode.cpp:10:
HTLC.h:5:7: error: redefinition of ‘class HTLC’
    5 | class HTLC {
      |       ^~~~
In file included from PaymentChannel.h:7,
                 from FullNode.cpp:8:
HTLC.h:5:7: note: previous definition of ‘class HTLC’
    5 | class HTLC {
      |       ^~~~
In file included from commitmentSigned_m.h:23,
                 from FullNode.cpp:10:
HTLC.h:34:1: error: redefinition of ‘HTLC::HTLC(UpdateAddHTLC*)’
   34 | HTLC::HTLC(UpdateAddHTLC *htlc) {
      | ^~~~
In file included from PaymentChannel.h:7,
                 from FullNode.cpp:8:
HTLC.h:34:1: note: ‘HTLC::HTLC(UpdateAddHTLC*)’ previously defined here
   34 | HTLC::HTLC(UpdateAddHTLC *htlc) {
      | ^~~~
In file included from commitmentSigned_m.h:23,
                 from FullNode.cpp:10:
HTLC.h:41:1: error: redefinition of ‘HTLC::HTLC(UpdateFulfillHTLC*)’
   41 | HTLC::HTLC(UpdateFulfillHTLC *htlc) {
      | ^~~~
In file included from PaymentChannel.h:7,
                 from FullNode.cpp:8:
HTLC.h:41:1: note: ‘HTLC::HTLC(UpdateFulfillHTLC*)’ previously defined here
   41 | HTLC::HTLC(UpdateFulfillHTLC *htlc) {
      | ^~~~
In file included from commitmentSigned_m.h:23,
                 from FullNode.cpp:10:
HTLC.h:47:1: error: redefinition of ‘HTLC::HTLC(UpdateFailHTLC*)’
   47 | HTLC::HTLC(UpdateFailHTLC *htlc) {
      | ^~~~
In file included from PaymentChannel.h:7,
                 from FullNode.cpp:8:
HTLC.h:47:1: note: ‘HTLC::HTLC(UpdateFailHTLC*)’ previously defined here
   47 | HTLC::HTLC(UpdateFailHTLC *htlc) {
      | ^~~~
FullNode.cpp: In member function ‘virtual void FullNode::handleMessage(omnetpp::cMessage*)’:
FullNode.cpp:261:75: error: ‘firstUpdateHTLC’ was not declared in this scope; did you mean ‘firstUpdateAddHTLC’?
  261 |             EV << "Sending HTLC to " + firstHop + " with payment hash " + firstUpdateHTLC->getPaymentHash() + "\n";
      |                                                                           ^~~~~~~~~~~~~~~
      |                                                                           firstUpdateAddHTLC
FullNode.cpp:316:47: error: ‘HTLCMsg’ was not declared in this scope; did you mean ‘HTLC’?
  316 |                 updateAddHTLC->setPaymentHash(HTLCMsg->getPaymentHash());
      |                                               ^~~~~~~
      |                                               HTLC
FullNode.cpp:319:23: error: redeclaration of ‘HTLC* htlc’
  319 |                 HTLC *htlc = new HTLC(updateAddHTLC);
      |                       ^~~~
FullNode.cpp:282:23: note: ‘HTLC* htlc’ previously declared here
  282 |                 HTLC *htlc = new HTLC(updateAddHTLCMsg);
      |                       ^~~~
FullNode.cpp:322:62: error: expected primary-expression before ‘->’ token
  322 |                 _paymentChannels[nextHop].setPendingHTLC(HTLC->getPaymentHash(),htlc);
      |                                                              ^~
FullNode.cpp:323:66: error: expected primary-expression before ‘->’ token
  323 |                 _paymentChannels[nextHop].setPendingHTLCFIFO(HTLC->getPaymentHash());
      |                                                                  ^~
FullNode.cpp:328:45: error: expected primary-expression before ‘)’ token
  328 |                 newMessage->encapsulate(HTLC);
      |                                             ^
FullNode.cpp:333:108: error: expected primary-expression before ‘->’ token
  333 |                 EV << "Sending HTLC to " + path[(newMessage->getHopCount())] + " with payment hash " + HTLC->getPaymentHash() + "\n";
      |                                                                                                            ^~
FullNode.cpp:496:77: error: cannot convert ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’} to ‘const char*’
  496 |                     fulfillHTLC->setPaymentHash(HTLCIterator->getPaymentHash());
      |                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
      |                                                                             |
      |                                                                             std::string {aka std::__cxx11::basic_string<char>}
In file included from HTLC.h:2,
                 from PaymentChannel.h:7,
                 from FullNode.cpp:8:
updateFulfillHTLC_m.h:60:46: note:   initializing argument 1 of ‘virtual void UpdateFulfillHTLC::setPaymentHash(const char*)’
   60 |     virtual void setPaymentHash(const char * paymentHash);
      |                                 ~~~~~~~~~~~~~^~~~~~~~~~~
make: *** [Makefile:128: out/gcc-release//FullNode.o] Error 1
"make MODE=release all" terminated with exit code 2. Build might be incomplete.
21:26:38 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
In file included from commitmentSigned_m.h:23,
                 from FullNode.cpp:10:
HTLC.h:5:7: error: redefinition of ‘class HTLC’
    5 | class HTLC {
      |       ^~~~
In file included from PaymentChannel.h:7,
                 from FullNode.cpp:8:
HTLC.h:5:7: note: previous definition of ‘class HTLC’
    5 | class HTLC {
      |       ^~~~
In file included from commitmentSigned_m.h:23,
                 from FullNode.cpp:10:
HTLC.h:34:1: error: redefinition of ‘HTLC::HTLC(UpdateAddHTLC*)’
   34 | HTLC::HTLC(UpdateAddHTLC *htlc) {
      | ^~~~
In file included from PaymentChannel.h:7,
                 from FullNode.cpp:8:
HTLC.h:34:1: note: ‘HTLC::HTLC(UpdateAddHTLC*)’ previously defined here
   34 | HTLC::HTLC(UpdateAddHTLC *htlc) {
      | ^~~~
In file included from commitmentSigned_m.h:23,
                 from FullNode.cpp:10:
HTLC.h:41:1: error: redefinition of ‘HTLC::HTLC(UpdateFulfillHTLC*)’
   41 | HTLC::HTLC(UpdateFulfillHTLC *htlc) {
      | ^~~~
In file included from PaymentChannel.h:7,
                 from FullNode.cpp:8:
HTLC.h:41:1: note: ‘HTLC::HTLC(UpdateFulfillHTLC*)’ previously defined here
   41 | HTLC::HTLC(UpdateFulfillHTLC *htlc) {
      | ^~~~
In file included from commitmentSigned_m.h:23,
                 from FullNode.cpp:10:
HTLC.h:47:1: error: redefinition of ‘HTLC::HTLC(UpdateFailHTLC*)’
   47 | HTLC::HTLC(UpdateFailHTLC *htlc) {
      | ^~~~
In file included from PaymentChannel.h:7,
                 from FullNode.cpp:8:
HTLC.h:47:1: note: ‘HTLC::HTLC(UpdateFailHTLC*)’ previously defined here
   47 | HTLC::HTLC(UpdateFailHTLC *htlc) {
      | ^~~~
make: *** [Makefile:128: out/gcc-release//FullNode.o] Error 1
"make MODE=release all" terminated with exit code 2. Build might be incomplete.
21:27:38 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
In file included from FullNode.cpp:8:
PaymentChannel.h:24:31: error: ‘HTLC’ was not declared in this scope
   24 |         std::map<std::string, HTLC *> _pendingHTLCs; //paymentHash to HTLC
      |                               ^~~~
PaymentChannel.h:24:37: error: template argument 2 is invalid
   24 |         std::map<std::string, HTLC *> _pendingHTLCs; //paymentHash to HTLC
      |                                     ^
PaymentChannel.h:24:37: error: template argument 4 is invalid
PaymentChannel.h:26:35: error: ‘HTLC’ was not declared in this scope
   26 |         std::map<int, std::vector<HTLC *>> _HTLCsWaitingForAck; //ackId to HTLCs waiting for ack to arrive
      |                                   ^~~~
PaymentChannel.h:26:40: error: template argument 1 is invalid
   26 |         std::map<int, std::vector<HTLC *>> _HTLCsWaitingForAck; //ackId to HTLCs waiting for ack to arrive
      |                                        ^
PaymentChannel.h:26:40: error: template argument 2 is invalid
PaymentChannel.h:26:41: error: template argument 2 is invalid
   26 |         std::map<int, std::vector<HTLC *>> _HTLCsWaitingForAck; //ackId to HTLCs waiting for ack to arrive
      |                                         ^~
PaymentChannel.h:26:41: error: template argument 4 is invalid
In file included from FullNode.cpp:8:
PaymentChannel.h:58:64: error: ‘HTLC’ has not been declared
   58 |          virtual void setPendingHTLC (std::string paymentHash, HTLC *htlc) { this->_pendingHTLCs[paymentHash] = htlc; };
      |                                                                ^~~~
PaymentChannel.h:59:18: error: ‘HTLC’ does not name a type
   59 |          virtual HTLC* getPendingHTLC (std::string paymentHash) { return this->_pendingHTLCs[paymentHash]; };
      |                  ^~~~
PaymentChannel.h:65:30: error: ‘HTLC’ was not declared in this scope
   65 |          virtual std::vector<HTLC *> getHTLCsWaitingForAck (int id) { return this->_HTLCsWaitingForAck[id]; };
      |                              ^~~~
PaymentChannel.h:65:36: error: template argument 1 is invalid
   65 |          virtual std::vector<HTLC *> getHTLCsWaitingForAck (int id) { return this->_HTLCsWaitingForAck[id]; };
      |                                    ^
PaymentChannel.h:65:36: error: template argument 2 is invalid
PaymentChannel.h:66:66: error: ‘HTLC’ was not declared in this scope
   66 |          virtual void setHTLCsWaitingForAck (int id, std::vector<HTLC *> vector) { this->_HTLCsWaitingForAck[id] = vector;};
      |                                                                  ^~~~
PaymentChannel.h:66:72: error: template argument 1 is invalid
   66 |          virtual void setHTLCsWaitingForAck (int id, std::vector<HTLC *> vector) { this->_HTLCsWaitingForAck[id] = vector;};
      |                                                                        ^
PaymentChannel.h:66:72: error: template argument 2 is invalid
PaymentChannel.h:66:66: error: ‘HTLC’ was not declared in this scope
   66 |          virtual void setHTLCsWaitingForAck (int id, std::vector<HTLC *> vector) { this->_HTLCsWaitingForAck[id] = vector;};
      |                                                                  ^~~~
PaymentChannel.h:66:72: error: template argument 1 is invalid
   66 |          virtual void setHTLCsWaitingForAck (int id, std::vector<HTLC *> vector) { this->_HTLCsWaitingForAck[id] = vector;};
      |                                                                        ^
PaymentChannel.h:66:72: error: template argument 2 is invalid
PaymentChannel.h:66:66: error: ‘HTLC’ was not declared in this scope
   66 |          virtual void setHTLCsWaitingForAck (int id, std::vector<HTLC *> vector) { this->_HTLCsWaitingForAck[id] = vector;};
      |                                                                  ^~~~
PaymentChannel.h:66:72: error: template argument 1 is invalid
   66 |          virtual void setHTLCsWaitingForAck (int id, std::vector<HTLC *> vector) { this->_HTLCsWaitingForAck[id] = vector;};
      |                                                                        ^
PaymentChannel.h:66:72: error: template argument 2 is invalid
PaymentChannel.h:66:59: error: ‘std::vector’ is not a type
   66 |          virtual void setHTLCsWaitingForAck (int id, std::vector<HTLC *> vector) { this->_HTLCsWaitingForAck[id] = vector;};
      |                                                           ^~~~~~
PaymentChannel.h:66:65: error: expected ‘,’ or ‘...’ before ‘<’ token
   66 |          virtual void setHTLCsWaitingForAck (int id, std::vector<HTLC *> vector) { this->_HTLCsWaitingForAck[id] = vector;};
      |                                                                 ^
PaymentChannel.h: In member function ‘virtual void PaymentChannel::setPendingHTLC(std::string, int*)’:
PaymentChannel.h:58:97: error: no match for ‘operator[]’ (operand types are ‘int’ and ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’})
   58 |          virtual void setPendingHTLC (std::string paymentHash, HTLC *htlc) { this->_pendingHTLCs[paymentHash] = htlc; };
      |                                                                                                 ^
PaymentChannel.h: In member function ‘virtual void PaymentChannel::removePendingHTLC(std::string)’:
PaymentChannel.h:60:89: error: request for member ‘erase’ in ‘((PaymentChannel*)this)->PaymentChannel::_pendingHTLCs’, which is of non-class type ‘int’
   60 |          virtual void removePendingHTLC (std::string paymentHash) { this->_pendingHTLCs.erase(paymentHash); };
      |                                                                                         ^~~~~
PaymentChannel.h: In member function ‘virtual int PaymentChannel::getHTLCsWaitingForAck(int)’:
PaymentChannel.h:65:103: error: invalid types ‘int[int]’ for array subscript
   65 |          virtual std::vector<HTLC *> getHTLCsWaitingForAck (int id) { return this->_HTLCsWaitingForAck[id]; };
      |                                                                                                       ^
PaymentChannel.h: In member function ‘virtual void PaymentChannel::setHTLCsWaitingForAck(int, int)’:
PaymentChannel.h:66:109: error: invalid types ‘int[int]’ for array subscript
   66 |          virtual void setHTLCsWaitingForAck (int id, std::vector<HTLC *> vector) { this->_HTLCsWaitingForAck[id] = vector;};
      |                                                                                                             ^
PaymentChannel.h:66:116: error: ‘vector’ was not declared in this scope; did you mean ‘std::vector’?
   66 |          virtual void setHTLCsWaitingForAck (int id, std::vector<HTLC *> vector) { this->_HTLCsWaitingForAck[id] = vector;};
      |                                                                                                                    ^~~~~~
      |                                                                                                                    std::vector
In file included from /usr/include/c++/10/vector:67,
                 from /home/gabriel/omnetpp-5.7/include/omnetpp/onstartup.h:19,
                 from /home/gabriel/omnetpp-5.7/include/omnetpp/globals.h:21,
                 from /home/gabriel/omnetpp-5.7/include/omnetpp/cobjectfactory.h:20,
                 from /home/gabriel/omnetpp-5.7/include/omnetpp.h:30,
                 from globals.h:2,
                 from FullNode.cpp:1:
/usr/include/c++/10/bits/stl_vector.h:389:11: note: ‘std::vector’ declared here
  389 |     class vector : protected _Vector_base<_Tp, _Alloc>
      |           ^~~~~~
In file included from FullNode.cpp:8:
PaymentChannel.h: In member function ‘virtual void PaymentChannel::removeHTLCsWaitingForAck(int)’:
PaymentChannel.h:67:85: error: request for member ‘erase’ in ‘((PaymentChannel*)this)->PaymentChannel::_HTLCsWaitingForAck’, which is of non-class type ‘int’
   67 |          virtual void removeHTLCsWaitingForAck (int id) { this->_HTLCsWaitingForAck.erase(id); };
      |                                                                                     ^~~~~
FullNode.cpp: In member function ‘virtual void FullNode::handleMessage(omnetpp::cMessage*)’:
FullNode.cpp:251:81: error: cannot convert ‘HTLC*’ to ‘int*’
  251 |             _paymentChannels[firstHop].setPendingHTLC(invMsg->getPaymentHash(), firstHTLC);
      |                                                                                 ^~~~~~~~~
      |                                                                                 |
      |                                                                                 HTLC*
In file included from FullNode.cpp:8:
PaymentChannel.h:58:70: note:   initializing argument 2 of ‘virtual void PaymentChannel::setPendingHTLC(std::string, int*)’
   58 |          virtual void setPendingHTLC (std::string paymentHash, HTLC *htlc) { this->_pendingHTLCs[paymentHash] = htlc; };
      |                                                                ~~~~~~^~~~
FullNode.cpp:284:93: error: cannot convert ‘HTLC*’ to ‘int*’
  284 |                 _paymentChannels[sender].setPendingHTLC(updateAddHTLCMsg->getPaymentHash(), htlcBackward);
      |                                                                                             ^~~~~~~~~~~~
      |                                                                                             |
      |                                                                                             HTLC*
In file included from FullNode.cpp:8:
PaymentChannel.h:58:70: note:   initializing argument 2 of ‘virtual void PaymentChannel::setPendingHTLC(std::string, int*)’
   58 |          virtual void setPendingHTLC (std::string paymentHash, HTLC *htlc) { this->_pendingHTLCs[paymentHash] = htlc; };
      |                                                                ~~~~~~^~~~
FullNode.cpp:325:94: error: cannot convert ‘HTLC*’ to ‘int*’
  325 |                 _paymentChannels[nextHop].setPendingHTLC(newUpdateAddHTLC->getPaymentHash(), htlcForward);
      |                                                                                              ^~~~~~~~~~~
      |                                                                                              |
      |                                                                                              HTLC*
In file included from FullNode.cpp:8:
PaymentChannel.h:58:70: note:   initializing argument 2 of ‘virtual void PaymentChannel::setPendingHTLC(std::string, int*)’
   58 |          virtual void setPendingHTLC (std::string paymentHash, HTLC *htlc) { this->_pendingHTLCs[paymentHash] = htlc; };
      |                                                                ~~~~~~^~~~
FullNode.cpp:462:118: error: conversion from ‘int’ to non-scalar type ‘std::vector<HTLC*>’ requested
  462 |             std::vector<HTLC *> HTLCs = _paymentChannels[baseMsg->getSenderModule()->getName()].getHTLCsWaitingForAck(ackId);
      |                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~
FullNode.cpp:540:47: error: ‘std::map<std::__cxx11::basic_string<char>, PaymentChannel>::mapped_type’ {aka ‘class PaymentChannel’} has no member named ‘getPendingHTLC’; did you mean ‘setPendingHTLC’?
  540 |                 if (!_paymentChannels[sender].getPendingHTLC(paymentHashIterator)){
      |                                               ^~~~~~~~~~~~~~
      |                                               setPendingHTLC
FullNode.cpp: In member function ‘virtual bool FullNode::tryCommitTxOrFail(std::string, bool)’:
FullNode.cpp:651:45: error: ‘std::map<std::__cxx11::basic_string<char>, PaymentChannel>::mapped_type’ {aka ‘class PaymentChannel’} has no member named ‘getPendingHTLC’; did you mean ‘setPendingHTLC’?
  651 |             htlc = _paymentChannels[sender].getPendingHTLC(paymentHashIterator);
      |                                             ^~~~~~~~~~~~~~
      |                                             setPendingHTLC
FullNode.cpp:666:76: error: cannot convert ‘std::vector<HTLC*>’ to ‘int’
  666 |         _paymentChannels[sender].setHTLCsWaitingForAck(localCommitCounter, HTLCVector);
      |                                                                            ^~~~~~~~~~
      |                                                                            |
      |                                                                            std::vector<HTLC*>
In file included from FullNode.cpp:8:
PaymentChannel.h:66:54: note:   initializing argument 2 of ‘virtual void PaymentChannel::setHTLCsWaitingForAck(int, int)’
   66 |          virtual void setHTLCsWaitingForAck (int id, std::vector<HTLC *> vector) { this->_HTLCsWaitingForAck[id] = vector;};
      |                                                      ^~~~~~~~~~~
make: *** [Makefile:128: out/gcc-release//FullNode.o] Error 1
"make MODE=release all" terminated with exit code 2. Build might be incomplete.
21:27:51 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
MSGC: commitmentSigned.msg
FullNode.cpp
commitmentSigned_m.cpp
In file included from commitmentSigned_m.cpp:29:
commitmentSigned_m.h:25:25: error: ‘HTLC’ was not declared in this scope
   25 |     typedef std::vector<HTLC *> HTLCVector;
      |                         ^~~~
commitmentSigned_m.h:25:31: error: template argument 1 is invalid
   25 |     typedef std::vector<HTLC *> HTLCVector;
      |                               ^
commitmentSigned_m.h:25:31: error: template argument 2 is invalid
make: *** [Makefile:128: out/gcc-release//commitmentSigned_m.o] Error 1
"make MODE=release all" terminated with exit code 2. Build might be incomplete.
21:28:43 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
MSGC: commitmentSigned.msg
FullNode.cpp
In file included from commitmentSigned_m.h:23,
                 from FullNode.cpp:10:
HTLC.h:5:7: error: redefinition of ‘class HTLC’
    5 | class HTLC {
      |       ^~~~
In file included from PaymentChannel.h:7,
                 from FullNode.cpp:8:
HTLC.h:5:7: note: previous definition of ‘class HTLC’
    5 | class HTLC {
      |       ^~~~
In file included from commitmentSigned_m.h:23,
                 from FullNode.cpp:10:
HTLC.h:34:1: error: redefinition of ‘HTLC::HTLC(UpdateAddHTLC*)’
   34 | HTLC::HTLC(UpdateAddHTLC *htlc) {
      | ^~~~
In file included from PaymentChannel.h:7,
                 from FullNode.cpp:8:
HTLC.h:34:1: note: ‘HTLC::HTLC(UpdateAddHTLC*)’ previously defined here
   34 | HTLC::HTLC(UpdateAddHTLC *htlc) {
      | ^~~~
In file included from commitmentSigned_m.h:23,
                 from FullNode.cpp:10:
HTLC.h:41:1: error: redefinition of ‘HTLC::HTLC(UpdateFulfillHTLC*)’
   41 | HTLC::HTLC(UpdateFulfillHTLC *htlc) {
      | ^~~~
In file included from PaymentChannel.h:7,
                 from FullNode.cpp:8:
HTLC.h:41:1: note: ‘HTLC::HTLC(UpdateFulfillHTLC*)’ previously defined here
   41 | HTLC::HTLC(UpdateFulfillHTLC *htlc) {
      | ^~~~
In file included from commitmentSigned_m.h:23,
                 from FullNode.cpp:10:
HTLC.h:47:1: error: redefinition of ‘HTLC::HTLC(UpdateFailHTLC*)’
   47 | HTLC::HTLC(UpdateFailHTLC *htlc) {
      | ^~~~
In file included from PaymentChannel.h:7,
                 from FullNode.cpp:8:
HTLC.h:47:1: note: ‘HTLC::HTLC(UpdateFailHTLC*)’ previously defined here
   47 | HTLC::HTLC(UpdateFailHTLC *htlc) {
      | ^~~~
make: *** [Makefile:128: out/gcc-release//FullNode.o] Error 1
"make MODE=release all" terminated with exit code 2. Build might be incomplete.
21:30:51 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
commitmentSigned_m.cpp
Creating executable: out/gcc-release//simulator
/usr/bin/ld: out/gcc-release//commitmentSigned_m.o: in function `HTLC::HTLC(UpdateAddHTLC*)':
commitmentSigned_m.cpp:(.text+0x1e10): multiple definition of `HTLC::HTLC(UpdateAddHTLC*)'; out/gcc-release//FullNode.o:FullNode.cpp:(.text+0x20f0): first defined here
/usr/bin/ld: out/gcc-release//commitmentSigned_m.o: in function `HTLC::HTLC(UpdateAddHTLC*)':
commitmentSigned_m.cpp:(.text+0x1e10): multiple definition of `HTLC::HTLC(UpdateAddHTLC*)'; out/gcc-release//FullNode.o:FullNode.cpp:(.text+0x20f0): first defined here
/usr/bin/ld: out/gcc-release//commitmentSigned_m.o: in function `HTLC::HTLC(UpdateFulfillHTLC*)':
commitmentSigned_m.cpp:(.text+0x1f80): multiple definition of `HTLC::HTLC(UpdateFulfillHTLC*)'; out/gcc-release//FullNode.o:FullNode.cpp:(.text+0x2260): first defined here
/usr/bin/ld: out/gcc-release//commitmentSigned_m.o: in function `HTLC::HTLC(UpdateFulfillHTLC*)':
commitmentSigned_m.cpp:(.text+0x1f80): multiple definition of `HTLC::HTLC(UpdateFulfillHTLC*)'; out/gcc-release//FullNode.o:FullNode.cpp:(.text+0x2260): first defined here
/usr/bin/ld: out/gcc-release//commitmentSigned_m.o: in function `HTLC::HTLC(UpdateFailHTLC*)':
commitmentSigned_m.cpp:(.text+0x20d0): multiple definition of `HTLC::HTLC(UpdateFailHTLC*)'; out/gcc-release//FullNode.o:FullNode.cpp:(.text+0x23b0): first defined here
/usr/bin/ld: out/gcc-release//commitmentSigned_m.o: in function `HTLC::HTLC(UpdateFailHTLC*)':
commitmentSigned_m.cpp:(.text+0x20d0): multiple definition of `HTLC::HTLC(UpdateFailHTLC*)'; out/gcc-release//FullNode.o:FullNode.cpp:(.text+0x23b0): first defined here
collect2: error: ld returned 1 exit status
make: *** [Makefile:119: out/gcc-release//simulator] Error 1
"make MODE=release all" terminated with exit code 2. Build might be incomplete.
21:31:30 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
commitmentSigned_m.cpp
Creating executable: out/gcc-release//simulator
/usr/bin/ld: out/gcc-release//commitmentSigned_m.o: in function `HTLC::HTLC(UpdateAddHTLC*)':
commitmentSigned_m.cpp:(.text+0x1e10): multiple definition of `HTLC::HTLC(UpdateAddHTLC*)'; out/gcc-release//FullNode.o:FullNode.cpp:(.text+0x20f0): first defined here
/usr/bin/ld: out/gcc-release//commitmentSigned_m.o: in function `HTLC::HTLC(UpdateAddHTLC*)':
commitmentSigned_m.cpp:(.text+0x1e10): multiple definition of `HTLC::HTLC(UpdateAddHTLC*)'; out/gcc-release//FullNode.o:FullNode.cpp:(.text+0x20f0): first defined here
/usr/bin/ld: out/gcc-release//commitmentSigned_m.o: in function `HTLC::HTLC(UpdateFulfillHTLC*)':
commitmentSigned_m.cpp:(.text+0x1f80): multiple definition of `HTLC::HTLC(UpdateFulfillHTLC*)'; out/gcc-release//FullNode.o:FullNode.cpp:(.text+0x2260): first defined here
/usr/bin/ld: out/gcc-release//commitmentSigned_m.o: in function `HTLC::HTLC(UpdateFulfillHTLC*)':
commitmentSigned_m.cpp:(.text+0x1f80): multiple definition of `HTLC::HTLC(UpdateFulfillHTLC*)'; out/gcc-release//FullNode.o:FullNode.cpp:(.text+0x2260): first defined here
/usr/bin/ld: out/gcc-release//commitmentSigned_m.o: in function `HTLC::HTLC(UpdateFailHTLC*)':
commitmentSigned_m.cpp:(.text+0x20d0): multiple definition of `HTLC::HTLC(UpdateFailHTLC*)'; out/gcc-release//FullNode.o:FullNode.cpp:(.text+0x23b0): first defined here
/usr/bin/ld: out/gcc-release//commitmentSigned_m.o: in function `HTLC::HTLC(UpdateFailHTLC*)':
commitmentSigned_m.cpp:(.text+0x20d0): multiple definition of `HTLC::HTLC(UpdateFailHTLC*)'; out/gcc-release//FullNode.o:FullNode.cpp:(.text+0x23b0): first defined here
collect2: error: ld returned 1 exit status
make: *** [Makefile:119: out/gcc-release//simulator] Error 1
"make MODE=release all" terminated with exit code 2. Build might be incomplete.
21:32:08 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
commitmentSigned_m.cpp
Creating executable: out/gcc-release//simulator
/usr/bin/ld: out/gcc-release//commitmentSigned_m.o: in function `HTLC::HTLC(UpdateAddHTLC*)':
commitmentSigned_m.cpp:(.text+0x1e10): multiple definition of `HTLC::HTLC(UpdateAddHTLC*)'; out/gcc-release//FullNode.o:FullNode.cpp:(.text+0x20f0): first defined here
/usr/bin/ld: out/gcc-release//commitmentSigned_m.o: in function `HTLC::HTLC(UpdateAddHTLC*)':
commitmentSigned_m.cpp:(.text+0x1e10): multiple definition of `HTLC::HTLC(UpdateAddHTLC*)'; out/gcc-release//FullNode.o:FullNode.cpp:(.text+0x20f0): first defined here
/usr/bin/ld: out/gcc-release//commitmentSigned_m.o: in function `HTLC::HTLC(UpdateFulfillHTLC*)':
commitmentSigned_m.cpp:(.text+0x1f80): multiple definition of `HTLC::HTLC(UpdateFulfillHTLC*)'; out/gcc-release//FullNode.o:FullNode.cpp:(.text+0x2260): first defined here
/usr/bin/ld: out/gcc-release//commitmentSigned_m.o: in function `HTLC::HTLC(UpdateFulfillHTLC*)':
commitmentSigned_m.cpp:(.text+0x1f80): multiple definition of `HTLC::HTLC(UpdateFulfillHTLC*)'; out/gcc-release//FullNode.o:FullNode.cpp:(.text+0x2260): first defined here
/usr/bin/ld: out/gcc-release//commitmentSigned_m.o: in function `HTLC::HTLC(UpdateFailHTLC*)':
commitmentSigned_m.cpp:(.text+0x20d0): multiple definition of `HTLC::HTLC(UpdateFailHTLC*)'; out/gcc-release//FullNode.o:FullNode.cpp:(.text+0x23b0): first defined here
/usr/bin/ld: out/gcc-release//commitmentSigned_m.o: in function `HTLC::HTLC(UpdateFailHTLC*)':
commitmentSigned_m.cpp:(.text+0x20d0): multiple definition of `HTLC::HTLC(UpdateFailHTLC*)'; out/gcc-release//FullNode.o:FullNode.cpp:(.text+0x23b0): first defined here
collect2: error: ld returned 1 exit status
make: *** [Makefile:119: out/gcc-release//simulator] Error 1
"make MODE=release all" terminated with exit code 2. Build might be incomplete.
21:39:29 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
HTLC.cpp
commitmentSigned_m.cpp
Creating executable: out/gcc-release//simulator
21:01:38 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
MSGC: HTLCRefused.msg
MSGC: updateFailHTLC.msg
MSGC: updateFulfillHTLC.msg
FullNode.cpp
FullNode.cpp: In member function ‘virtual void FullNode::handleMessage(omnetpp::cMessage*)’:
FullNode.cpp:310:112: error: no matching function for call to ‘PaymentChannel::removePendingHTLC(const char*, HTLC*&)’
  310 |                     _paymentChannels[sender].removePendingHTLC(updateAddHTLCMsg->getPaymentHash(), htlcBackward);
      |                                                                                                                ^
In file included from FullNode.cpp:8:
PaymentChannel.h:60:23: note: candidate: ‘virtual void PaymentChannel::removePendingHTLC(std::string)’
   60 |          virtual void removePendingHTLC (std::string paymentHash) { this->_pendingHTLCs.erase(paymentHash); };
      |                       ^~~~~~~~~~~~~~~~~
PaymentChannel.h:60:23: note:   candidate expects 1 argument, 2 provided
FullNode.cpp:311:106: error: no matching function for call to ‘PaymentChannel::removeLastPendingHTLCFIFO(const char*)’
  311 |                     _paymentChannels[sender].removeLastPendingHTLCFIFO(updateAddHTLCMsg->getPaymentHash());
      |                                                                                                          ^
In file included from FullNode.cpp:8:
PaymentChannel.h:66:23: note: candidate: ‘virtual void PaymentChannel::removeLastPendingHTLCFIFO()’
   66 |          virtual void removeLastPendingHTLCFIFO () { this->_pendingHTLCsFIFO.pop_back(); };
      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~
PaymentChannel.h:66:23: note:   candidate expects 0 arguments, 1 provided
FullNode.cpp:312:106: error: no matching function for call to ‘PaymentChannel::removePreviousHop(const char*, std::string&)’
  312 |                     _paymentChannels[sender].removePreviousHop(updateAddHTLCMsg->getPaymentHash(), sender);
      |                                                                                                          ^
In file included from FullNode.cpp:8:
PaymentChannel.h:73:23: note: candidate: ‘virtual void PaymentChannel::removePreviousHop(std::string)’
   73 |          virtual void removePreviousHop (std::string paymentHash) { this->_previousHop.erase(paymentHash); };
      |                       ^~~~~~~~~~~~~~~~~
PaymentChannel.h:73:23: note:   candidate expects 1 argument, 2 provided
FullNode.cpp:321:21: error: ‘HTLCRefused’ was not declared in this scope
  321 |                     HTLCRefused *newHTLCRefusedMsg = new HTLCRefused();
      |                     ^~~~~~~~~~~
FullNode.cpp:321:34: error: ‘newHTLCRefusedMsg’ was not declared in this scope
  321 |                     HTLCRefused *newHTLCRefusedMsg = new HTLCRefused();
      |                                  ^~~~~~~~~~~~~~~~~
FullNode.cpp:321:58: error: expected type-specifier before ‘HTLCRefused’
  321 |                     HTLCRefused *newHTLCRefusedMsg = new HTLCRefused();
      |                                                          ^~~~~~~~~~~
FullNode.cpp:384:13: error: ‘HTLCRefused’ was not declared in this scope
  384 |             HTLCRefused *HTLCRefusedMsg = check_and_cast<HTLCRefused *> (baseMsg->decapsulate());
      |             ^~~~~~~~~~~
FullNode.cpp:384:26: error: ‘HTLCRefusedMsg’ was not declared in this scope
  384 |             HTLCRefused *HTLCRefusedMsg = check_and_cast<HTLCRefused *> (baseMsg->decapsulate());
      |                          ^~~~~~~~~~~~~~
FullNode.cpp:384:43: error: parse error in template argument list
  384 |             HTLCRefused *HTLCRefusedMsg = check_and_cast<HTLCRefused *> (baseMsg->decapsulate());
      |                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
FullNode.cpp:384:96: error: no matching function for call to ‘check_and_cast<<expression error> >(omnetpp::cPacket*)’
  384 |             HTLCRefused *HTLCRefusedMsg = check_and_cast<HTLCRefused *> (baseMsg->decapsulate());
      |                                                                                                ^
In file included from /home/gabriel/omnetpp-5.7/include/omnetpp.h:52,
                 from globals.h:2,
                 from FullNode.cpp:1:
/home/gabriel/omnetpp-5.7/include/omnetpp/checkandcast.h:61:3: note: candidate: ‘template<class P, class T> P omnetpp::check_and_cast(T*)’
   61 | P check_and_cast(T *p)
      |   ^~~~~~~~~~~~~~
/home/gabriel/omnetpp-5.7/include/omnetpp/checkandcast.h:61:3: note:   template argument deduction/substitution failed:
FullNode.cpp:384:96: error: template argument 1 is invalid
  384 |             HTLCRefused *HTLCRefusedMsg = check_and_cast<HTLCRefused *> (baseMsg->decapsulate());
      |                                                                                                ^
FullNode.cpp:510:104: error: ‘std::map<std::__cxx11::basic_string<char>, PaymentChannel>::mapped_type’ {aka ‘class PaymentChannel’} has no member named ‘getPendingHTLCFIFO’; did you mean ‘getPendingHTLC’?
  510 |                     paymentHashIterator.assign(_paymentChannels[baseMsg->getSenderModule()->getName()].getPendingHTLCFIFO());
      |                                                                                                        ^~~~~~~~~~~~~~~~~~
      |                                                                                                        getPendingHTLC
FullNode.cpp:511:77: error: ‘std::map<std::__cxx11::basic_string<char>, PaymentChannel>::mapped_type’ {aka ‘class PaymentChannel’} has no member named ‘removePendingHTLCFIFO’; did you mean ‘removePendingHTLC’?
  511 |                     _paymentChannels[baseMsg->getSenderModule()->getName()].removePendingHTLCFIFO();
      |                                                                             ^~~~~~~~~~~~~~~~~~~~~
      |                                                                             removePendingHTLC
FullNode.cpp:588:49: error: switch quantity not an integer
  588 |                     switch(HTLCIterator->getType()) {
      |                            ~~~~~~~~~~~~~~~~~~~~~^~
FullNode.cpp:619:74: error: ‘std::map<std::__cxx11::basic_string<char>, PaymentChannel>::mapped_type’ {aka ‘class PaymentChannel’} has no member named ‘getPendingHTLCFIFO’; did you mean ‘getPendingHTLC’?
  619 |                     paymentHashIterator2.assign(_paymentChannels[sender].getPendingHTLCFIFO());
      |                                                                          ^~~~~~~~~~~~~~~~~~
      |                                                                          getPendingHTLC
FullNode.cpp:620:46: error: ‘std::map<std::__cxx11::basic_string<char>, PaymentChannel>::mapped_type’ {aka ‘class PaymentChannel’} has no member named ‘removePendingHTLCFIFO’; did you mean ‘removePendingHTLC’?
  620 |                     _paymentChannels[sender].removePendingHTLCFIFO();
      |                                              ^~~~~~~~~~~~~~~~~~~~~
      |                                              removePendingHTLC
FullNode.cpp: In member function ‘virtual double FullNode::getCapacityAfterPendingHTLCs(std::string)’:
FullNode.cpp:677:19: error: expected initializer before ‘_paymentChannels’
  677 |     int batchSize _paymentChannels[nodeName].getPendingBatchSize();
      |                   ^~~~~~~~~~~~~~~~
FullNode.cpp: In member function ‘virtual bool FullNode::tryCommitTxOrFail(std::string, bool)’:
FullNode.cpp:722:65: error: ‘std::map<std::__cxx11::basic_string<char>, PaymentChannel>::mapped_type’ {aka ‘class PaymentChannel’} has no member named ‘getPendingHTLCFIFO’; did you mean ‘getPendingHTLC’?
  722 |             paymentHashIterator.assign(_paymentChannels[sender].getPendingHTLCFIFO());
      |                                                                 ^~~~~~~~~~~~~~~~~~
      |                                                                 getPendingHTLC
FullNode.cpp:725:38: error: ‘std::map<std::__cxx11::basic_string<char>, PaymentChannel>::mapped_type’ {aka ‘class PaymentChannel’} has no member named ‘removePendingHTLCFIFO’; did you mean ‘removePendingHTLC’?
  725 |             _paymentChannels[sender].removePendingHTLCFIFO();
      |                                      ^~~~~~~~~~~~~~~~~~~~~
      |                                      removePendingHTLC
make: *** [Makefile:131: out/gcc-release//FullNode.o] Error 1
"make MODE=release all" terminated with exit code 2. Build might be incomplete.
21:03:14 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
FullNode.cpp: In member function ‘virtual void FullNode::handleMessage(omnetpp::cMessage*)’:
FullNode.cpp:311:112: error: no matching function for call to ‘PaymentChannel::removePendingHTLC(const char*, HTLC*&)’
  311 |                     _paymentChannels[sender].removePendingHTLC(updateAddHTLCMsg->getPaymentHash(), htlcBackward);
      |                                                                                                                ^
In file included from FullNode.cpp:8:
PaymentChannel.h:60:23: note: candidate: ‘virtual void PaymentChannel::removePendingHTLC(std::string)’
   60 |          virtual void removePendingHTLC (std::string paymentHash) { this->_pendingHTLCs.erase(paymentHash); };
      |                       ^~~~~~~~~~~~~~~~~
PaymentChannel.h:60:23: note:   candidate expects 1 argument, 2 provided
FullNode.cpp:312:106: error: no matching function for call to ‘PaymentChannel::removeLastPendingHTLCFIFO(const char*)’
  312 |                     _paymentChannels[sender].removeLastPendingHTLCFIFO(updateAddHTLCMsg->getPaymentHash());
      |                                                                                                          ^
In file included from FullNode.cpp:8:
PaymentChannel.h:66:23: note: candidate: ‘virtual void PaymentChannel::removeLastPendingHTLCFIFO()’
   66 |          virtual void removeLastPendingHTLCFIFO () { this->_pendingHTLCsFIFO.pop_back(); };
      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~
PaymentChannel.h:66:23: note:   candidate expects 0 arguments, 1 provided
FullNode.cpp:313:106: error: no matching function for call to ‘PaymentChannel::removePreviousHop(const char*, std::string&)’
  313 |                     _paymentChannels[sender].removePreviousHop(updateAddHTLCMsg->getPaymentHash(), sender);
      |                                                                                                          ^
In file included from FullNode.cpp:8:
PaymentChannel.h:73:23: note: candidate: ‘virtual void PaymentChannel::removePreviousHop(std::string)’
   73 |          virtual void removePreviousHop (std::string paymentHash) { this->_previousHop.erase(paymentHash); };
      |                       ^~~~~~~~~~~~~~~~~
PaymentChannel.h:73:23: note:   candidate expects 1 argument, 2 provided
FullNode.cpp:324:80: error: expected ‘;’ before ‘newMessage’
  324 |                     newHTLCRefusedMsg->setErrorReason("INSUFFICIENT CAPACITY.")
      |                                                                                ^
      |                                                                                ;
  325 | 
  326 |                     newMessage->encapsulate(newHTLCRefusedMsg);
      |                     ~~~~~~~~~~                                                  
FullNode.cpp:511:104: error: ‘std::map<std::__cxx11::basic_string<char>, PaymentChannel>::mapped_type’ {aka ‘class PaymentChannel’} has no member named ‘getPendingHTLCFIFO’; did you mean ‘getPendingHTLC’?
  511 |                     paymentHashIterator.assign(_paymentChannels[baseMsg->getSenderModule()->getName()].getPendingHTLCFIFO());
      |                                                                                                        ^~~~~~~~~~~~~~~~~~
      |                                                                                                        getPendingHTLC
FullNode.cpp:512:77: error: ‘std::map<std::__cxx11::basic_string<char>, PaymentChannel>::mapped_type’ {aka ‘class PaymentChannel’} has no member named ‘removePendingHTLCFIFO’; did you mean ‘removePendingHTLC’?
  512 |                     _paymentChannels[baseMsg->getSenderModule()->getName()].removePendingHTLCFIFO();
      |                                                                             ^~~~~~~~~~~~~~~~~~~~~
      |                                                                             removePendingHTLC
FullNode.cpp:589:49: error: switch quantity not an integer
  589 |                     switch(HTLCIterator->getType()) {
      |                            ~~~~~~~~~~~~~~~~~~~~~^~
FullNode.cpp:620:74: error: ‘std::map<std::__cxx11::basic_string<char>, PaymentChannel>::mapped_type’ {aka ‘class PaymentChannel’} has no member named ‘getPendingHTLCFIFO’; did you mean ‘getPendingHTLC’?
  620 |                     paymentHashIterator2.assign(_paymentChannels[sender].getPendingHTLCFIFO());
      |                                                                          ^~~~~~~~~~~~~~~~~~
      |                                                                          getPendingHTLC
FullNode.cpp:621:46: error: ‘std::map<std::__cxx11::basic_string<char>, PaymentChannel>::mapped_type’ {aka ‘class PaymentChannel’} has no member named ‘removePendingHTLCFIFO’; did you mean ‘removePendingHTLC’?
  621 |                     _paymentChannels[sender].removePendingHTLCFIFO();
      |                                              ^~~~~~~~~~~~~~~~~~~~~
      |                                              removePendingHTLC
FullNode.cpp: In member function ‘virtual double FullNode::getCapacityAfterPendingHTLCs(std::string)’:
FullNode.cpp:678:19: error: expected initializer before ‘_paymentChannels’
  678 |     int batchSize _paymentChannels[nodeName].getPendingBatchSize();
      |                   ^~~~~~~~~~~~~~~~
FullNode.cpp: In member function ‘virtual bool FullNode::tryCommitTxOrFail(std::string, bool)’:
FullNode.cpp:723:65: error: ‘std::map<std::__cxx11::basic_string<char>, PaymentChannel>::mapped_type’ {aka ‘class PaymentChannel’} has no member named ‘getPendingHTLCFIFO’; did you mean ‘getPendingHTLC’?
  723 |             paymentHashIterator.assign(_paymentChannels[sender].getPendingHTLCFIFO());
      |                                                                 ^~~~~~~~~~~~~~~~~~
      |                                                                 getPendingHTLC
FullNode.cpp:726:38: error: ‘std::map<std::__cxx11::basic_string<char>, PaymentChannel>::mapped_type’ {aka ‘class PaymentChannel’} has no member named ‘removePendingHTLCFIFO’; did you mean ‘removePendingHTLC’?
  726 |             _paymentChannels[sender].removePendingHTLCFIFO();
      |                                      ^~~~~~~~~~~~~~~~~~~~~
      |                                      removePendingHTLC
make: *** [Makefile:131: out/gcc-release//FullNode.o] Error 1
"make MODE=release all" terminated with exit code 2. Build might be incomplete.
21:02:37 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
MSGC: updateAddHTLC.msg
FullNode.cpp
In file included from PaymentChannel.h:6,
                 from FullNode.cpp:8:
HTLC.h: In member function ‘virtual std::string HTLC::getType()’:
HTLC.h:19:44: error: could not convert ‘((HTLC*)this)->HTLC::_type’ from ‘int’ to ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’}
   19 |     virtual std::string getType() { return _type; };
      |                                            ^~~~~
      |                                            |
      |                                            int
HTLC.h: In member function ‘virtual void HTLC::setType(std::string)’:
HTLC.h:20:54: error: cannot convert ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’} to ‘int’ in assignment
   20 |     virtual void setType(std::string type) { _type = type; };
      |                                                      ^~~~
      |                                                      |
      |                                                      std::string {aka std::__cxx11::basic_string<char>}
In file included from FullNode.cpp:8:
PaymentChannel.h: In member function ‘virtual void PaymentChannel::setInFlight(std::string, double)’:
PaymentChannel.h:54:110: error: cannot convert ‘double’ to ‘std::map<std::__cxx11::basic_string<char>, HTLC*>::mapped_type’ {aka ‘HTLC*’} in assignment
   54 |          virtual void setInFlight (std::string paymentHash, double amount) { this->_inFlights[paymentHash] = amount; };
      |                                                                                                              ^~~~~~
      |                                                                                                              |
      |                                                                                                              double
PaymentChannel.h: In member function ‘virtual void PaymentChannel::removePendingHTLCFIFOByValue(std::string)’:
PaymentChannel.h:68:145: error: cannot convert ‘std::deque<std::__cxx11::basic_string<char> >::iterator’ {aka ‘std::_Deque_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::iterator’} to ‘const char*’
   68 |          virtual void removePendingHTLCFIFOByValue (std::string paymentHash) { this->_pendingHTLCsFIFO.erase(std::remove(_pendingHTLCsFIFO.begin(), _pendingHTLCsFIFO.end(), paymentHash), _pendingHTLCsFIFO.end()); };
      |                                                                                                                          ~~~~~~~~~~~~~~~~~~~~~~~^~
      |                                                                                                                                                 |
      |                                                                                                                                                 std::deque<std::__cxx11::basic_string<char> >::iterator {aka std::_Deque_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::iterator}
In file included from globals.h:1,
                 from FullNode.cpp:1:
/usr/include/stdio.h:146:32: note:   initializing argument 1 of ‘int remove(const char*)’
  146 | extern int remove (const char *__filename) __THROW;
      |                    ~~~~~~~~~~~~^~~~~~~~~~
FullNode.cpp: In member function ‘virtual void FullNode::handleMessage(omnetpp::cMessage*)’:
FullNode.cpp:300:21: error: ‘dstName’ was not declared in this scope; did you mean ‘setName’?
  300 |                 if (dstName == this->getName()){
      |                     ^~~~~~~
      |                     setName
FullNode.cpp:320:112: error: no matching function for call to ‘PaymentChannel::removePendingHTLC(const char*, HTLC*&)’
  320 |                     _paymentChannels[sender].removePendingHTLC(updateAddHTLCMsg->getPaymentHash(), htlcBackward);
      |                                                                                                                ^
In file included from FullNode.cpp:8:
PaymentChannel.h:61:23: note: candidate: ‘virtual void PaymentChannel::removePendingHTLC(std::string)’
   61 |          virtual void removePendingHTLC (std::string paymentHash) { this->_pendingHTLCs.erase(paymentHash); };
      |                       ^~~~~~~~~~~~~~~~~
PaymentChannel.h:61:23: note:   candidate expects 1 argument, 2 provided
FullNode.cpp:321:106: error: no matching function for call to ‘PaymentChannel::removeLastPendingHTLCFIFO(const char*)’
  321 |                     _paymentChannels[sender].removeLastPendingHTLCFIFO(updateAddHTLCMsg->getPaymentHash());
      |                                                                                                          ^
In file included from FullNode.cpp:8:
PaymentChannel.h:67:23: note: candidate: ‘virtual void PaymentChannel::removeLastPendingHTLCFIFO()’
   67 |          virtual void removeLastPendingHTLCFIFO () { this->_pendingHTLCsFIFO.pop_back(); };
      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~
PaymentChannel.h:67:23: note:   candidate expects 0 arguments, 1 provided
FullNode.cpp:322:106: error: no matching function for call to ‘PaymentChannel::removePreviousHop(const char*, std::string&)’
  322 |                     _paymentChannels[sender].removePreviousHop(updateAddHTLCMsg->getPaymentHash(), sender);
      |                                                                                                          ^
In file included from FullNode.cpp:8:
PaymentChannel.h:75:23: note: candidate: ‘virtual void PaymentChannel::removePreviousHop(std::string)’
   75 |          virtual void removePreviousHop (std::string paymentHash) { this->_previousHop.erase(paymentHash); };
      |                       ^~~~~~~~~~~~~~~~~
PaymentChannel.h:75:23: note:   candidate expects 1 argument, 2 provided
FullNode.cpp:348:48: error: ‘dstName’ was not declared in this scope; did you mean ‘setName’?
  348 |                     newMessage->setDestination(dstName.c_str());
      |                                                ^~~~~~~
      |                                                setName
FullNode.cpp:401:58: error: no match for ‘operator-’ (operand types are ‘stringVector’ {aka ‘std::vector<std::__cxx11::basic_string<char> >’} and ‘int’)
  401 |             std::string nextHop = path[baseMsg->getHops()-1];
      |                                        ~~~~~~~~~~~~~~~~~~^~
      |                                                        |  |
      |                                                        |  int
      |                                                        stringVector {aka std::vector<std::__cxx11::basic_string<char> >}
In file included from /home/gabriel/omnetpp-5.7/include/omnetpp.h:134,
                 from globals.h:2,
                 from FullNode.cpp:1:
/home/gabriel/omnetpp-5.7/include/omnetpp/platdep/timeutil.h:169:31: note: candidate: ‘timeval omnetpp::operator-(const timeval&, const timeval&)’
  169 | _OPPDEPRECATED inline timeval operator-(const timeval& a, const timeval& b) {return timeval_subtract(a,b);}
      |                               ^~~~~~~~
/home/gabriel/omnetpp-5.7/include/omnetpp/platdep/timeutil.h:169:56: note:   no known conversion for argument 1 from ‘stringVector’ {aka ‘std::vector<std::__cxx11::basic_string<char> >’} to ‘const timeval&’
  169 | _OPPDEPRECATED inline timeval operator-(const timeval& a, const timeval& b) {return timeval_subtract(a,b);}
      |                                         ~~~~~~~~~~~~~~~^
In file included from /usr/include/c++/10/bits/stl_algobase.h:67,
                 from /usr/include/c++/10/bits/char_traits.h:39,
                 from /usr/include/c++/10/ios:40,
                 from /usr/include/c++/10/ostream:38,
                 from /usr/include/c++/10/iostream:39,
                 from /home/gabriel/omnetpp-5.7/include/omnetpp/cownedobject.h:20,
                 from /home/gabriel/omnetpp-5.7/include/omnetpp/carray.h:19,
                 from /home/gabriel/omnetpp-5.7/include/omnetpp.h:28,
                 from globals.h:2,
                 from FullNode.cpp:1:
/usr/include/c++/10/bits/stl_iterator.h:525:5: note: candidate: ‘template<class _IteratorL, class _IteratorR> decltype ((__y.base() - __x.base())) std::operator-(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_IteratorR>&)’
  525 |     operator-(const reverse_iterator<_IteratorL>& __x,
      |     ^~~~~~~~
/usr/include/c++/10/bits/stl_iterator.h:525:5: note:   template argument deduction/substitution failed:
FullNode.cpp:401:59: note:   ‘stringVector’ {aka ‘std::vector<std::__cxx11::basic_string<char> >’} is not derived from ‘const std::reverse_iterator<_Iterator>’
  401 |             std::string nextHop = path[baseMsg->getHops()-1];
      |                                                           ^
In file included from /usr/include/c++/10/bits/stl_algobase.h:67,
                 from /usr/include/c++/10/bits/char_traits.h:39,
                 from /usr/include/c++/10/ios:40,
                 from /usr/include/c++/10/ostream:38,
                 from /usr/include/c++/10/iostream:39,
                 from /home/gabriel/omnetpp-5.7/include/omnetpp/cownedobject.h:20,
                 from /home/gabriel/omnetpp-5.7/include/omnetpp/carray.h:19,
                 from /home/gabriel/omnetpp-5.7/include/omnetpp.h:28,
                 from globals.h:2,
                 from FullNode.cpp:1:
/usr/include/c++/10/bits/stl_iterator.h:1571:5: note: candidate: ‘template<class _IteratorL, class _IteratorR> decltype ((__x.base() - __y.base())) std::operator-(const std::move_iterator<_IteratorL>&, const std::move_iterator<_IteratorR>&)’
 1571 |     operator-(const move_iterator<_IteratorL>& __x,
      |     ^~~~~~~~
/usr/include/c++/10/bits/stl_iterator.h:1571:5: note:   template argument deduction/substitution failed:
FullNode.cpp:401:59: note:   ‘stringVector’ {aka ‘std::vector<std::__cxx11::basic_string<char> >’} is not derived from ‘const std::move_iterator<_IteratorL>’
  401 |             std::string nextHop = path[baseMsg->getHops()-1];
      |                                                           ^
In file included from /usr/include/c++/10/bits/stl_algobase.h:67,
                 from /usr/include/c++/10/bits/char_traits.h:39,
                 from /usr/include/c++/10/ios:40,
                 from /usr/include/c++/10/ostream:38,
                 from /usr/include/c++/10/iostream:39,
                 from /home/gabriel/omnetpp-5.7/include/omnetpp/cownedobject.h:20,
                 from /home/gabriel/omnetpp-5.7/include/omnetpp/carray.h:19,
                 from /home/gabriel/omnetpp-5.7/include/omnetpp.h:28,
                 from globals.h:2,
                 from FullNode.cpp:1:
/usr/include/c++/10/bits/stl_iterator.h:1186:5: note: candidate: ‘template<class _IteratorL, class _IteratorR, class _Container> decltype ((__lhs.base() - __rhs.base())) __gnu_cxx::operator-(const __gnu_cxx::__normal_iterator<_IteratorL, _Container>&, const __gnu_cxx::__normal_iterator<_IteratorR, _Container>&)’
 1186 |     operator-(const __normal_iterator<_IteratorL, _Container>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/10/bits/stl_iterator.h:1186:5: note:   template argument deduction/substitution failed:
FullNode.cpp:401:59: note:   ‘stringVector’ {aka ‘std::vector<std::__cxx11::basic_string<char> >’} is not derived from ‘const __gnu_cxx::__normal_iterator<_IteratorL, _Container>’
  401 |             std::string nextHop = path[baseMsg->getHops()-1];
      |                                                           ^
In file included from /usr/include/c++/10/bits/stl_algobase.h:67,
                 from /usr/include/c++/10/bits/char_traits.h:39,
                 from /usr/include/c++/10/ios:40,
                 from /usr/include/c++/10/ostream:38,
                 from /usr/include/c++/10/iostream:39,
                 from /home/gabriel/omnetpp-5.7/include/omnetpp/cownedobject.h:20,
                 from /home/gabriel/omnetpp-5.7/include/omnetpp/carray.h:19,
                 from /home/gabriel/omnetpp-5.7/include/omnetpp.h:28,
                 from globals.h:2,
                 from FullNode.cpp:1:
/usr/include/c++/10/bits/stl_iterator.h:1199:5: note: candidate: ‘template<class _Iterator, class _Container> typename __gnu_cxx::__normal_iterator<_Iterator, _Container>::difference_type __gnu_cxx::operator-(const __gnu_cxx::__normal_iterator<_Iterator, _Container>&, const __gnu_cxx::__normal_iterator<_Iterator, _Container>&)’
 1199 |     operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/10/bits/stl_iterator.h:1199:5: note:   template argument deduction/substitution failed:
FullNode.cpp:401:59: note:   ‘stringVector’ {aka ‘std::vector<std::__cxx11::basic_string<char> >’} is not derived from ‘const __gnu_cxx::__normal_iterator<_Iterator, _Container>’
  401 |             std::string nextHop = path[baseMsg->getHops()-1];
      |                                                           ^
FullNode.cpp:451:61: error: ‘srcName’ was not declared in this scope; did you mean ‘setName’?
  451 |                         EV << "Setting timeout for node " + srcName + "\n";
      |                                                             ^~~~~~~
      |                                                             setName
FullNode.cpp:472:37: error: ‘class UpdateFailHTLC’ has no member named ‘setPreImage’
  472 |                 forwardFulfillHTLC->setPreImage(preImage.c_str());
      |                                     ^~~~~~~~~~~
FullNode.cpp:472:49: error: ‘preImage’ was not declared in this scope
  472 |                 forwardFulfillHTLC->setPreImage(preImage.c_str());
      |                                                 ^~~~~~~~
FullNode.cpp:486:82: error: ‘class UpdateFailHTLC’ has no member named ‘getHopCount’; did you mean ‘getShareCount’?
  486 |                 EV << "Sending pre image " + preImage + " to " + path[(failHTLC->getHopCount()-1)] + "for payment hash " + paymentHash + "\n";
      |                                                                                  ^~~~~~~~~~~
      |                                                                                  getShareCount
FullNode.cpp:491:57: error: ‘srcName’ was not declared in this scope; did you mean ‘setName’?
  491 |                     EV << "Setting timeout for node " + srcName + ".\n";
      |                                                         ^~~~~~~
      |                                                         setName
FullNode.cpp:497:23: error: ‘srcName’ was not declared in this scope; did you mean ‘setName’?
  497 |                 EV << srcName + " timeout expired. Creating commit.\n";
      |                       ^~~~~~~
      |                       setName
FullNode.cpp:539:62: error: ‘srcName’ was not declared in this scope; did you mean ‘setName’?
  539 |                          EV << "Setting timeout for node " + srcName + "\n";
      |                                                              ^~~~~~~
      |                                                              setName
FullNode.cpp:574:85: error: ‘class UpdateFulfillHTLC’ has no member named ‘getHopCount’; did you mean ‘getShareCount’?
  574 |                 EV << "Sending pre image " + preImage + " to " + path[(fulfillHTLC->getHopCount()-1)] + "for payment hash " + paymentHash + "\n";
      |                                                                                     ^~~~~~~~~~~
      |                                                                                     getShareCount
FullNode.cpp:579:57: error: ‘srcName’ was not declared in this scope; did you mean ‘setName’?
  579 |                     EV << "Setting timeout for node " + srcName + ".\n";
      |                                                         ^~~~~~~
      |                                                         setName
FullNode.cpp:585:23: error: ‘srcName’ was not declared in this scope; did you mean ‘setName’?
  585 |                 EV << srcName + " timeout expired. Creating commit.\n";
      |                       ^~~~~~~
      |                       setName
FullNode.cpp:631:37: error: switch quantity not an integer
  631 |                 switch(htlc->getType()) {
      |                        ~~~~~~~~~~~~~^~
FullNode.cpp:656:25: error: redeclaration of ‘std::string myName’
  656 |             std::string myName = getName();
      |                         ^~~~~~
FullNode.cpp:613:25: note: ‘std::string myName’ previously declared here
  613 |             std::string myName = getName();
      |                         ^~~~~~
FullNode.cpp:696:28: error: expected unqualified-id before ‘->’ token
  696 |                 switch(HTLC->getType()) {
      |                            ^~
FullNode.cpp: In member function ‘virtual double FullNode::getCapacityAfterPendingHTLCs(std::string)’:
FullNode.cpp:750:32: error: ISO C++ forbids comparison between pointer and integer [-fpermissive]
  750 |         if (htlc.second->_type == "UPDATE_ADD_HTLC")
      |             ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
FullNode.cpp: In member function ‘virtual void FullNode::sendFirstFulfillHTLC(std::string, std::string)’:
FullNode.cpp:938:41: error: ‘htlc’ was not declared in this scope
  938 |     std::string preImage = _myPreImages[htlc->getPaymentHash()];
      |                                         ^~~~
FullNode.cpp:970:60: error: ‘fulfillMsg’ was not declared in this scope
  970 |     EV << "Sending pre image " + preImage + " to " + path[(fulfillMsg->getHopCount()-1)] + "for payment hash " + paymentHash + "\n";
      |                                                            ^~~~~~~~~~
FullNode.cpp: In member function ‘virtual void FullNode::sendFirstFailHTLC(std::string, std::string)’:
FullNode.cpp:993:29: error: ‘value’ was not declared in this scope
  993 |     firstFailHTLC->setValue(value);
      |                             ^~~~~
FullNode.cpp:994:35: error: ‘errorReason’ was not declared in this scope
  994 |     firstFailHTLC->setErrorReason(errorReason);
      |                                   ^~~~~~~~~~~
FullNode.cpp:998:22: error: ‘firstHop’ was not declared in this scope
  998 |     _paymentChannels[firstHop].setPendingHTLC(paymentHash, baseHTLC);
      |                      ^~~~~~~~
FullNode.cpp:1011:34: error: ‘preImage’ was not declared in this scope
 1011 |     EV << "Sending pre image " + preImage + " to " + path[(failMsg->getHopCount()-1)] + "for payment hash " + paymentHash + "\n";
      |                                  ^~~~~~~~
FullNode.cpp:1011:60: error: ‘failMsg’ was not declared in this scope
 1011 |     EV << "Sending pre image " + preImage + " to " + path[(failMsg->getHopCount()-1)] + "for payment hash " + paymentHash + "\n";
      |                                                            ^~~~~~~
FullNode.cpp: In member function ‘virtual void FullNode::setInFlight(std::string, std::string)’:
FullNode.cpp:1025:56: error: cannot convert ‘HTLC*’ to ‘double’
 1025 |     _paymentChannels[nextHop].setInFlight(paymentHash, htlc);
      |                                                        ^~~~
      |                                                        |
      |                                                        HTLC*
In file included from FullNode.cpp:8:
PaymentChannel.h:54:68: note:   initializing argument 2 of ‘virtual void PaymentChannel::setInFlight(std::string, double)’
   54 |          virtual void setInFlight (std::string paymentHash, double amount) { this->_inFlights[paymentHash] = amount; };
      |                                                             ~~~~~~~^~~~~~
FullNode.cpp: At global scope:
FullNode.cpp:1029:1: error: expected declaration before ‘}’ token
 1029 | }
      | ^
FullNode.cpp: In member function ‘virtual void FullNode::commitUpdateAddHTLC(std::string, std::string)’:
FullNode.cpp:1033:48: error: invalid operands of types ‘const char [35]’ and ‘const char*’ to binary ‘operator+’
 1033 |     EV << "Commiting UPDATE_ADD_HTLC at node " + getName() + " with payment hash " + paymentHash + "...\n";
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~
      |           |                                             |
      |           const char [35]                               const char*
make: *** [Makefile:131: out/gcc-release//FullNode.o] Error 1
"make MODE=release all" terminated with exit code 2. Build might be incomplete.
21:32:44 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
In file included from FullNode.cpp:8:
PaymentChannel.h: In member function ‘virtual void PaymentChannel::removePendingHTLCFIFOByValue(std::string)’:
PaymentChannel.h:68:115: error: ‘remove_if’ is not a member of ‘std’; did you mean ‘remove_cv’?
   68 |          virtual void removePendingHTLCFIFOByValue (std::string paymentHash) { this->_pendingHTLCsFIFO.erase(std::remove_if(_pendingHTLCsFIFO.begin(), _pendingHTLCsFIFO.end(), paymentHash), _pendingHTLCsFIFO.end()); };
      |                                                                                                                   ^~~~~~~~~
      |                                                                                                                   remove_cv
FullNode.cpp: In member function ‘virtual void FullNode::handleMessage(omnetpp::cMessage*)’:
FullNode.cpp:321:89: error: no matching function for call to ‘PaymentChannel::removePendingHTLC(std::string&, HTLC*&)’
  321 |                     _paymentChannels[sender].removePendingHTLC(paymentHash, htlcBackward);
      |                                                                                         ^
In file included from FullNode.cpp:8:
PaymentChannel.h:61:23: note: candidate: ‘virtual void PaymentChannel::removePendingHTLC(std::string)’
   61 |          virtual void removePendingHTLC (std::string paymentHash) { this->_pendingHTLCs.erase(paymentHash); };
      |                       ^~~~~~~~~~~~~~~~~
PaymentChannel.h:61:23: note:   candidate expects 1 argument, 2 provided
FullNode.cpp:322:83: error: no matching function for call to ‘PaymentChannel::removeLastPendingHTLCFIFO(std::string&)’
  322 |                     _paymentChannels[sender].removeLastPendingHTLCFIFO(paymentHash);
      |                                                                                   ^
In file included from FullNode.cpp:8:
PaymentChannel.h:67:23: note: candidate: ‘virtual void PaymentChannel::removeLastPendingHTLCFIFO()’
   67 |          virtual void removeLastPendingHTLCFIFO () { this->_pendingHTLCsFIFO.pop_back(); };
      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~
PaymentChannel.h:67:23: note:   candidate expects 0 arguments, 1 provided
FullNode.cpp:323:83: error: no matching function for call to ‘PaymentChannel::removePreviousHop(std::string&, std::string&)’
  323 |                     _paymentChannels[sender].removePreviousHop(paymentHash, sender);
      |                                                                                   ^
In file included from FullNode.cpp:8:
PaymentChannel.h:75:23: note: candidate: ‘virtual void PaymentChannel::removePreviousHop(std::string)’
   75 |          virtual void removePreviousHop (std::string paymentHash) { this->_previousHop.erase(paymentHash); };
      |                       ^~~~~~~~~~~~~~~~~
PaymentChannel.h:75:23: note:   candidate expects 1 argument, 2 provided
FullNode.cpp:357:49: error: ‘srcName’ was not declared in this scope; did you mean ‘setName’?
  357 |                     newUpdateAddHTLC->setSource(srcName.c_str());
      |                                                 ^~~~~~~
      |                                                 setName
FullNode.cpp:453:59: error: invalid operands of types ‘const char [26]’ and ‘const char*’ to binary ‘operator+’
  453 |                         EV << "Setting timeout for node " + getName() + "\n";
      |                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~
      |                               |                                    |
      |                               const char [26]                      const char*
FullNode.cpp:474:49: error: cannot convert ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’} to ‘const char*’
  474 |                 forwardFailHTLC->setErrorReason(errorReason);
      |                                                 ^~~~~~~~~~~
      |                                                 |
      |                                                 std::string {aka std::__cxx11::basic_string<char>}
In file included from HTLC.h:5,
                 from PaymentChannel.h:6,
                 from FullNode.cpp:8:
updateFailHTLC_m.h:64:46: note:   initializing argument 1 of ‘virtual void UpdateFailHTLC::setErrorReason(const char*)’
   64 |     virtual void setErrorReason(const char * errorReason);
      |                                 ~~~~~~~~~~~~~^~~~~~~~~~~
FullNode.cpp:478:51: error: ‘forwardFulfillHTLC’ was not declared in this scope; did you mean ‘forwardFailtHTLC’?
  478 |                 HTLC *forwardBaseHTLC  = new HTLC(forwardFulfillHTLC);
      |                                                   ^~~~~~~~~~~~~~~~~~
      |                                                   forwardFailtHTLC
FullNode.cpp:489:46: error: ‘preImage’ was not declared in this scope
  489 |                 EV << "Sending pre image " + preImage + " to " + path[(newMessage->getHopCount()-1)] + "for payment hash " + paymentHash + "\n";
      |                                              ^~~~~~~~
FullNode.cpp:494:55: error: invalid operands of types ‘const char [26]’ and ‘const char*’ to binary ‘operator+’
  494 |                     EV << "Setting timeout for node " + getName() + ".\n";
      |                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~
      |                           |                                    |
      |                           const char [26]                      const char*
FullNode.cpp:500:33: error: invalid operands of types ‘const char*’ and ‘const char [36]’ to binary ‘operator+’
  500 |                 EV << getName() + " timeout expired. Creating commit.\n";
      |                       ~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                              |    |
      |                              |    const char [36]
      |                              const char*
FullNode.cpp:542:60: error: invalid operands of types ‘const char [26]’ and ‘const char*’ to binary ‘operator+’
  542 |                          EV << "Setting timeout for node " + getName() + "\n";
      |                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~
      |                                |                                    |
      |                                const char [26]                      const char*
FullNode.cpp:582:55: error: invalid operands of types ‘const char [26]’ and ‘const char*’ to binary ‘operator+’
  582 |                     EV << "Setting timeout for node " + getName() + ".\n";
      |                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~
      |                           |                                    |
      |                           const char [26]                      const char*
FullNode.cpp:588:33: error: invalid operands of types ‘const char*’ and ‘const char [36]’ to binary ‘operator+’
  588 |                 EV << getName() + " timeout expired. Creating commit.\n";
      |                       ~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                              |    |
      |                              |    const char [36]
      |                              const char*
FullNode.cpp:697:28: error: expected unqualified-id before ‘->’ token
  697 |                 switch(HTLC->getType()) {
      |                            ^~
FullNode.cpp: In member function ‘virtual void FullNode::sendFirstFailHTLC(std::string, std::string)’:
FullNode.cpp:1012:34: error: ‘preImage’ was not declared in this scope
 1012 |     EV << "Sending pre image " + preImage + " to " + path[(newMessage->getHopCount()-1)] + "for payment hash " + paymentHash + "\n";
      |                                  ^~~~~~~~
FullNode.cpp: At global scope:
FullNode.cpp:1030:1: error: expected declaration before ‘}’ token
 1030 | }
      | ^
FullNode.cpp: In member function ‘virtual void FullNode::commitUpdateAddHTLC(std::string, std::string)’:
FullNode.cpp:1034:48: error: invalid operands of types ‘const char [35]’ and ‘const char*’ to binary ‘operator+’
 1034 |     EV << "Commiting UPDATE_ADD_HTLC at node " + getName() + " with payment hash " + paymentHash + "...\n";
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~
      |           |                                             |
      |           const char [35]                               const char*
make: *** [Makefile:131: out/gcc-release//FullNode.o] Error 1
"make MODE=release all" terminated with exit code 2. Build might be incomplete.
21:37:28 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
In file included from FullNode.cpp:8:
PaymentChannel.h: In member function ‘virtual void PaymentChannel::removePendingHTLCFIFOByValue(std::string)’:
PaymentChannel.h:68:145: error: cannot convert ‘std::deque<std::__cxx11::basic_string<char> >::iterator’ {aka ‘std::_Deque_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::iterator’} to ‘const char*’
   68 |          virtual void removePendingHTLCFIFOByValue (std::string paymentHash) { this->_pendingHTLCsFIFO.erase(std::remove(_pendingHTLCsFIFO.begin(), _pendingHTLCsFIFO.end(), paymentHash), _pendingHTLCsFIFO.end()); };
      |                                                                                                                          ~~~~~~~~~~~~~~~~~~~~~~~^~
      |                                                                                                                                                 |
      |                                                                                                                                                 std::deque<std::__cxx11::basic_string<char> >::iterator {aka std::_Deque_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::iterator}
In file included from globals.h:1,
                 from FullNode.cpp:1:
/usr/include/stdio.h:146:32: note:   initializing argument 1 of ‘int remove(const char*)’
  146 | extern int remove (const char *__filename) __THROW;
      |                    ~~~~~~~~~~~~^~~~~~~~~~
FullNode.cpp: In member function ‘virtual void FullNode::handleMessage(omnetpp::cMessage*)’:
FullNode.cpp:321:89: error: no matching function for call to ‘PaymentChannel::removePendingHTLC(std::string&, HTLC*&)’
  321 |                     _paymentChannels[sender].removePendingHTLC(paymentHash, htlcBackward);
      |                                                                                         ^
In file included from FullNode.cpp:8:
PaymentChannel.h:61:23: note: candidate: ‘virtual void PaymentChannel::removePendingHTLC(std::string)’
   61 |          virtual void removePendingHTLC (std::string paymentHash) { this->_pendingHTLCs.erase(paymentHash); };
      |                       ^~~~~~~~~~~~~~~~~
PaymentChannel.h:61:23: note:   candidate expects 1 argument, 2 provided
FullNode.cpp:322:83: error: no matching function for call to ‘PaymentChannel::removeLastPendingHTLCFIFO(std::string&)’
  322 |                     _paymentChannels[sender].removeLastPendingHTLCFIFO(paymentHash);
      |                                                                                   ^
In file included from FullNode.cpp:8:
PaymentChannel.h:67:23: note: candidate: ‘virtual void PaymentChannel::removeLastPendingHTLCFIFO()’
   67 |          virtual void removeLastPendingHTLCFIFO () { this->_pendingHTLCsFIFO.pop_back(); };
      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~
PaymentChannel.h:67:23: note:   candidate expects 0 arguments, 1 provided
FullNode.cpp:323:83: error: no matching function for call to ‘PaymentChannel::removePreviousHop(std::string&, std::string&)’
  323 |                     _paymentChannels[sender].removePreviousHop(paymentHash, sender);
      |                                                                                   ^
In file included from FullNode.cpp:8:
PaymentChannel.h:75:23: note: candidate: ‘virtual void PaymentChannel::removePreviousHop(std::string)’
   75 |          virtual void removePreviousHop (std::string paymentHash) { this->_previousHop.erase(paymentHash); };
      |                       ^~~~~~~~~~~~~~~~~
PaymentChannel.h:75:23: note:   candidate expects 1 argument, 2 provided
FullNode.cpp:484:41: error: ‘forwardFulfillHTLC’ was not declared in this scope; did you mean ‘forwardFailtHTLC’?
  484 |                 newMessage->encapsulate(forwardFulfillHTLC);
      |                                         ^~~~~~~~~~~~~~~~~~
      |                                         forwardFailtHTLC
FullNode.cpp:494:55: error: invalid operands of types ‘const char [26]’ and ‘const char*’ to binary ‘operator+’
  494 |                     EV << "Setting timeout for node " + getName() + ".\n";
      |                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~
      |                           |                                    |
      |                           const char [26]                      const char*
FullNode.cpp: In member function ‘virtual void FullNode::sendFirstFailHTLC(std::string, std::string)’:
FullNode.cpp:1014:34: error: ‘preImage’ was not declared in this scope
 1014 |     EV << "Sending pre image " + preImage + " to " + path[(newMessage->getHopCount()-1)] + "for payment hash " + paymentHash + "\n";
      |                                  ^~~~~~~~
FullNode.cpp: At global scope:
FullNode.cpp:1032:1: error: expected declaration before ‘}’ token
 1032 | }
      | ^
FullNode.cpp: In member function ‘virtual void FullNode::commitUpdateAddHTLC(std::string, std::string)’:
FullNode.cpp:1036:48: error: invalid operands of types ‘const char [35]’ and ‘const char*’ to binary ‘operator+’
 1036 |     EV << "Commiting UPDATE_ADD_HTLC at node " + getName() + " with payment hash " + paymentHash + "...\n";
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~
      |           |                                             |
      |           const char [35]                               const char*
make: *** [Makefile:131: out/gcc-release//FullNode.o] Error 1
"make MODE=release all" terminated with exit code 2. Build might be incomplete.
21:40:32 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
In file included from FullNode.cpp:8:
PaymentChannel.h: In member function ‘virtual void PaymentChannel::removePendingHTLCFIFOByValue(std::string)’:
PaymentChannel.h:68:145: error: cannot convert ‘std::deque<std::__cxx11::basic_string<char> >::iterator’ {aka ‘std::_Deque_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::iterator’} to ‘const char*’
   68 |          virtual void removePendingHTLCFIFOByValue (std::string paymentHash) { this->_pendingHTLCsFIFO.erase(std::remove(_pendingHTLCsFIFO.begin(), _pendingHTLCsFIFO.end(), paymentHash), _pendingHTLCsFIFO.end()); };
      |                                                                                                                          ~~~~~~~~~~~~~~~~~~~~~~~^~
      |                                                                                                                                                 |
      |                                                                                                                                                 std::deque<std::__cxx11::basic_string<char> >::iterator {aka std::_Deque_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::iterator}
In file included from globals.h:1,
                 from FullNode.cpp:1:
/usr/include/stdio.h:146:32: note:   initializing argument 1 of ‘int remove(const char*)’
  146 | extern int remove (const char *__filename) __THROW;
      |                    ~~~~~~~~~~~~^~~~~~~~~~
FullNode.cpp: In member function ‘virtual void FullNode::handleMessage(omnetpp::cMessage*)’:
FullNode.cpp:484:41: error: ‘forwardFulfailHTLC’ was not declared in this scope; did you mean ‘forwardFailHTLC’?
  484 |                 newMessage->encapsulate(forwardFulfailHTLC);
      |                                         ^~~~~~~~~~~~~~~~~~
      |                                         forwardFailHTLC
FullNode.cpp:494:55: error: invalid operands of types ‘const char [26]’ and ‘const char*’ to binary ‘operator+’
  494 |                     EV << "Setting timeout for node " + getName() + ".\n";
      |                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~
      |                           |                                    |
      |                           const char [26]                      const char*
make: *** [Makefile:131: out/gcc-release//FullNode.o] Error 1
"make MODE=release all" terminated with exit code 2. Build might be incomplete.
21:40:51 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
In file included from FullNode.cpp:8:
PaymentChannel.h: In member function ‘virtual void PaymentChannel::removePendingHTLCFIFOByValue(std::string)’:
PaymentChannel.h:68:145: error: cannot convert ‘std::deque<std::__cxx11::basic_string<char> >::iterator’ {aka ‘std::_Deque_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::iterator’} to ‘const char*’
   68 |          virtual void removePendingHTLCFIFOByValue (std::string paymentHash) { this->_pendingHTLCsFIFO.erase(std::remove(_pendingHTLCsFIFO.begin(), _pendingHTLCsFIFO.end(), paymentHash), _pendingHTLCsFIFO.end()); };
      |                                                                                                                          ~~~~~~~~~~~~~~~~~~~~~~~^~
      |                                                                                                                                                 |
      |                                                                                                                                                 std::deque<std::__cxx11::basic_string<char> >::iterator {aka std::_Deque_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::iterator}
In file included from globals.h:1,
                 from FullNode.cpp:1:
/usr/include/stdio.h:146:32: note:   initializing argument 1 of ‘int remove(const char*)’
  146 | extern int remove (const char *__filename) __THROW;
      |                    ~~~~~~~~~~~~^~~~~~~~~~
make: *** [Makefile:131: out/gcc-release//FullNode.o] Error 1
"make MODE=release all" terminated with exit code 2. Build might be incomplete.
21:45:31 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
HTLC.cpp
In file included from HTLC.cpp:1:
HTLC.h:16:5: error: ‘simtime_t’ does not name a type; did you mean ‘gmtime_r’?
   16 |     simtime_t _timeout = 0;
      |     ^~~~~~~~~
      |     gmtime_r
HTLC.cpp: In constructor ‘HTLC::HTLC(UpdateAddHTLC*)’:
HTLC.cpp:7:5: error: ‘_timeout’ was not declared in this scope
    7 |     _timeout = htlc->getTimeout();
      |     ^~~~~~~~
make: *** [Makefile:131: out/gcc-release//HTLC.o] Error 1
"make MODE=release all" terminated with exit code 2. Build might be incomplete.
21:46:10 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
HTLC.cpp
In file included from HTLC.cpp:1:
HTLC.h:16:5: error: ‘simtime_t’ does not name a type; did you mean ‘gmtime_r’?
   16 |     simtime_t _timeout = 0;
      |     ^~~~~~~~~
      |     gmtime_r
HTLC.cpp: In constructor ‘HTLC::HTLC(UpdateAddHTLC*)’:
HTLC.cpp:7:5: error: ‘_timeout’ was not declared in this scope
    7 |     _timeout = htlc->getTimeout();
      |     ^~~~~~~~
make: *** [Makefile:131: out/gcc-release//HTLC.o] Error 1
"make MODE=release all" terminated with exit code 2. Build might be incomplete.
21:46:54 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
HTLC.cpp
baseMessage_m.cpp
commitmentSigned_m.cpp
HTLCRefused_m.cpp
invoice_m.cpp
routeReply_m.cpp
routeReq_m.cpp
updateAddHTLC_m.cpp
updateFailHTLC_m.cpp
updateFulfillHTLC_m.cpp
Creating executable: out/gcc-release//simulator
/usr/bin/ld: out/gcc-release//FullNode.o:(.data.rel.ro._ZTV8FullNode[_ZTV8FullNode]+0x5d8): undefined reference to `FullNode::forwardFailtHTLC(UpdateFailHTLC*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)'
collect2: error: ld returned 1 exit status
make: *** [Makefile:122: out/gcc-release//simulator] Error 1
"make MODE=release all" terminated with exit code 2. Build might be incomplete.
21:47:49 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
Creating executable: out/gcc-release//simulator
21:51:13 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
make: Nothing to be done for 'all'.
21:53:55 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
Creating executable: out/gcc-release//simulator
21:54:27 **** Incremental Build of configuration debug for project simulator ****
make MODE=debug all 
crypto.cpp
FullNode.cpp
FullNode.cpp: In member function ‘virtual void FullNode::handleMessage(omnetpp::cMessage*)’:
FullNode.cpp:696:35: warning: comparison of integer expressions of different signedness: ‘int’ and ‘std::vector<HTLC*>::size_type’ {aka ‘long unsigned int’} [-Wsign-compare]
  696 |             for (index = 0; index < HTLCs.size(); index++){
      |                             ~~~~~~^~~~~~~~~~~~~~
FullNode.cpp:694:17: warning: unused variable ‘batchSize’ [-Wunused-variable]
  694 |             int batchSize = _paymentChannels[sender].getPendingBatchSize();
      |                 ^~~~~~~~~
FullNode.cpp: In member function ‘virtual double FullNode::getCapacityAfterPendingHTLCs(std::string)’:
FullNode.cpp:750:9: warning: unused variable ‘batchSize’ [-Wunused-variable]
  750 |     int batchSize = _paymentChannels[nodeName].getPendingBatchSize();
      |         ^~~~~~~~~
FullNode.cpp: In member function ‘virtual void FullNode::refreshDisplay() const’:
FullNode.cpp:768:18: warning: unused variable ‘neighborMod’ [-Wunused-variable]
  768 |         cModule* neighborMod = getModuleByPath(neighborPath.c_str());
      |                  ^~~~~~~~~~~
FullNode.cpp: In member function ‘virtual void FullNode::commitUpdateAddHTLC(std::string, std::string)’:
FullNode.cpp:1042:8: warning: suggest explicit braces to avoid ambiguous ‘else’ [-Wdangling-else]
 1042 |     if (_paymentChannels[neighbor].getPreviousHop(paymentHash) == neighbor)
      |        ^
HTLC.cpp
netBuilder.cpp
baseMessage_m.cpp
commitmentSigned_m.cpp
HTLCRefused_m.cpp
invoice_m.cpp
payment_m.cpp
routeReply_m.cpp
routeReq_m.cpp
updateAddHTLC_m.cpp
updateFailHTLC_m.cpp
updateFulfillHTLC_m.cpp
Creating executable: out/gcc-debug//simulator_dbg
21:56:34 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
Creating executable: out/gcc-release//simulator
21:56:49 **** Incremental Build of configuration debug for project simulator ****
make MODE=debug all 
make: Nothing to be done for 'all'.
21:58:38 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
Creating executable: out/gcc-release//simulator
21:59:24 **** Incremental Build of configuration debug for project simulator ****
make MODE=debug all 
FullNode.cpp
FullNode.cpp: In member function ‘virtual void FullNode::handleMessage(omnetpp::cMessage*)’:
FullNode.cpp:696:35: warning: comparison of integer expressions of different signedness: ‘int’ and ‘std::vector<HTLC*>::size_type’ {aka ‘long unsigned int’} [-Wsign-compare]
  696 |             for (index = 0; index < HTLCs.size(); index++){
      |                             ~~~~~~^~~~~~~~~~~~~~
FullNode.cpp:694:17: warning: unused variable ‘batchSize’ [-Wunused-variable]
  694 |             int batchSize = _paymentChannels[sender].getPendingBatchSize();
      |                 ^~~~~~~~~
FullNode.cpp: In member function ‘virtual double FullNode::getCapacityAfterPendingHTLCs(std::string)’:
FullNode.cpp:750:9: warning: unused variable ‘batchSize’ [-Wunused-variable]
  750 |     int batchSize = _paymentChannels[nodeName].getPendingBatchSize();
      |         ^~~~~~~~~
FullNode.cpp: In member function ‘virtual void FullNode::refreshDisplay() const’:
FullNode.cpp:768:18: warning: unused variable ‘neighborMod’ [-Wunused-variable]
  768 |         cModule* neighborMod = getModuleByPath(neighborPath.c_str());
      |                  ^~~~~~~~~~~
Creating executable: out/gcc-debug//simulator_dbg
22:01:20 **** Incremental Build of configuration debug for project simulator ****
make MODE=debug all 
FullNode.cpp
FullNode.cpp: In member function ‘virtual void FullNode::handleMessage(omnetpp::cMessage*)’:
FullNode.cpp:696:35: warning: comparison of integer expressions of different signedness: ‘int’ and ‘std::vector<HTLC*>::size_type’ {aka ‘long unsigned int’} [-Wsign-compare]
  696 |             for (index = 0; index < HTLCs.size(); index++){
      |                             ~~~~~~^~~~~~~~~~~~~~
FullNode.cpp:694:17: warning: unused variable ‘batchSize’ [-Wunused-variable]
  694 |             int batchSize = _paymentChannels[sender].getPendingBatchSize();
      |                 ^~~~~~~~~
FullNode.cpp: In member function ‘virtual double FullNode::getCapacityAfterPendingHTLCs(std::string)’:
FullNode.cpp:750:9: warning: unused variable ‘batchSize’ [-Wunused-variable]
  750 |     int batchSize = _paymentChannels[nodeName].getPendingBatchSize();
      |         ^~~~~~~~~
FullNode.cpp: In member function ‘virtual void FullNode::refreshDisplay() const’:
FullNode.cpp:768:18: warning: unused variable ‘neighborMod’ [-Wunused-variable]
  768 |         cModule* neighborMod = getModuleByPath(neighborPath.c_str());
      |                  ^~~~~~~~~~~
Creating executable: out/gcc-debug//simulator_dbg
22:03:25 **** Incremental Build of configuration debug for project simulator ****
make MODE=debug all 
FullNode.cpp
FullNode.cpp: In member function ‘virtual void FullNode::handleMessage(omnetpp::cMessage*)’:
FullNode.cpp:255:43: error: ‘srcName’ was not declared in this scope; did you mean ‘setName’?
  255 |             firstUpdateAddHTLC->setSource(srcName.c_str());
      |                                           ^~~~~~~
      |                                           setName
FullNode.cpp:264:61: error: no matching function for call to ‘PaymentChannel::setPreviousHop(std::string&)’
  264 |             _paymentChannels[firstHop].setPreviousHop(myName);
      |                                                             ^
In file included from FullNode.cpp:8:
PaymentChannel.h:74:23: note: candidate: ‘virtual void PaymentChannel::setPreviousHop(std::string, std::string)’
   74 |          virtual void setPreviousHop (std::string paymentHash, std::string previousHop) { this->_previousHop[paymentHash] = previousHop; };
      |                       ^~~~~~~~~~~~~~
PaymentChannel.h:74:23: note:   candidate expects 2 arguments, 1 provided
FullNode.cpp:697:35: warning: comparison of integer expressions of different signedness: ‘int’ and ‘std::vector<HTLC*>::size_type’ {aka ‘long unsigned int’} [-Wsign-compare]
  697 |             for (index = 0; index < HTLCs.size(); index++){
      |                             ~~~~~~^~~~~~~~~~~~~~
FullNode.cpp:695:17: warning: unused variable ‘batchSize’ [-Wunused-variable]
  695 |             int batchSize = _paymentChannels[sender].getPendingBatchSize();
      |                 ^~~~~~~~~
FullNode.cpp: In member function ‘virtual double FullNode::getCapacityAfterPendingHTLCs(std::string)’:
FullNode.cpp:751:9: warning: unused variable ‘batchSize’ [-Wunused-variable]
  751 |     int batchSize = _paymentChannels[nodeName].getPendingBatchSize();
      |         ^~~~~~~~~
FullNode.cpp: In member function ‘virtual void FullNode::refreshDisplay() const’:
FullNode.cpp:769:18: warning: unused variable ‘neighborMod’ [-Wunused-variable]
  769 |         cModule* neighborMod = getModuleByPath(neighborPath.c_str());
      |                  ^~~~~~~~~~~
make: *** [Makefile:131: out/gcc-debug//FullNode.o] Error 1
"make MODE=debug all" terminated with exit code 2. Build might be incomplete.
22:04:03 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
Creating executable: out/gcc-release//simulator
22:04:21 **** Incremental Build of configuration debug for project simulator ****
make MODE=debug all 
FullNode.cpp
FullNode.cpp: In member function ‘virtual void FullNode::handleMessage(omnetpp::cMessage*)’:
FullNode.cpp:697:35: warning: comparison of integer expressions of different signedness: ‘int’ and ‘std::vector<HTLC*>::size_type’ {aka ‘long unsigned int’} [-Wsign-compare]
  697 |             for (index = 0; index < HTLCs.size(); index++){
      |                             ~~~~~~^~~~~~~~~~~~~~
FullNode.cpp:695:17: warning: unused variable ‘batchSize’ [-Wunused-variable]
  695 |             int batchSize = _paymentChannels[sender].getPendingBatchSize();
      |                 ^~~~~~~~~
FullNode.cpp: In member function ‘virtual double FullNode::getCapacityAfterPendingHTLCs(std::string)’:
FullNode.cpp:751:9: warning: unused variable ‘batchSize’ [-Wunused-variable]
  751 |     int batchSize = _paymentChannels[nodeName].getPendingBatchSize();
      |         ^~~~~~~~~
FullNode.cpp: In member function ‘virtual void FullNode::refreshDisplay() const’:
FullNode.cpp:769:18: warning: unused variable ‘neighborMod’ [-Wunused-variable]
  769 |         cModule* neighborMod = getModuleByPath(neighborPath.c_str());
      |                  ^~~~~~~~~~~
Creating executable: out/gcc-debug//simulator_dbg
22:08:42 **** Incremental Build of configuration debug for project simulator ****
make MODE=debug all 
make: Nothing to be done for 'all'.
22:15:09 **** Incremental Build of configuration debug for project simulator ****
make MODE=debug all 
make: Nothing to be done for 'all'.
22:15:29 **** Incremental Build of configuration debug for project simulator ****
make MODE=debug all 
make: Nothing to be done for 'all'.
22:18:23 **** Incremental Build of configuration debug for project simulator ****
make MODE=debug all 
make: Nothing to be done for 'all'.
22:20:21 **** Incremental Build of configuration debug for project simulator ****
make MODE=debug all 
FullNode.cpp
FullNode.cpp: In member function ‘virtual void FullNode::handleMessage(omnetpp::cMessage*)’:
FullNode.cpp:697:35: warning: comparison of integer expressions of different signedness: ‘int’ and ‘std::vector<HTLC*>::size_type’ {aka ‘long unsigned int’} [-Wsign-compare]
  697 |             for (index = 0; index < HTLCs.size(); index++){
      |                             ~~~~~~^~~~~~~~~~~~~~
FullNode.cpp:695:17: warning: unused variable ‘batchSize’ [-Wunused-variable]
  695 |             int batchSize = _paymentChannels[sender].getPendingBatchSize();
      |                 ^~~~~~~~~
FullNode.cpp: In member function ‘virtual double FullNode::getCapacityAfterPendingHTLCs(std::string)’:
FullNode.cpp:751:9: warning: unused variable ‘batchSize’ [-Wunused-variable]
  751 |     int batchSize = _paymentChannels[nodeName].getPendingBatchSize();
      |         ^~~~~~~~~
FullNode.cpp: In member function ‘virtual void FullNode::refreshDisplay() const’:
FullNode.cpp:769:18: warning: unused variable ‘neighborMod’ [-Wunused-variable]
  769 |         cModule* neighborMod = getModuleByPath(neighborPath.c_str());
      |                  ^~~~~~~~~~~
Creating executable: out/gcc-debug//simulator_dbg
22:21:22 **** Incremental Build of configuration debug for project simulator ****
make MODE=debug all 
make: Nothing to be done for 'all'.
22:21:58 **** Incremental Build of configuration debug for project simulator ****
make MODE=debug all 
make: Nothing to be done for 'all'.
22:23:50 **** Incremental Build of configuration debug for project simulator ****
make MODE=debug all 
FullNode.cpp
FullNode.cpp: In member function ‘virtual void FullNode::handleMessage(omnetpp::cMessage*)’:
FullNode.cpp:697:35: warning: comparison of integer expressions of different signedness: ‘int’ and ‘std::vector<HTLC*>::size_type’ {aka ‘long unsigned int’} [-Wsign-compare]
  697 |             for (index = 0; index < HTLCs.size(); index++){
      |                             ~~~~~~^~~~~~~~~~~~~~
FullNode.cpp:695:17: warning: unused variable ‘batchSize’ [-Wunused-variable]
  695 |             int batchSize = _paymentChannels[sender].getPendingBatchSize();
      |                 ^~~~~~~~~
FullNode.cpp: In member function ‘virtual double FullNode::getCapacityAfterPendingHTLCs(std::string)’:
FullNode.cpp:751:9: warning: unused variable ‘batchSize’ [-Wunused-variable]
  751 |     int batchSize = _paymentChannels[nodeName].getPendingBatchSize();
      |         ^~~~~~~~~
FullNode.cpp: In member function ‘virtual void FullNode::refreshDisplay() const’:
FullNode.cpp:769:18: warning: unused variable ‘neighborMod’ [-Wunused-variable]
  769 |         cModule* neighborMod = getModuleByPath(neighborPath.c_str());
      |                  ^~~~~~~~~~~
FullNode.cpp: In member function ‘virtual void FullNode::setInFlight(std::string, std::string)’:
FullNode.cpp:1022:50: error: cannot convert ‘std::map<std::__cxx11::basic_string<char>, PaymentChannel>::mapped_type’ {aka ‘PaymentChannel’} to ‘PaymentChannel*’ in initialization
 1022 |     PaymentChannel *pc = _paymentChannels[nextHop];
      |                                                  ^
FullNode.cpp:1022:21: warning: unused variable ‘pc’ [-Wunused-variable]
 1022 |     PaymentChannel *pc = _paymentChannels[nextHop];
      |                     ^~
make: *** [Makefile:131: out/gcc-debug//FullNode.o] Error 1
"make MODE=debug all" terminated with exit code 2. Build might be incomplete.
22:24:07 **** Incremental Build of configuration debug for project simulator ****
make MODE=debug all 
FullNode.cpp
FullNode.cpp: In member function ‘virtual void FullNode::handleMessage(omnetpp::cMessage*)’:
FullNode.cpp:697:35: warning: comparison of integer expressions of different signedness: ‘int’ and ‘std::vector<HTLC*>::size_type’ {aka ‘long unsigned int’} [-Wsign-compare]
  697 |             for (index = 0; index < HTLCs.size(); index++){
      |                             ~~~~~~^~~~~~~~~~~~~~
FullNode.cpp:695:17: warning: unused variable ‘batchSize’ [-Wunused-variable]
  695 |             int batchSize = _paymentChannels[sender].getPendingBatchSize();
      |                 ^~~~~~~~~
FullNode.cpp: In member function ‘virtual double FullNode::getCapacityAfterPendingHTLCs(std::string)’:
FullNode.cpp:751:9: warning: unused variable ‘batchSize’ [-Wunused-variable]
  751 |     int batchSize = _paymentChannels[nodeName].getPendingBatchSize();
      |         ^~~~~~~~~
FullNode.cpp: In member function ‘virtual void FullNode::refreshDisplay() const’:
FullNode.cpp:769:18: warning: unused variable ‘neighborMod’ [-Wunused-variable]
  769 |         cModule* neighborMod = getModuleByPath(neighborPath.c_str());
      |                  ^~~~~~~~~~~
Creating executable: out/gcc-debug//simulator_dbg
22:25:39 **** Incremental Build of configuration debug for project simulator ****
make MODE=debug all 
make: Nothing to be done for 'all'.
22:27:36 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
Creating executable: out/gcc-release//simulator
22:28:10 **** Incremental Build of configuration debug for project simulator ****
make MODE=debug all 
FullNode.cpp
FullNode.cpp: In member function ‘virtual void FullNode::handleMessage(omnetpp::cMessage*)’:
FullNode.cpp:697:35: warning: comparison of integer expressions of different signedness: ‘int’ and ‘std::vector<HTLC*>::size_type’ {aka ‘long unsigned int’} [-Wsign-compare]
  697 |             for (index = 0; index < HTLCs.size(); index++){
      |                             ~~~~~~^~~~~~~~~~~~~~
FullNode.cpp:695:17: warning: unused variable ‘batchSize’ [-Wunused-variable]
  695 |             int batchSize = _paymentChannels[sender].getPendingBatchSize();
      |                 ^~~~~~~~~
FullNode.cpp: In member function ‘virtual double FullNode::getCapacityAfterPendingHTLCs(std::string)’:
FullNode.cpp:751:9: warning: unused variable ‘batchSize’ [-Wunused-variable]
  751 |     int batchSize = _paymentChannels[nodeName].getPendingBatchSize();
      |         ^~~~~~~~~
FullNode.cpp: In member function ‘virtual void FullNode::refreshDisplay() const’:
FullNode.cpp:769:18: warning: unused variable ‘neighborMod’ [-Wunused-variable]
  769 |         cModule* neighborMod = getModuleByPath(neighborPath.c_str());
      |                  ^~~~~~~~~~~
Creating executable: out/gcc-debug//simulator_dbg
22:34:32 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
Creating executable: out/gcc-release//simulator
22:40:18 **** Incremental Build of configuration debug for project simulator ****
make MODE=debug all 
FullNode.cpp
FullNode.cpp: In member function ‘virtual void FullNode::handleMessage(omnetpp::cMessage*)’:
FullNode.cpp:689:17: warning: unused variable ‘batchSize’ [-Wunused-variable]
  689 |             int batchSize = _paymentChannels[sender].getPendingBatchSize();
      |                 ^~~~~~~~~
FullNode.cpp: In member function ‘virtual double FullNode::getCapacityAfterPendingHTLCs(std::string)’:
FullNode.cpp:741:9: warning: unused variable ‘batchSize’ [-Wunused-variable]
  741 |     int batchSize = _paymentChannels[nodeName].getPendingBatchSize();
      |         ^~~~~~~~~
FullNode.cpp: In member function ‘virtual void FullNode::refreshDisplay() const’:
FullNode.cpp:758:18: warning: unused variable ‘neighborMod’ [-Wunused-variable]
  758 |         cModule* neighborMod = getModuleByPath(neighborPath.c_str());
      |                  ^~~~~~~~~~~
Creating executable: out/gcc-debug//simulator_dbg
22:41:10 **** Incremental Build of configuration debug for project simulator ****
make MODE=debug all 
make: Nothing to be done for 'all'.
22:41:40 **** Incremental Build of configuration debug for project simulator ****
make MODE=debug all 
make: Nothing to be done for 'all'.
22:43:53 **** Incremental Build of configuration debug for project simulator ****
make MODE=debug all 
make: Nothing to be done for 'all'.
22:48:02 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
Creating executable: out/gcc-release//simulator
22:57:09 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
make: Nothing to be done for 'all'.
22:57:27 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
make: Nothing to be done for 'all'.
23:01:41 **** Incremental Build of configuration debug for project simulator ****
make MODE=debug all 
FullNode.cpp
FullNode.cpp: In member function ‘virtual void FullNode::handleMessage(omnetpp::cMessage*)’:
FullNode.cpp:689:17: warning: unused variable ‘batchSize’ [-Wunused-variable]
  689 |             int batchSize = _paymentChannels[sender].getPendingBatchSize();
      |                 ^~~~~~~~~
FullNode.cpp: In member function ‘virtual double FullNode::getCapacityAfterPendingHTLCs(std::string)’:
FullNode.cpp:742:9: warning: unused variable ‘batchSize’ [-Wunused-variable]
  742 |     int batchSize = _paymentChannels[nodeName].getPendingBatchSize();
      |         ^~~~~~~~~
FullNode.cpp: In member function ‘virtual void FullNode::refreshDisplay() const’:
FullNode.cpp:759:18: warning: unused variable ‘neighborMod’ [-Wunused-variable]
  759 |         cModule* neighborMod = getModuleByPath(neighborPath.c_str());
      |                  ^~~~~~~~~~~
Creating executable: out/gcc-debug//simulator_dbg
23:05:34 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
Creating executable: out/gcc-release//simulator
23:07:34 **** Incremental Build of configuration debug for project simulator ****
make MODE=debug all 
FullNode.cpp
FullNode.cpp: In member function ‘virtual void FullNode::handleMessage(omnetpp::cMessage*)’:
FullNode.cpp:688:17: warning: unused variable ‘batchSize’ [-Wunused-variable]
  688 |             int batchSize = _paymentChannels[sender].getPendingBatchSize();
      |                 ^~~~~~~~~
FullNode.cpp: In member function ‘virtual double FullNode::getCapacityAfterPendingHTLCs(std::string)’:
FullNode.cpp:741:9: warning: unused variable ‘batchSize’ [-Wunused-variable]
  741 |     int batchSize = _paymentChannels[nodeName].getPendingBatchSize();
      |         ^~~~~~~~~
FullNode.cpp: In member function ‘virtual void FullNode::refreshDisplay() const’:
FullNode.cpp:758:18: warning: unused variable ‘neighborMod’ [-Wunused-variable]
  758 |         cModule* neighborMod = getModuleByPath(neighborPath.c_str());
      |                  ^~~~~~~~~~~
Creating executable: out/gcc-debug//simulator_dbg
23:11:06 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
Creating executable: out/gcc-release//simulator
23:12:03 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
make: Nothing to be done for 'all'.
23:20:45 **** Incremental Build of configuration debug for project simulator ****
make MODE=debug all 
FullNode.cpp
FullNode.cpp: In member function ‘virtual void FullNode::handleMessage(omnetpp::cMessage*)’:
FullNode.cpp:688:17: warning: unused variable ‘batchSize’ [-Wunused-variable]
  688 |             int batchSize = _paymentChannels[sender].getPendingBatchSize();
      |                 ^~~~~~~~~
FullNode.cpp: In member function ‘virtual double FullNode::getCapacityAfterPendingHTLCs(std::string)’:
FullNode.cpp:741:9: warning: unused variable ‘batchSize’ [-Wunused-variable]
  741 |     int batchSize = _paymentChannels[nodeName].getPendingBatchSize();
      |         ^~~~~~~~~
FullNode.cpp: In member function ‘virtual void FullNode::refreshDisplay() const’:
FullNode.cpp:758:18: warning: unused variable ‘neighborMod’ [-Wunused-variable]
  758 |         cModule* neighborMod = getModuleByPath(neighborPath.c_str());
      |                  ^~~~~~~~~~~
Creating executable: out/gcc-debug//simulator_dbg
23:27:16 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
make: Nothing to be done for 'all'.
09:58:18 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
make: Nothing to be done for 'all'.
10:27:04 **** Incremental Build of configuration debug for project simulator ****
make MODE=debug all 
FullNode.cpp
FullNode.cpp: In member function ‘virtual void FullNode::handleMessage(omnetpp::cMessage*)’:
FullNode.cpp:688:17: warning: unused variable ‘batchSize’ [-Wunused-variable]
  688 |             int batchSize = _paymentChannels[sender].getPendingBatchSize();
      |                 ^~~~~~~~~
FullNode.cpp: In member function ‘virtual double FullNode::getCapacityAfterPendingHTLCs(std::string)’:
FullNode.cpp:741:9: warning: unused variable ‘batchSize’ [-Wunused-variable]
  741 |     int batchSize = _paymentChannels[nodeName].getPendingBatchSize();
      |         ^~~~~~~~~
FullNode.cpp: In member function ‘virtual void FullNode::refreshDisplay() const’:
FullNode.cpp:758:18: warning: unused variable ‘neighborMod’ [-Wunused-variable]
  758 |         cModule* neighborMod = getModuleByPath(neighborPath.c_str());
      |                  ^~~~~~~~~~~
Creating executable: out/gcc-debug//simulator_dbg
10:30:30 **** Incremental Build of configuration debug for project simulator ****
make MODE=debug all 
FullNode.cpp
FullNode.cpp: In member function ‘virtual void FullNode::handleMessage(omnetpp::cMessage*)’:
FullNode.cpp:688:17: warning: unused variable ‘batchSize’ [-Wunused-variable]
  688 |             int batchSize = _paymentChannels[sender].getPendingBatchSize();
      |                 ^~~~~~~~~
FullNode.cpp: In member function ‘virtual double FullNode::getCapacityAfterPendingHTLCs(std::string)’:
FullNode.cpp:741:9: warning: unused variable ‘batchSize’ [-Wunused-variable]
  741 |     int batchSize = _paymentChannels[nodeName].getPendingBatchSize();
      |         ^~~~~~~~~
FullNode.cpp: In member function ‘virtual void FullNode::refreshDisplay() const’:
FullNode.cpp:758:18: warning: unused variable ‘neighborMod’ [-Wunused-variable]
  758 |         cModule* neighborMod = getModuleByPath(neighborPath.c_str());
      |                  ^~~~~~~~~~~
FullNode.cpp: In member function ‘virtual void FullNode::setInFlight(std::string, std::string)’:
FullNode.cpp:1007:18: error: conversion from ‘HTLC**’ to non-scalar type ‘HTLC’ requested
 1007 |     HTLC htlc1 = &htlc;
      |                  ^~~~~
make: *** [Makefile:131: out/gcc-debug//FullNode.o] Error 1
"make MODE=debug all" terminated with exit code 2. Build might be incomplete.
10:31:38 **** Incremental Build of configuration debug for project simulator ****
make MODE=debug all 
FullNode.cpp
FullNode.cpp: In member function ‘virtual void FullNode::handleMessage(omnetpp::cMessage*)’:
FullNode.cpp:688:17: warning: unused variable ‘batchSize’ [-Wunused-variable]
  688 |             int batchSize = _paymentChannels[sender].getPendingBatchSize();
      |                 ^~~~~~~~~
FullNode.cpp: In member function ‘virtual double FullNode::getCapacityAfterPendingHTLCs(std::string)’:
FullNode.cpp:741:9: warning: unused variable ‘batchSize’ [-Wunused-variable]
  741 |     int batchSize = _paymentChannels[nodeName].getPendingBatchSize();
      |         ^~~~~~~~~
FullNode.cpp: In member function ‘virtual void FullNode::refreshDisplay() const’:
FullNode.cpp:758:18: warning: unused variable ‘neighborMod’ [-Wunused-variable]
  758 |         cModule* neighborMod = getModuleByPath(neighborPath.c_str());
      |                  ^~~~~~~~~~~
FullNode.cpp: In member function ‘virtual void FullNode::setInFlight(std::string, std::string)’:
FullNode.cpp:1007:9: warning: unused variable ‘htlctype’ [-Wunused-variable]
 1007 |     int htlctype = htlc->getType();
      |         ^~~~~~~~
FullNode.cpp:1008:9: warning: unused variable ‘htlcvalue’ [-Wunused-variable]
 1008 |     int htlcvalue = htlc->getValue();
      |         ^~~~~~~~~
Creating executable: out/gcc-debug//simulator_dbg
10:33:30 **** Incremental Build of configuration debug for project simulator ****
make MODE=debug all 
make: Nothing to be done for 'all'.
10:34:54 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
Creating executable: out/gcc-release//simulator
10:36:42 **** Incremental Build of configuration debug for project simulator ****
make MODE=debug all 
make: Nothing to be done for 'all'.
10:37:10 **** Incremental Build of configuration debug for project simulator ****
make MODE=debug all 
FullNode.cpp
FullNode.cpp: In member function ‘virtual void FullNode::handleMessage(omnetpp::cMessage*)’:
FullNode.cpp:688:17: warning: unused variable ‘batchSize’ [-Wunused-variable]
  688 |             int batchSize = _paymentChannels[sender].getPendingBatchSize();
      |                 ^~~~~~~~~
FullNode.cpp: In member function ‘virtual double FullNode::getCapacityAfterPendingHTLCs(std::string)’:
FullNode.cpp:741:9: warning: unused variable ‘batchSize’ [-Wunused-variable]
  741 |     int batchSize = _paymentChannels[nodeName].getPendingBatchSize();
      |         ^~~~~~~~~
FullNode.cpp: In member function ‘virtual void FullNode::refreshDisplay() const’:
FullNode.cpp:758:18: warning: unused variable ‘neighborMod’ [-Wunused-variable]
  758 |         cModule* neighborMod = getModuleByPath(neighborPath.c_str());
      |                  ^~~~~~~~~~~
FullNode.cpp: In member function ‘virtual void FullNode::setInFlight(std::string, std::string)’:
FullNode.cpp:1007:9: warning: unused variable ‘htlctype’ [-Wunused-variable]
 1007 |     int htlctype = htlc->getType();
      |         ^~~~~~~~
FullNode.cpp:1008:12: warning: unused variable ‘htlcvalue’ [-Wunused-variable]
 1008 |     double htlcvalue = htlc->getValue();
      |            ^~~~~~~~~
Creating executable: out/gcc-debug//simulator_dbg
10:38:17 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
Creating executable: out/gcc-release//simulator
10:53:14 **** Incremental Build of configuration debug for project simulator ****
make MODE=debug all 
FullNode.cpp
FullNode.cpp: In member function ‘virtual void FullNode::handleMessage(omnetpp::cMessage*)’:
FullNode.cpp:688:17: warning: unused variable ‘batchSize’ [-Wunused-variable]
  688 |             int batchSize = _paymentChannels[sender].getPendingBatchSize();
      |                 ^~~~~~~~~
FullNode.cpp: In member function ‘virtual double FullNode::getCapacityAfterPendingHTLCs(std::string)’:
FullNode.cpp:741:9: warning: unused variable ‘batchSize’ [-Wunused-variable]
  741 |     int batchSize = _paymentChannels[nodeName].getPendingBatchSize();
      |         ^~~~~~~~~
FullNode.cpp: In member function ‘virtual void FullNode::refreshDisplay() const’:
FullNode.cpp:758:18: warning: unused variable ‘neighborMod’ [-Wunused-variable]
  758 |         cModule* neighborMod = getModuleByPath(neighborPath.c_str());
      |                  ^~~~~~~~~~~
Creating executable: out/gcc-debug//simulator_dbg
11:07:33 **** Incremental Build of configuration debug for project simulator ****
make MODE=debug all 
FullNode.cpp
FullNode.cpp: In member function ‘virtual void FullNode::handleMessage(omnetpp::cMessage*)’:
FullNode.cpp:628:21: warning: unused variable ‘htlctype’ [-Wunused-variable]
  628 |                 int htlctype = htlc->getType();
      |                     ^~~~~~~~
FullNode.cpp:689:17: warning: unused variable ‘batchSize’ [-Wunused-variable]
  689 |             int batchSize = _paymentChannels[sender].getPendingBatchSize();
      |                 ^~~~~~~~~
FullNode.cpp: In member function ‘virtual double FullNode::getCapacityAfterPendingHTLCs(std::string)’:
FullNode.cpp:742:9: warning: unused variable ‘batchSize’ [-Wunused-variable]
  742 |     int batchSize = _paymentChannels[nodeName].getPendingBatchSize();
      |         ^~~~~~~~~
FullNode.cpp: In member function ‘virtual void FullNode::refreshDisplay() const’:
FullNode.cpp:759:18: warning: unused variable ‘neighborMod’ [-Wunused-variable]
  759 |         cModule* neighborMod = getModuleByPath(neighborPath.c_str());
      |                  ^~~~~~~~~~~
Creating executable: out/gcc-debug//simulator_dbg
11:10:12 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
FullNode.cpp: In member function ‘virtual void FullNode::initialize()’:
FullNode.cpp:103:5: error: ‘myName’ was not declared in this scope; did you mean ‘isName’?
  103 |     myName = getName();
      |     ^~~~~~
      |     isName
FullNode.cpp: In member function ‘virtual void FullNode::handleMessage(omnetpp::cMessage*)’:
FullNode.cpp:454:61: error: ‘myName’ was not declared in this scope; did you mean ‘isName’?
  454 |                         EV << "Setting timeout for node " + myName + "\n";
      |                                                             ^~~~~~
      |                                                             isName
FullNode.cpp:483:71: error: ‘myName’ was not declared in this scope; did you mean ‘isName’?
  483 |                 _paymentChannels[nextHop].setPreviousHop(paymentHash, myName);
      |                                                                       ^~~~~~
      |                                                                       isName
FullNode.cpp:501:23: error: ‘myName’ was not declared in this scope; did you mean ‘isName’?
  501 |                 EV << myName + " timeout expired. Creating commit.\n";
      |                       ^~~~~~
      |                       isName
FullNode.cpp: In member function ‘virtual void FullNode::sendFirstFailHTLC(std::string, std::string)’:
FullNode.cpp:992:60: error: ‘myName’ was not declared in this scope; did you mean ‘isName’?
  992 |     _paymentChannels[firstHop].setPreviousHop(paymentHash, myName);
      |                                                            ^~~~~~
      |                                                            isName
make: *** [Makefile:131: out/gcc-release//FullNode.o] Error 1
"make MODE=release all" terminated with exit code 2. Build might be incomplete.
11:10:30 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
FullNode.cpp: In member function ‘virtual void FullNode::handleMessage(omnetpp::cMessage*)’:
FullNode.cpp:454:61: error: ‘myName’ was not declared in this scope; did you mean ‘isName’?
  454 |                         EV << "Setting timeout for node " + myName + "\n";
      |                                                             ^~~~~~
      |                                                             isName
FullNode.cpp:483:71: error: ‘myName’ was not declared in this scope; did you mean ‘isName’?
  483 |                 _paymentChannels[nextHop].setPreviousHop(paymentHash, myName);
      |                                                                       ^~~~~~
      |                                                                       isName
FullNode.cpp:501:23: error: ‘myName’ was not declared in this scope; did you mean ‘isName’?
  501 |                 EV << myName + " timeout expired. Creating commit.\n";
      |                       ^~~~~~
      |                       isName
FullNode.cpp: In member function ‘virtual void FullNode::sendFirstFailHTLC(std::string, std::string)’:
FullNode.cpp:992:60: error: ‘myName’ was not declared in this scope; did you mean ‘isName’?
  992 |     _paymentChannels[firstHop].setPreviousHop(paymentHash, myName);
      |                                                            ^~~~~~
      |                                                            isName
make: *** [Makefile:131: out/gcc-release//FullNode.o] Error 1
"make MODE=release all" terminated with exit code 2. Build might be incomplete.
11:11:20 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
FullNode.cpp: In member function ‘virtual void FullNode::handleMessage(omnetpp::cMessage*)’:
FullNode.cpp:504:23: error: ‘myName’ was not declared in this scope; did you mean ‘isName’?
  504 |                 EV << myName + " timeout expired. Creating commit.\n";
      |                       ^~~~~~
      |                       isName
FullNode.cpp: In member function ‘virtual void FullNode::sendFirstFailHTLC(std::string, std::string)’:
FullNode.cpp:995:60: error: ‘myName’ was not declared in this scope; did you mean ‘isName’?
  995 |     _paymentChannels[firstHop].setPreviousHop(paymentHash, myName);
      |                                                            ^~~~~~
      |                                                            isName
make: *** [Makefile:131: out/gcc-release//FullNode.o] Error 1
"make MODE=release all" terminated with exit code 2. Build might be incomplete.
11:11:48 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
Creating executable: out/gcc-release//simulator
11:17:26 **** Incremental Build of configuration debug for project simulator ****
make MODE=debug all 
FullNode.cpp
FullNode.cpp: In member function ‘virtual void FullNode::handleMessage(omnetpp::cMessage*)’:
FullNode.cpp:629:21: warning: unused variable ‘htlctype’ [-Wunused-variable]
  629 |                 int htlctype = htlc->getType();
      |                     ^~~~~~~~
FullNode.cpp:690:17: warning: unused variable ‘batchSize’ [-Wunused-variable]
  690 |             int batchSize = _paymentChannels[sender].getPendingBatchSize();
      |                 ^~~~~~~~~
FullNode.cpp: In member function ‘virtual double FullNode::getCapacityAfterPendingHTLCs(std::string)’:
FullNode.cpp:743:9: warning: unused variable ‘batchSize’ [-Wunused-variable]
  743 |     int batchSize = _paymentChannels[nodeName].getPendingBatchSize();
      |         ^~~~~~~~~
FullNode.cpp: In member function ‘virtual void FullNode::refreshDisplay() const’:
FullNode.cpp:760:18: warning: unused variable ‘neighborMod’ [-Wunused-variable]
  760 |         cModule* neighborMod = getModuleByPath(neighborPath.c_str());
      |                  ^~~~~~~~~~~
FullNode.cpp: In member function ‘virtual void FullNode::sendFirstFailHTLC(std::string, std::string)’:
FullNode.cpp:973:62: error: ‘x’ was not declared in this scope
  973 |     std::vector<std::string> path = storedBaseMsg->getHops();x
      |                                                              ^
FullNode.cpp:977:5: error: ‘newMessage’ was not declared in this scope
  977 |     newMessage->setDestination(path[0].c_str());
      |     ^~~~~~~~~~
make: *** [Makefile:131: out/gcc-debug//FullNode.o] Error 1
"make MODE=debug all" terminated with exit code 2. Build might be incomplete.
11:17:34 **** Incremental Build of configuration debug for project simulator ****
make MODE=debug all 
FullNode.cpp
FullNode.cpp: In member function ‘virtual void FullNode::handleMessage(omnetpp::cMessage*)’:
FullNode.cpp:629:21: warning: unused variable ‘htlctype’ [-Wunused-variable]
  629 |                 int htlctype = htlc->getType();
      |                     ^~~~~~~~
FullNode.cpp:690:17: warning: unused variable ‘batchSize’ [-Wunused-variable]
  690 |             int batchSize = _paymentChannels[sender].getPendingBatchSize();
      |                 ^~~~~~~~~
FullNode.cpp: In member function ‘virtual double FullNode::getCapacityAfterPendingHTLCs(std::string)’:
FullNode.cpp:743:9: warning: unused variable ‘batchSize’ [-Wunused-variable]
  743 |     int batchSize = _paymentChannels[nodeName].getPendingBatchSize();
      |         ^~~~~~~~~
FullNode.cpp: In member function ‘virtual void FullNode::refreshDisplay() const’:
FullNode.cpp:760:18: warning: unused variable ‘neighborMod’ [-Wunused-variable]
  760 |         cModule* neighborMod = getModuleByPath(neighborPath.c_str());
      |                  ^~~~~~~~~~~
Creating executable: out/gcc-debug//simulator_dbg
11:18:52 **** Incremental Build of configuration debug for project simulator ****
make MODE=debug all 
make: Nothing to be done for 'all'.
11:25:22 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
Creating executable: out/gcc-release//simulator
12:15:37 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
FullNode.cpp:1025:6: error: no declaration matches ‘void FullNode::removeInFlight(std::string, std::string)’
 1025 | void FullNode::removeInFlight(std::string paymentHash, std::string nextHop) {
      |      ^~~~~~~~
FullNode.cpp:1025:6: note: no functions named ‘void FullNode::removeInFlight(std::string, std::string)’
FullNode.cpp:15:7: note: ‘class FullNode’ defined here
   15 | class FullNode : public cSimpleModule {
      |       ^~~~~~~~
FullNode.cpp: In member function ‘virtual void FullNode::commitUpdateFulfillHTLC(std::string, std::string)’:
FullNode.cpp:1081:43: error: ‘value’ was not declared in this scope
 1081 |         tryUpdatePaymentChannel(neighbor, value, increase);
      |                                           ^~~~~
FullNode.cpp:1081:50: error: ‘increase’ was not declared in this scope
 1081 |         tryUpdatePaymentChannel(neighbor, value, increase);
      |                                                  ^~~~~~~~
make: *** [Makefile:131: out/gcc-release//FullNode.o] Error 1
"make MODE=release all" terminated with exit code 2. Build might be incomplete.
12:21:58 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
HTLC.cpp
Creating executable: out/gcc-release//simulator
12:35:34 **** Incremental Build of configuration debug for project simulator ****
make MODE=debug all 
FullNode.cpp
FullNode.cpp: In member function ‘virtual void FullNode::handleMessage(omnetpp::cMessage*)’:
FullNode.cpp:637:21: warning: unused variable ‘htlctype’ [-Wunused-variable]
  637 |                 int htlctype = htlc->getType();
      |                     ^~~~~~~~
FullNode.cpp:694:17: warning: unused variable ‘batchSize’ [-Wunused-variable]
  694 |             int batchSize = _paymentChannels[sender].getPendingBatchSize();
      |                 ^~~~~~~~~
FullNode.cpp: In member function ‘virtual double FullNode::getCapacityAfterPendingHTLCs(std::string)’:
FullNode.cpp:747:9: warning: unused variable ‘batchSize’ [-Wunused-variable]
  747 |     int batchSize = _paymentChannels[nodeName].getPendingBatchSize();
      |         ^~~~~~~~~
FullNode.cpp: In member function ‘virtual void FullNode::refreshDisplay() const’:
FullNode.cpp:764:18: warning: unused variable ‘neighborMod’ [-Wunused-variable]
  764 |         cModule* neighborMod = getModuleByPath(neighborPath.c_str());
      |                  ^~~~~~~~~~~
HTLC.cpp
Creating executable: out/gcc-debug//simulator_dbg
12:41:43 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
Creating executable: out/gcc-release//simulator
12:43:40 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
Creating executable: out/gcc-release//simulator
12:48:13 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
FullNode.cpp: In member function ‘virtual void FullNode::sendFirstFailHTLC(std::string, std::string)’:
FullNode.cpp:996:55: error: cannot convert ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’} to ‘const char*’
  996 |     firstFailHTLC->setErrorReason(htlc->getErrorReason());
      |                                   ~~~~~~~~~~~~~~~~~~~~^~
      |                                                       |
      |                                                       std::string {aka std::__cxx11::basic_string<char>}
In file included from HTLC.h:5,
                 from PaymentChannel.h:7,
                 from FullNode.cpp:8:
updateFailHTLC_m.h:64:46: note:   initializing argument 1 of ‘virtual void UpdateFailHTLC::setErrorReason(const char*)’
   64 |     virtual void setErrorReason(const char * errorReason);
      |                                 ~~~~~~~~~~~~~^~~~~~~~~~~
make: *** [Makefile:131: out/gcc-release//FullNode.o] Error 1
"make MODE=release all" terminated with exit code 2. Build might be incomplete.
12:48:33 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
Creating executable: out/gcc-release//simulator
12:49:17 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
make: Nothing to be done for 'all'.
12:49:59 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
make: Nothing to be done for 'all'.
12:50:21 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
make: Nothing to be done for 'all'.
12:50:37 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
make: Nothing to be done for 'all'.
12:51:42 **** Incremental Build of configuration debug for project simulator ****
make MODE=debug all 
FullNode.cpp
FullNode.cpp: In member function ‘virtual void FullNode::handleMessage(omnetpp::cMessage*)’:
FullNode.cpp:638:21: warning: unused variable ‘htlctype’ [-Wunused-variable]
  638 |                 int htlctype = htlc->getType();
      |                     ^~~~~~~~
FullNode.cpp:695:17: warning: unused variable ‘batchSize’ [-Wunused-variable]
  695 |             int batchSize = _paymentChannels[sender].getPendingBatchSize();
      |                 ^~~~~~~~~
FullNode.cpp: In member function ‘virtual double FullNode::getCapacityAfterPendingHTLCs(std::string)’:
FullNode.cpp:748:9: warning: unused variable ‘batchSize’ [-Wunused-variable]
  748 |     int batchSize = _paymentChannels[nodeName].getPendingBatchSize();
      |         ^~~~~~~~~
FullNode.cpp: In member function ‘virtual void FullNode::refreshDisplay() const’:
FullNode.cpp:765:18: warning: unused variable ‘neighborMod’ [-Wunused-variable]
  765 |         cModule* neighborMod = getModuleByPath(neighborPath.c_str());
      |                  ^~~~~~~~~~~
Creating executable: out/gcc-debug//simulator_dbg
12:54:12 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
make: Nothing to be done for 'all'.
12:54:16 **** Incremental Build of configuration debug for project simulator ****
make MODE=debug all 
make: Nothing to be done for 'all'.
12:57:59 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
Creating executable: out/gcc-release//simulator
12:58:19 **** Incremental Build of configuration debug for project simulator ****
make MODE=debug all 
FullNode.cpp
FullNode.cpp: In member function ‘virtual void FullNode::handleMessage(omnetpp::cMessage*)’:
FullNode.cpp:642:21: warning: unused variable ‘htlctype’ [-Wunused-variable]
  642 |                 int htlctype = htlc->getType();
      |                     ^~~~~~~~
FullNode.cpp:699:17: warning: unused variable ‘batchSize’ [-Wunused-variable]
  699 |             int batchSize = _paymentChannels[sender].getPendingBatchSize();
      |                 ^~~~~~~~~
FullNode.cpp: In member function ‘virtual double FullNode::getCapacityAfterPendingHTLCs(std::string)’:
FullNode.cpp:752:9: warning: unused variable ‘batchSize’ [-Wunused-variable]
  752 |     int batchSize = _paymentChannels[nodeName].getPendingBatchSize();
      |         ^~~~~~~~~
FullNode.cpp: In member function ‘virtual void FullNode::refreshDisplay() const’:
FullNode.cpp:769:18: warning: unused variable ‘neighborMod’ [-Wunused-variable]
  769 |         cModule* neighborMod = getModuleByPath(neighborPath.c_str());
      |                  ^~~~~~~~~~~
Creating executable: out/gcc-debug//simulator_dbg
13:03:47 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
Creating executable: out/gcc-release//simulator
13:11:10 **** Incremental Build of configuration debug for project simulator ****
make MODE=debug all 
FullNode.cpp
FullNode.cpp: In member function ‘virtual void FullNode::handleMessage(omnetpp::cMessage*)’:
FullNode.cpp:639:21: warning: unused variable ‘htlctype’ [-Wunused-variable]
  639 |                 int htlctype = htlc->getType();
      |                     ^~~~~~~~
FullNode.cpp:696:17: warning: unused variable ‘batchSize’ [-Wunused-variable]
  696 |             int batchSize = _paymentChannels[sender].getPendingBatchSize();
      |                 ^~~~~~~~~
Creating executable: out/gcc-debug//simulator_dbg
14:22:10 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
MSGC: HTLCRefused.msg
FullNode.cpp
FullNode.cpp:930:6: error: no declaration matches ‘void FullNode::sendFirstFulfillHTLC(HTLC*, std::string)’
  930 | void FullNode::sendFirstFulfillHTLC (HTLC *htlc, std::string firstHop) {
      |      ^~~~~~~~
FullNode.cpp:42:22: note: candidate is: ‘virtual void FullNode::sendFirstFulfillHTLC(std::string, std::string)’
   42 |         virtual void sendFirstFulfillHTLC (std::string paymentHash, std::string firstHop);
      |                      ^~~~~~~~~~~~~~~~~~~~
FullNode.cpp:15:7: note: ‘class FullNode’ defined here
   15 | class FullNode : public cSimpleModule {
      |       ^~~~~~~~
FullNode.cpp: In member function ‘virtual void FullNode::commitUpdateAddHTLC(HTLC*, std::string)’:
FullNode.cpp:1042:34: error: cannot convert ‘HTLC*’ to ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’}
 1042 |             sendFirstFulfillHTLC(htlc, neighbor);
      |                                  ^~~~
      |                                  |
      |                                  HTLC*
FullNode.cpp:42:56: note:   initializing argument 1 of ‘virtual void FullNode::sendFirstFulfillHTLC(std::string, std::string)’
   42 |         virtual void sendFirstFulfillHTLC (std::string paymentHash, std::string firstHop);
      |                                            ~~~~~~~~~~~~^~~~~~~~~~~
make: *** [Makefile:131: out/gcc-release//FullNode.o] Error 1
"make MODE=release all" terminated with exit code 2. Build might be incomplete.
14:23:23 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
FullNode.cpp: In member function ‘virtual void FullNode::handleMessage(omnetpp::cMessage*)’:
FullNode.cpp:431:35: error: cannot convert ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’} to ‘HTLC*’
  431 |                 sendFirstFailHTLC(paymentHash, nextHop);
      |                                   ^~~~~~~~~~~
      |                                   |
      |                                   std::string {aka std::__cxx11::basic_string<char>}
FullNode.cpp:43:47: note:   initializing argument 1 of ‘virtual void FullNode::sendFirstFailHTLC(HTLC*, std::string)’
   43 |         virtual void sendFirstFailHTLC (HTLC *htlc, std::string firstHop);
      |                                         ~~~~~~^~~~
FullNode.cpp: In member function ‘virtual void FullNode::sendFirstFailHTLC(HTLC*, std::string)’:
FullNode.cpp:979:52: error: ‘paymentHash’ was not declared in this scope
  979 |     BaseMessage *storedBaseMsg = _myStoredMessages[paymentHash];
      |                                                    ^~~~~~~~~~~
FullNode.cpp:981:11: error: declaration of ‘HTLC* htlc’ shadows a parameter
  981 |     HTLC *htlc = _paymentChannels[firstHop].getPendingHTLC(paymentHash);
      |           ^~~~
FullNode.cpp:974:41: note: ‘HTLC* htlc’ previously declared here
  974 | void FullNode::sendFirstFailHTLC (HTLC *htlc, std::string firstHop) {
      |                                   ~~~~~~^~~~
make: *** [Makefile:131: out/gcc-release//FullNode.o] Error 1
"make MODE=release all" terminated with exit code 2. Build might be incomplete.
14:27:46 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
FullNode.cpp: In member function ‘virtual void FullNode::handleMessage(omnetpp::cMessage*)’:
FullNode.cpp:410:52: error: cannot convert ‘const char*’ to ‘double’ in initialization
  410 |             double value = HTLCRefusedMsg->getValue();
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~^~
      |                                                    |
      |                                                    const char*
FullNode.cpp:433:42: error: cannot convert ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’} to ‘const char*’
  433 |                 failHTLC->setPaymentHash(paymentHash);
      |                                          ^~~~~~~~~~~
      |                                          |
      |                                          std::string {aka std::__cxx11::basic_string<char>}
In file included from HTLC.h:5,
                 from PaymentChannel.h:7,
                 from FullNode.cpp:8:
updateFailHTLC_m.h:62:46: note:   initializing argument 1 of ‘virtual void UpdateFailHTLC::setPaymentHash(const char*)’
   62 |     virtual void setPaymentHash(const char * paymentHash);
      |                                 ~~~~~~~~~~~~~^~~~~~~~~~~
FullNode.cpp:435:42: error: cannot convert ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’} to ‘const char*’
  435 |                 failHTLC->setErrorReason(errorReason);
      |                                          ^~~~~~~~~~~
      |                                          |
      |                                          std::string {aka std::__cxx11::basic_string<char>}
In file included from HTLC.h:5,
                 from PaymentChannel.h:7,
                 from FullNode.cpp:8:
updateFailHTLC_m.h:64:46: note:   initializing argument 1 of ‘virtual void UpdateFailHTLC::setErrorReason(const char*)’
   64 |     virtual void setErrorReason(const char * errorReason);
      |                                 ~~~~~~~~~~~~~^~~~~~~~~~~
FullNode.cpp:438:35: error: cannot convert ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’} to ‘HTLC*’
  438 |                 sendFirstFailHTLC(paymentHash, nextHop);
      |                                   ^~~~~~~~~~~
      |                                   |
      |                                   std::string {aka std::__cxx11::basic_string<char>}
FullNode.cpp:43:47: note:   initializing argument 1 of ‘virtual void FullNode::sendFirstFailHTLC(HTLC*, std::string)’
   43 |         virtual void sendFirstFailHTLC (HTLC *htlc, std::string firstHop);
      |                                         ~~~~~~^~~~
FullNode.cpp: In member function ‘virtual void FullNode::sendFirstFailHTLC(HTLC*, std::string)’:
FullNode.cpp:986:52: error: ‘paymentHash’ was not declared in this scope
  986 |     BaseMessage *storedBaseMsg = _myStoredMessages[paymentHash];
      |                                                    ^~~~~~~~~~~
make: *** [Makefile:131: out/gcc-release//FullNode.o] Error 1
"make MODE=release all" terminated with exit code 2. Build might be incomplete.
14:27:57 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
FullNode.cpp: In member function ‘virtual void FullNode::handleMessage(omnetpp::cMessage*)’:
FullNode.cpp:410:52: error: cannot convert ‘const char*’ to ‘double’ in initialization
  410 |             double value = HTLCRefusedMsg->getValue();
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~^~
      |                                                    |
      |                                                    const char*
FullNode.cpp:433:42: error: cannot convert ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’} to ‘const char*’
  433 |                 failHTLC->setPaymentHash(paymentHash);
      |                                          ^~~~~~~~~~~
      |                                          |
      |                                          std::string {aka std::__cxx11::basic_string<char>}
In file included from HTLC.h:5,
                 from PaymentChannel.h:7,
                 from FullNode.cpp:8:
updateFailHTLC_m.h:62:46: note:   initializing argument 1 of ‘virtual void UpdateFailHTLC::setPaymentHash(const char*)’
   62 |     virtual void setPaymentHash(const char * paymentHash);
      |                                 ~~~~~~~~~~~~~^~~~~~~~~~~
FullNode.cpp:435:42: error: cannot convert ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’} to ‘const char*’
  435 |                 failHTLC->setErrorReason(errorReason);
      |                                          ^~~~~~~~~~~
      |                                          |
      |                                          std::string {aka std::__cxx11::basic_string<char>}
In file included from HTLC.h:5,
                 from PaymentChannel.h:7,
                 from FullNode.cpp:8:
updateFailHTLC_m.h:64:46: note:   initializing argument 1 of ‘virtual void UpdateFailHTLC::setErrorReason(const char*)’
   64 |     virtual void setErrorReason(const char * errorReason);
      |                                 ~~~~~~~~~~~~~^~~~~~~~~~~
FullNode.cpp:438:35: error: cannot convert ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’} to ‘HTLC*’
  438 |                 sendFirstFailHTLC(paymentHash, nextHop);
      |                                   ^~~~~~~~~~~
      |                                   |
      |                                   std::string {aka std::__cxx11::basic_string<char>}
FullNode.cpp:43:47: note:   initializing argument 1 of ‘virtual void FullNode::sendFirstFailHTLC(HTLC*, std::string)’
   43 |         virtual void sendFirstFailHTLC (HTLC *htlc, std::string firstHop);
      |                                         ~~~~~~^~~~
FullNode.cpp: In member function ‘virtual void FullNode::sendFirstFailHTLC(HTLC*, std::string)’:
FullNode.cpp:999:35: error: ‘paymentHash’ was not declared in this scope
  999 |     firstFailHTLC->setPaymentHash(paymentHash.c_str());
      |                                   ^~~~~~~~~~~
make: *** [Makefile:131: out/gcc-release//FullNode.o] Error 1
"make MODE=release all" terminated with exit code 2. Build might be incomplete.
14:29:24 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
MSGC: HTLCRefused.msg
FullNode.cpp
FullNode.cpp: In member function ‘virtual void FullNode::handleMessage(omnetpp::cMessage*)’:
FullNode.cpp:438:35: error: cannot convert ‘std::string’ {aka ‘std::__cxx11::basic_string<char>’} to ‘HTLC*’
  438 |                 sendFirstFailHTLC(paymentHash, nextHop);
      |                                   ^~~~~~~~~~~
      |                                   |
      |                                   std::string {aka std::__cxx11::basic_string<char>}
FullNode.cpp:43:47: note:   initializing argument 1 of ‘virtual void FullNode::sendFirstFailHTLC(HTLC*, std::string)’
   43 |         virtual void sendFirstFailHTLC (HTLC *htlc, std::string firstHop);
      |                                         ~~~~~~^~~~
make: *** [Makefile:131: out/gcc-release//FullNode.o] Error 1
"make MODE=release all" terminated with exit code 2. Build might be incomplete.
14:29:46 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
HTLCRefused_m.cpp
Creating executable: out/gcc-release//simulator
14:33:51 **** Incremental Build of configuration debug for project simulator ****
make MODE=debug all 
FullNode.cpp
FullNode.cpp: In member function ‘virtual void FullNode::handleMessage(omnetpp::cMessage*)’:
FullNode.cpp:646:21: warning: unused variable ‘htlctype’ [-Wunused-variable]
  646 |                 int htlctype = htlc->getType();
      |                     ^~~~~~~~
FullNode.cpp:703:17: warning: unused variable ‘batchSize’ [-Wunused-variable]
  703 |             int batchSize = _paymentChannels[sender].getPendingBatchSize();
      |                 ^~~~~~~~~
HTLCRefused_m.cpp
Creating executable: out/gcc-debug//simulator_dbg
14:35:32 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
Creating executable: out/gcc-release//simulator
14:37:24 **** Incremental Build of configuration debug for project simulator ****
make MODE=debug all 
FullNode.cpp
FullNode.cpp: In member function ‘virtual void FullNode::handleMessage(omnetpp::cMessage*)’:
FullNode.cpp:646:21: warning: unused variable ‘htlctype’ [-Wunused-variable]
  646 |                 int htlctype = htlc->getType();
      |                     ^~~~~~~~
FullNode.cpp:703:17: warning: unused variable ‘batchSize’ [-Wunused-variable]
  703 |             int batchSize = _paymentChannels[sender].getPendingBatchSize();
      |                 ^~~~~~~~~
Creating executable: out/gcc-debug//simulator_dbg
14:46:19 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
FullNode.cpp: In member function ‘virtual void FullNode::handleMessage(omnetpp::cMessage*)’:
FullNode.cpp:404:31: error: ‘paymentHash’ was not declared in this scope
  404 |             _myStoredMessages[paymentHash] = baseMsg;
      |                               ^~~~~~~~~~~
make: *** [Makefile:131: out/gcc-release//FullNode.o] Error 1
"make MODE=release all" terminated with exit code 2. Build might be incomplete.
14:48:48 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
Creating executable: out/gcc-release//simulator
14:51:04 **** Incremental Build of configuration debug for project simulator ****
make MODE=debug all 
FullNode.cpp
FullNode.cpp: In member function ‘virtual void FullNode::handleMessage(omnetpp::cMessage*)’:
FullNode.cpp:647:21: warning: unused variable ‘htlctype’ [-Wunused-variable]
  647 |                 int htlctype = htlc->getType();
      |                     ^~~~~~~~
FullNode.cpp:704:17: warning: unused variable ‘batchSize’ [-Wunused-variable]
  704 |             int batchSize = _paymentChannels[sender].getPendingBatchSize();
      |                 ^~~~~~~~~
Creating executable: out/gcc-debug//simulator_dbg
14:57:13 **** Incremental Build of configuration debug for project simulator ****
make MODE=debug all 
make: Nothing to be done for 'all'.
14:59:03 **** Incremental Build of configuration debug for project simulator ****
make MODE=debug all 
make: Nothing to be done for 'all'.
15:18:12 **** Incremental Build of configuration debug for project simulator ****
make MODE=debug all 
FullNode.cpp
FullNode.cpp: In member function ‘virtual void FullNode::handleMessage(omnetpp::cMessage*)’:
FullNode.cpp:646:21: warning: unused variable ‘htlctype’ [-Wunused-variable]
  646 |                 int htlctype = htlc->getType();
      |                     ^~~~~~~~
FullNode.cpp:703:17: warning: unused variable ‘batchSize’ [-Wunused-variable]
  703 |             int batchSize = _paymentChannels[sender].getPendingBatchSize();
      |                 ^~~~~~~~~
Creating executable: out/gcc-debug//simulator_dbg
15:22:12 **** Incremental Build of configuration debug for project simulator ****
make MODE=debug all 
FullNode.cpp
FullNode.cpp: In member function ‘virtual void FullNode::handleMessage(omnetpp::cMessage*)’:
FullNode.cpp:648:21: warning: unused variable ‘htlctype’ [-Wunused-variable]
  648 |                 int htlctype = htlc->getType();
      |                     ^~~~~~~~
FullNode.cpp:705:17: warning: unused variable ‘batchSize’ [-Wunused-variable]
  705 |             int batchSize = _paymentChannels[sender].getPendingBatchSize();
      |                 ^~~~~~~~~
Creating executable: out/gcc-debug//simulator_dbg
15:25:36 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
Creating executable: out/gcc-release//simulator
15:26:02 **** Incremental Build of configuration debug for project simulator ****
make MODE=debug all 
FullNode.cpp
Creating executable: out/gcc-debug//simulator_dbg
15:31:43 **** Incremental Build of configuration debug for project simulator ****
make MODE=debug all 
FullNode.cpp
FullNode.cpp: In member function ‘virtual void FullNode::sendFirstFailHTLC(HTLC*, std::string)’:
FullNode.cpp:1018:50: error: ‘path’ was not declared in this scope
 1018 |     EV << "Sending first UPDATE_FAIL_HTLC to " + path[(newMessage->getHopCount())] + "for payment hash " + paymentHash + "\n";
      |                                                  ^~~~
make: *** [Makefile:131: out/gcc-debug//FullNode.o] Error 1
"make MODE=debug all" terminated with exit code 2. Build might be incomplete.
15:31:57 **** Incremental Build of configuration debug for project simulator ****
make MODE=debug all 
FullNode.cpp
Creating executable: out/gcc-debug//simulator_dbg
15:33:39 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
Creating executable: out/gcc-release//simulator
15:35:49 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
make: Nothing to be done for 'all'.
15:36:09 **** Incremental Build of configuration debug for project simulator ****
make MODE=debug all 
make: Nothing to be done for 'all'.
17:25:15 **** Incremental Build of configuration debug for project simulator ****
make MODE=debug all 
make: Nothing to be done for 'all'.
17:26:23 **** Incremental Build of configuration debug for project simulator ****
make MODE=debug all 
make: Nothing to be done for 'all'.
17:27:37 **** Incremental Build of configuration debug for project simulator ****
make MODE=debug all 
FullNode.cpp
FullNode.cpp: In member function ‘virtual void FullNode::handleMessage(omnetpp::cMessage*)’:
FullNode.cpp:521:21: warning: unused variable ‘hopCount’ [-Wunused-variable]
  521 |                 int hopCount = baseMsg->getHopCount();
      |                     ^~~~~~~~
Creating executable: out/gcc-debug//simulator_dbg
17:29:54 **** Incremental Build of configuration debug for project simulator ****
make MODE=debug all 
FullNode.cpp
FullNode.cpp: In member function ‘virtual void FullNode::handleMessage(omnetpp::cMessage*)’:
FullNode.cpp:521:21: warning: unused variable ‘hopCount’ [-Wunused-variable]
  521 |                 int hopCount = baseMsg->getHopCount();
      |                     ^~~~~~~~
Creating executable: out/gcc-debug//simulator_dbg
17:40:00 **** Incremental Build of configuration debug for project simulator ****
make MODE=debug all 
FullNode.cpp
FullNode.cpp: In member function ‘virtual void FullNode::handleMessage(omnetpp::cMessage*)’:
FullNode.cpp:521:21: warning: unused variable ‘hopCount’ [-Wunused-variable]
  521 |                 int hopCount = baseMsg->getHopCount();
      |                     ^~~~~~~~
Creating executable: out/gcc-debug//simulator_dbg
17:40:54 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
Creating executable: out/gcc-release//simulator
17:45:32 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
FullNode.cpp: In member function ‘virtual void FullNode::handleMessage(omnetpp::cMessage*)’:
FullNode.cpp:664:25: error: ‘commitUpdateFailHTLC’ was not declared in this scope; did you mean ‘commitUpdateAddHTLC’?
  664 |                         commitUpdateFailHTLC(htlc, sender);
      |                         ^~~~~~~~~~~~~~~~~~~~
      |                         commitUpdateAddHTLC
FullNode.cpp:721:25: error: ‘commitUpdateFailHTLC’ was not declared in this scope; did you mean ‘commitUpdateAddHTLC’?
  721 |                         commitUpdateFailHTLC(htlc, sender);
      |                         ^~~~~~~~~~~~~~~~~~~~
      |                         commitUpdateAddHTLC
FullNode.cpp: At global scope:
FullNode.cpp:1108:6: error: no declaration matches ‘void FullNode::commitUpdateFailHTLC(HTLC*, std::string)’
 1108 | void FullNode::commitUpdateFailHTLC (HTLC *htlc, std::string neighbor) {
      |      ^~~~~~~~
FullNode.cpp:1108:6: note: no functions named ‘void FullNode::commitUpdateFailHTLC(HTLC*, std::string)’
FullNode.cpp:15:7: note: ‘class FullNode’ defined here
   15 | class FullNode : public cSimpleModule {
      |       ^~~~~~~~
make: *** [Makefile:131: out/gcc-release//FullNode.o] Error 1
"make MODE=release all" terminated with exit code 2. Build might be incomplete.
17:46:05 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
Creating executable: out/gcc-release//simulator
17:48:43 **** Incremental Build of configuration debug for project simulator ****
make MODE=debug all 
FullNode.cpp
FullNode.cpp: In member function ‘virtual void FullNode::handleMessage(omnetpp::cMessage*)’:
FullNode.cpp:522:21: warning: unused variable ‘hopCount’ [-Wunused-variable]
  522 |                 int hopCount = baseMsg->getHopCount();
      |                     ^~~~~~~~
Creating executable: out/gcc-debug//simulator_dbg
17:49:56 **** Incremental Build of configuration debug for project simulator ****
make MODE=debug all 
make: Nothing to be done for 'all'.
17:52:08 **** Incremental Build of configuration debug for project simulator ****
make MODE=debug all 
FullNode.cpp
FullNode.cpp: In member function ‘virtual void FullNode::handleMessage(omnetpp::cMessage*)’:
FullNode.cpp:522:21: warning: unused variable ‘hopCount’ [-Wunused-variable]
  522 |                 int hopCount = baseMsg->getHopCount();
      |                     ^~~~~~~~
FullNode.cpp:649:24: warning: unused variable ‘value’ [-Wunused-variable]
  649 |                 double value = htlc->getValue();
      |                        ^~~~~
Creating executable: out/gcc-debug//simulator_dbg
17:53:34 **** Incremental Build of configuration debug for project simulator ****
make MODE=debug all 
make: Nothing to be done for 'all'.
17:57:30 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
Creating executable: out/gcc-release//simulator
17:59:35 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
make: Nothing to be done for 'all'.
18:03:22 **** Incremental Build of configuration debug for project simulator ****
make MODE=debug all 
FullNode.cpp
FullNode.cpp: In member function ‘virtual void FullNode::handleMessage(omnetpp::cMessage*)’:
FullNode.cpp:524:21: warning: unused variable ‘hopCount’ [-Wunused-variable]
  524 |                 int hopCount = baseMsg->getHopCount();
      |                     ^~~~~~~~
FullNode.cpp:651:24: warning: unused variable ‘value’ [-Wunused-variable]
  651 |                 double value = htlc->getValue();
      |                        ^~~~~
FullNode.cpp: In member function ‘virtual void FullNode::sendFirstFailHTLC(HTLC*, std::string)’:
FullNode.cpp:993:12: warning: unused variable ‘value’ [-Wunused-variable]
  993 |     double value = htlc->getValue();
      |            ^~~~~
Creating executable: out/gcc-debug//simulator_dbg
18:04:33 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
Creating executable: out/gcc-release//simulator
18:09:27 **** Incremental Build of configuration debug for project simulator ****
make MODE=debug all 
FullNode.cpp
FullNode.cpp: In member function ‘virtual void FullNode::handleMessage(omnetpp::cMessage*)’:
FullNode.cpp:524:21: warning: unused variable ‘hopCount’ [-Wunused-variable]
  524 |                 int hopCount = baseMsg->getHopCount();
      |                     ^~~~~~~~
FullNode.cpp:651:24: warning: unused variable ‘value’ [-Wunused-variable]
  651 |                 double value = htlc->getValue();
      |                        ^~~~~
FullNode.cpp: In member function ‘virtual void FullNode::sendFirstFailHTLC(HTLC*, std::string)’:
FullNode.cpp:993:12: warning: unused variable ‘value’ [-Wunused-variable]
  993 |     double value = htlc->getValue();
      |            ^~~~~
Creating executable: out/gcc-debug//simulator_dbg
18:10:11 **** Incremental Build of configuration debug for project simulator ****
make MODE=debug all 
make: Nothing to be done for 'all'.
18:12:06 **** Incremental Build of configuration debug for project simulator ****
make MODE=debug all 
make: Nothing to be done for 'all'.
18:17:05 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
FullNode.cpp: In member function ‘virtual void FullNode::handleMessage(omnetpp::cMessage*)’:
FullNode.cpp:654:130: error: expected primary-expression before ‘)’ token
  654 |                 if (!_paymentChannels[sender].getPendingHTLC(paymentHash) && !_paymentChannels[sender].getInFlight(paymentHash)) ){
      |                                                                                                                                  ^
make: *** [Makefile:131: out/gcc-release//FullNode.o] Error 1
"make MODE=release all" terminated with exit code 2. Build might be incomplete.
18:17:29 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
Creating executable: out/gcc-release//simulator
18:18:44 **** Incremental Build of configuration debug for project simulator ****
make MODE=debug all 
FullNode.cpp
FullNode.cpp: In member function ‘virtual void FullNode::handleMessage(omnetpp::cMessage*)’:
FullNode.cpp:524:21: warning: unused variable ‘hopCount’ [-Wunused-variable]
  524 |                 int hopCount = baseMsg->getHopCount();
      |                     ^~~~~~~~
FullNode.cpp:651:24: warning: unused variable ‘value’ [-Wunused-variable]
  651 |                 double value = htlc->getValue();
      |                        ^~~~~
FullNode.cpp: In member function ‘virtual void FullNode::sendFirstFailHTLC(HTLC*, std::string)’:
FullNode.cpp:993:12: warning: unused variable ‘value’ [-Wunused-variable]
  993 |     double value = htlc->getValue();
      |            ^~~~~
Creating executable: out/gcc-debug//simulator_dbg
18:21:05 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
Creating executable: out/gcc-release//simulator
18:23:35 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
make: Nothing to be done for 'all'.
18:41:37 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
make: Nothing to be done for 'all'.
18:45:47 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
make: Nothing to be done for 'all'.
18:49:00 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
Creating executable: out/gcc-release//simulator
18:50:31 **** Incremental Build of configuration debug for project simulator ****
make MODE=debug all 
FullNode.cpp
FullNode.cpp: In member function ‘virtual void FullNode::handleMessage(omnetpp::cMessage*)’:
FullNode.cpp:524:21: warning: unused variable ‘hopCount’ [-Wunused-variable]
  524 |                 int hopCount = baseMsg->getHopCount();
      |                     ^~~~~~~~
FullNode.cpp:651:24: warning: unused variable ‘value’ [-Wunused-variable]
  651 |                 double value = htlc->getValue();
      |                        ^~~~~
FullNode.cpp: In member function ‘virtual void FullNode::sendFirstFailHTLC(HTLC*, std::string)’:
FullNode.cpp:993:12: warning: unused variable ‘value’ [-Wunused-variable]
  993 |     double value = htlc->getValue();
      |            ^~~~~
Creating executable: out/gcc-debug//simulator_dbg
18:51:29 **** Incremental Build of configuration debug for project simulator ****
make MODE=debug all 
make: Nothing to be done for 'all'.
18:58:32 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
Creating executable: out/gcc-release//simulator
19:03:55 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
Creating executable: out/gcc-release//simulator
19:05:17 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
make: Nothing to be done for 'all'.
19:08:34 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
make: Nothing to be done for 'all'.
19:19:22 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
make: Nothing to be done for 'all'.
19:28:18 **** Incremental Build of configuration debug for project simulator ****
make MODE=debug all 
FullNode.cpp
FullNode.cpp: In member function ‘virtual void FullNode::handleMessage(omnetpp::cMessage*)’:
FullNode.cpp:524:21: warning: unused variable ‘hopCount’ [-Wunused-variable]
  524 |                 int hopCount = baseMsg->getHopCount();
      |                     ^~~~~~~~
FullNode.cpp:652:38: error: cannot convert ‘HTLC::getType’ from type ‘int (HTLC::)()’ to type ‘int’
  652 |                 int htlcType = htlc->getType;
      |                                      ^~~~~~~
FullNode.cpp:651:24: warning: unused variable ‘value’ [-Wunused-variable]
  651 |                 double value = htlc->getValue();
      |                        ^~~~~
FullNode.cpp:652:21: warning: unused variable ‘htlcType’ [-Wunused-variable]
  652 |                 int htlcType = htlc->getType;
      |                     ^~~~~~~~
FullNode.cpp: In member function ‘virtual void FullNode::sendFirstFailHTLC(HTLC*, std::string)’:
FullNode.cpp:995:12: warning: unused variable ‘value’ [-Wunused-variable]
  995 |     double value = htlc->getValue();
      |            ^~~~~
make: *** [Makefile:131: out/gcc-debug//FullNode.o] Error 1
"make MODE=debug all" terminated with exit code 2. Build might be incomplete.
19:28:30 **** Incremental Build of configuration debug for project simulator ****
make MODE=debug all 
FullNode.cpp
FullNode.cpp: In member function ‘virtual void FullNode::handleMessage(omnetpp::cMessage*)’:
FullNode.cpp:524:21: warning: unused variable ‘hopCount’ [-Wunused-variable]
  524 |                 int hopCount = baseMsg->getHopCount();
      |                     ^~~~~~~~
FullNode.cpp:651:24: warning: unused variable ‘value’ [-Wunused-variable]
  651 |                 double value = htlc->getValue();
      |                        ^~~~~
FullNode.cpp:652:21: warning: unused variable ‘htlcType’ [-Wunused-variable]
  652 |                 int htlcType = htlc->getType();
      |                     ^~~~~~~~
FullNode.cpp: In member function ‘virtual void FullNode::sendFirstFailHTLC(HTLC*, std::string)’:
FullNode.cpp:995:12: warning: unused variable ‘value’ [-Wunused-variable]
  995 |     double value = htlc->getValue();
      |            ^~~~~
Creating executable: out/gcc-debug//simulator_dbg
19:31:48 **** Incremental Build of configuration debug for project simulator ****
make MODE=debug all 
make: Nothing to be done for 'all'.
19:31:54 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
Creating executable: out/gcc-release//simulator
19:32:33 **** Incremental Build of configuration debug for project simulator ****
make MODE=debug all 
make: Nothing to be done for 'all'.
19:33:11 **** Incremental Build of configuration debug for project simulator ****
make MODE=debug all 
make: Nothing to be done for 'all'.
19:35:47 **** Incremental Build of configuration debug for project simulator ****
make MODE=debug all 
make: Nothing to be done for 'all'.
19:35:59 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
make: Nothing to be done for 'all'.
19:36:04 **** Incremental Build of configuration debug for project simulator ****
make MODE=debug all 
make: Nothing to be done for 'all'.
19:42:32 **** Incremental Build of configuration debug for project simulator ****
make MODE=debug all 
FullNode.cpp
FullNode.cpp: In member function ‘virtual void FullNode::handleMessage(omnetpp::cMessage*)’:
FullNode.cpp:524:21: warning: unused variable ‘hopCount’ [-Wunused-variable]
  524 |                 int hopCount = baseMsg->getHopCount();
      |                     ^~~~~~~~
FullNode.cpp:651:24: warning: unused variable ‘value’ [-Wunused-variable]
  651 |                 double value = htlc->getValue();
      |                        ^~~~~
FullNode.cpp:652:21: warning: unused variable ‘htlcType’ [-Wunused-variable]
  652 |                 int htlcType = htlc->getType();
      |                     ^~~~~~~~
FullNode.cpp: In member function ‘virtual void FullNode::sendFirstFailHTLC(HTLC*, std::string)’:
FullNode.cpp:995:12: warning: unused variable ‘value’ [-Wunused-variable]
  995 |     double value = htlc->getValue();
      |            ^~~~~
Creating executable: out/gcc-debug//simulator_dbg
19:44:39 **** Incremental Build of configuration debug for project simulator ****
make MODE=debug all 
FullNode.cpp
FullNode.cpp: In member function ‘virtual void FullNode::handleMessage(omnetpp::cMessage*)’:
FullNode.cpp:524:21: warning: unused variable ‘hopCount’ [-Wunused-variable]
  524 |                 int hopCount = baseMsg->getHopCount();
      |                     ^~~~~~~~
FullNode.cpp:651:24: warning: unused variable ‘value’ [-Wunused-variable]
  651 |                 double value = htlc->getValue();
      |                        ^~~~~
FullNode.cpp:652:21: warning: unused variable ‘htlcType’ [-Wunused-variable]
  652 |                 int htlcType = htlc->getType();
      |                     ^~~~~~~~
FullNode.cpp: In member function ‘virtual void FullNode::sendFirstFailHTLC(HTLC*, std::string)’:
FullNode.cpp:995:12: warning: unused variable ‘value’ [-Wunused-variable]
  995 |     double value = htlc->getValue();
      |            ^~~~~
Creating executable: out/gcc-debug//simulator_dbg
19:48:23 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
Creating executable: out/gcc-release//simulator
19:49:54 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
Creating executable: out/gcc-release//simulator
19:50:34 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
Creating executable: out/gcc-release//simulator
19:51:28 **** Incremental Build of configuration release for project simulator ****
make MODE=release all 
FullNode.cpp
Creating executable: out/gcc-release//simulator
